CQ_INDEX	examples\cmatose.c	/^enum CQ_INDEX {$/;"	g	file:
RECV_CQ_INDEX	examples\cmatose.c	/^	RECV_CQ_INDEX$/;"	e	enum:CQ_INDEX	file:
SEND_CQ_INDEX	examples\cmatose.c	/^	SEND_CQ_INDEX,$/;"	e	enum:CQ_INDEX	file:
addr_handler	examples\cmatose.c	/^static int addr_handler(struct cmatest_node *node)$/;"	f	file:
alloc_nodes	examples\cmatose.c	/^static int alloc_nodes(void)$/;"	f	file:
channel	examples\cmatose.c	/^	struct rdma_event_channel *channel;$/;"	m	struct:cmatest	typeref:struct:cmatest::rdma_event_channel	file:
cma_handler	examples\cmatose.c	/^static int cma_handler(struct rdma_cm_id *cma_id, struct rdma_cm_event *event)$/;"	f	file:
cma_id	examples\cmatose.c	/^	struct rdma_cm_id	*cma_id;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::rdma_cm_id	file:
cmatest	examples\cmatose.c	/^struct cmatest {$/;"	s	file:
cmatest_node	examples\cmatose.c	/^struct cmatest_node {$/;"	s	file:
conn_index	examples\cmatose.c	/^	int			conn_index;$/;"	m	struct:cmatest	file:
connect_error	examples\cmatose.c	/^static void connect_error(void)$/;"	f	file:
connect_events	examples\cmatose.c	/^static int connect_events(void)$/;"	f	file:
connect_handler	examples\cmatose.c	/^static int connect_handler(struct rdma_cm_id *cma_id)$/;"	f	file:
connected	examples\cmatose.c	/^	int			connected;$/;"	m	struct:cmatest_node	file:
connections	examples\cmatose.c	/^static int connections = 1;$/;"	v	file:
connects_left	examples\cmatose.c	/^	int			connects_left;$/;"	m	struct:cmatest	file:
cq	examples\cmatose.c	/^	struct ibv_cq		*cq[2];$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_cq	file:
create_message	examples\cmatose.c	/^static int create_message(struct cmatest_node *node)$/;"	f	file:
destroy_node	examples\cmatose.c	/^static void destroy_node(struct cmatest_node *node)$/;"	f	file:
destroy_nodes	examples\cmatose.c	/^static void destroy_nodes(void)$/;"	f	file:
disconnect_events	examples\cmatose.c	/^static int disconnect_events(void)$/;"	f	file:
disconnects_left	examples\cmatose.c	/^	int			disconnects_left;$/;"	m	struct:cmatest	file:
dst_addr	examples\cmatose.c	/^static char *dst_addr;$/;"	v	file:
hints	examples\cmatose.c	/^static struct rdma_addrinfo hints;$/;"	v	typeref:struct:rdma_addrinfo	file:
id	examples\cmatose.c	/^	int			id;$/;"	m	struct:cmatest_node	file:
init_node	examples\cmatose.c	/^static int init_node(struct cmatest_node *node)$/;"	f	file:
main	examples\cmatose.c	/^int main(int argc, char **argv)$/;"	f
mem	examples\cmatose.c	/^	void			*mem;$/;"	m	struct:cmatest_node	file:
message_count	examples\cmatose.c	/^static int message_count = 10;$/;"	v	file:
message_size	examples\cmatose.c	/^static int message_size = 100;$/;"	v	file:
migrate	examples\cmatose.c	/^static uint8_t migrate = 0;$/;"	v	file:
migrate_channel	examples\cmatose.c	/^static int migrate_channel(struct rdma_cm_id *listen_id)$/;"	f	file:
mr	examples\cmatose.c	/^	struct ibv_mr		*mr;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_mr	file:
nodes	examples\cmatose.c	/^	struct cmatest_node	*nodes;$/;"	m	struct:cmatest	typeref:struct:cmatest::cmatest_node	file:
pd	examples\cmatose.c	/^	struct ibv_pd		*pd;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_pd	file:
poll_cqs	examples\cmatose.c	/^static int poll_cqs(enum CQ_INDEX index)$/;"	f	file:
port	examples\cmatose.c	/^static char *port = "7471";$/;"	v	file:
post_recvs	examples\cmatose.c	/^static int post_recvs(struct cmatest_node *node)$/;"	f	file:
post_sends	examples\cmatose.c	/^static int post_sends(struct cmatest_node *node)$/;"	f	file:
rai	examples\cmatose.c	/^	struct rdma_addrinfo	*rai;$/;"	m	struct:cmatest	typeref:struct:cmatest::rdma_addrinfo	file:
route_handler	examples\cmatose.c	/^static int route_handler(struct cmatest_node *node)$/;"	f	file:
run_client	examples\cmatose.c	/^static int run_client(void)$/;"	f	file:
run_server	examples\cmatose.c	/^static int run_server(void)$/;"	f	file:
set_tos	examples\cmatose.c	/^static uint8_t set_tos = 0;$/;"	v	file:
src_addr	examples\cmatose.c	/^static char *src_addr;$/;"	v	file:
test	examples\cmatose.c	/^static struct cmatest test;$/;"	v	typeref:struct:cmatest	file:
tos	examples\cmatose.c	/^static uint8_t tos;$/;"	v	file:
INIT_LIST	examples\cmtime.c	99;"	d	file:
STEP_BIND	examples\cmtime.c	/^	STEP_BIND,$/;"	e	enum:step	file:
STEP_CNT	examples\cmtime.c	/^	STEP_CNT$/;"	e	enum:step	file:
STEP_CONNECT	examples\cmtime.c	/^	STEP_CONNECT,$/;"	e	enum:step	file:
STEP_CREATE_ID	examples\cmtime.c	/^	STEP_CREATE_ID,$/;"	e	enum:step	file:
STEP_CREATE_QP	examples\cmtime.c	/^	STEP_CREATE_QP,$/;"	e	enum:step	file:
STEP_DESTROY	examples\cmtime.c	/^	STEP_DESTROY,$/;"	e	enum:step	file:
STEP_DISCONNECT	examples\cmtime.c	/^	STEP_DISCONNECT,$/;"	e	enum:step	file:
STEP_RESOLVE_ADDR	examples\cmtime.c	/^	STEP_RESOLVE_ADDR,$/;"	e	enum:step	file:
STEP_RESOLVE_ROUTE	examples\cmtime.c	/^	STEP_RESOLVE_ROUTE,$/;"	e	enum:step	file:
__list_delete	examples\cmtime.c	/^static inline void __list_delete(struct list_head *list)$/;"	f	file:
__list_empty	examples\cmtime.c	/^static inline int __list_empty(struct work_list *list)$/;"	f	file:
__list_remove_head	examples\cmtime.c	/^static inline struct list_head *__list_remove_head(struct work_list *work_list)$/;"	f	file:
__req_handler	examples\cmtime.c	/^static void __req_handler(struct rdma_cm_id *id)$/;"	f	file:
addr_handler	examples\cmtime.c	/^static void addr_handler(struct node *n)$/;"	f	file:
alloc_nodes	examples\cmtime.c	/^static int alloc_nodes(void)$/;"	f	file:
channel	examples\cmtime.c	/^static struct rdma_event_channel *channel;$/;"	v	typeref:struct:rdma_event_channel	file:
cleanup_nodes	examples\cmtime.c	/^static void cleanup_nodes(void)$/;"	f	file:
cma_handler	examples\cmtime.c	/^static void cma_handler(struct rdma_cm_id *id, struct rdma_cm_event *event)$/;"	f	file:
completed	examples\cmtime.c	/^static volatile int completed[STEP_CNT];$/;"	v	file:
cond	examples\cmtime.c	/^	pthread_cond_t		cond;$/;"	m	struct:work_list	file:
conn_handler	examples\cmtime.c	/^static void conn_handler(struct node *n)$/;"	f	file:
conn_param	examples\cmtime.c	/^static struct rdma_conn_param conn_param;$/;"	v	typeref:struct:rdma_conn_param	file:
connections	examples\cmtime.c	/^static int connections = 100;$/;"	v	file:
diff_us	examples\cmtime.c	/^static float diff_us(struct timeval *end, struct timeval *start)$/;"	f	file:
disc_handler	examples\cmtime.c	/^static void disc_handler(struct node *n)$/;"	f	file:
disc_handler_thread	examples\cmtime.c	/^static void *disc_handler_thread(void *arg)$/;"	f	file:
disc_work	examples\cmtime.c	/^static struct work_list disc_work;$/;"	v	typeref:struct:work_list	file:
dst_addr	examples\cmtime.c	/^static char *dst_addr;$/;"	v	file:
end_perf	examples\cmtime.c	112;"	d	file:
end_time	examples\cmtime.c	114;"	d	file:
error	examples\cmtime.c	/^	int error;$/;"	m	struct:node	file:
hints	examples\cmtime.c	/^static struct rdma_addrinfo hints, *rai;$/;"	v	typeref:struct:rdma_addrinfo	file:
id	examples\cmtime.c	/^	struct rdma_cm_id	*id;$/;"	m	struct:list_head	typeref:struct:list_head::rdma_cm_id	file:
id	examples\cmtime.c	/^	struct rdma_cm_id *id;$/;"	m	struct:node	typeref:struct:node::rdma_cm_id	file:
init_qp_attr	examples\cmtime.c	/^static struct ibv_qp_init_attr init_qp_attr;$/;"	v	typeref:struct:ibv_qp_init_attr	file:
list	examples\cmtime.c	/^	struct list_head	list;$/;"	m	struct:work_list	typeref:struct:work_list::list_head	file:
list_add_tail	examples\cmtime.c	/^static inline void list_add_tail(struct work_list *work_list, struct list_head *req)$/;"	f	file:
list_empty	examples\cmtime.c	/^static inline int list_empty(struct work_list *work_list)$/;"	f	file:
list_head	examples\cmtime.c	/^struct list_head {$/;"	s	file:
list_remove_head	examples\cmtime.c	/^static inline struct list_head *list_remove_head(struct work_list *work_list)$/;"	f	file:
lock	examples\cmtime.c	/^	pthread_mutex_t		lock;$/;"	m	struct:work_list	file:
main	examples\cmtime.c	/^int main(int argc, char **argv)$/;"	f
next	examples\cmtime.c	/^	struct list_head	*next;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	file:
node	examples\cmtime.c	/^struct node {$/;"	s	file:
nodes	examples\cmtime.c	/^static struct node *nodes;$/;"	v	typeref:struct:node	file:
port	examples\cmtime.c	/^static char *port = "7471";$/;"	v	file:
prev	examples\cmtime.c	/^	struct list_head	*prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head	file:
process_events	examples\cmtime.c	/^static void *process_events(void *arg)$/;"	f	file:
rai	examples\cmtime.c	/^static struct rdma_addrinfo hints, *rai;$/;"	v	typeref:struct:	file:
req_handler_thread	examples\cmtime.c	/^static void *req_handler_thread(void *arg)$/;"	f	file:
req_work	examples\cmtime.c	/^static struct work_list req_work;$/;"	v	typeref:struct:work_list	file:
retries	examples\cmtime.c	/^	int retries;$/;"	m	struct:node	file:
retries	examples\cmtime.c	/^static int retries = 2;$/;"	v	file:
route_handler	examples\cmtime.c	/^static void route_handler(struct node *n)$/;"	f	file:
run_client	examples\cmtime.c	/^static int run_client(void)$/;"	f	file:
run_server	examples\cmtime.c	/^static int run_server(void)$/;"	f	file:
show_perf	examples\cmtime.c	/^static void show_perf(void)$/;"	f	file:
src_addr	examples\cmtime.c	/^static char *src_addr;$/;"	v	file:
start_perf	examples\cmtime.c	111;"	d	file:
start_time	examples\cmtime.c	113;"	d	file:
started	examples\cmtime.c	/^static volatile int started[STEP_CNT];$/;"	v	file:
step	examples\cmtime.c	/^enum step {$/;"	g	file:
step_str	examples\cmtime.c	/^static char *step_str[] = {$/;"	v	file:
timeout	examples\cmtime.c	/^static int timeout = 2000;$/;"	v	file:
times	examples\cmtime.c	/^	struct timeval times[STEP_CNT][2];$/;"	m	struct:node	typeref:struct:node::timeval	file:
times	examples\cmtime.c	/^static struct timeval times[STEP_CNT][2];$/;"	v	typeref:struct:timeval	file:
work_list	examples\cmtime.c	/^struct work_list {$/;"	s	file:
zero_time	examples\cmtime.c	/^static int zero_time(struct timeval *t)$/;"	f	file:
cnt_str	examples\common.c	/^void cnt_str(char *str, size_t ssize, long long cnt)$/;"	f
do_poll	examples\common.c	/^int do_poll(struct pollfd *fds, int timeout)$/;"	f
format_buf	examples\common.c	/^void format_buf(void *buf, int size)$/;"	f
get_rdma_addr	examples\common.c	/^int get_rdma_addr(char *src, char *dst, char *port,$/;"	f
size_str	examples\common.c	/^void size_str(char *str, size_t ssize, long long size)$/;"	f
size_to_count	examples\common.c	/^int size_to_count(int size)$/;"	f
use_rs	examples\common.c	/^int use_rs = 1;$/;"	v
verify_buf	examples\common.c	/^int verify_buf(void *buf, int size)$/;"	f
cpu_to_be32	examples\common.h	/^static inline uint32_t cpu_to_be32(uint32_t x) { return bswap_32(x); }$/;"	f
cpu_to_be32	examples\common.h	/^static inline uint32_t cpu_to_be32(uint32_t x) { return x; }$/;"	f
cpu_to_be64	examples\common.h	/^static inline uint64_t cpu_to_be64(uint64_t x) { return bswap_64(x); }$/;"	f
cpu_to_be64	examples\common.h	/^static inline uint64_t cpu_to_be64(uint64_t x) { return x; }$/;"	f
opt_bandwidth	examples\common.h	/^	opt_bandwidth$/;"	e	enum:rs_optimization
opt_latency	examples\common.h	/^	opt_latency,$/;"	e	enum:rs_optimization
opt_mixed	examples\common.h	/^	opt_mixed,$/;"	e	enum:rs_optimization
rs_accept	examples\common.h	59;"	d
rs_bind	examples\common.h	56;"	d
rs_close	examples\common.h	61;"	d
rs_connect	examples\common.h	58;"	d
rs_fcntl	examples\common.h	67;"	d
rs_getsockopt	examples\common.h	69;"	d
rs_listen	examples\common.h	57;"	d
rs_optimization	examples\common.h	/^enum rs_optimization {$/;"	g
rs_poll	examples\common.h	66;"	d
rs_recv	examples\common.h	62;"	d
rs_recvfrom	examples\common.h	64;"	d
rs_send	examples\common.h	63;"	d
rs_sendto	examples\common.h	65;"	d
rs_setsockopt	examples\common.h	68;"	d
rs_shutdown	examples\common.h	60;"	d
rs_socket	examples\common.h	55;"	d
sa	examples\common.h	/^	struct sockaddr		sa;$/;"	m	union:socket_addr	typeref:struct:socket_addr::sockaddr
sin	examples\common.h	/^	struct sockaddr_in	sin;$/;"	m	union:socket_addr	typeref:struct:socket_addr::sockaddr_in
sin6	examples\common.h	/^	struct sockaddr_in6	sin6;$/;"	m	union:socket_addr	typeref:struct:socket_addr::sockaddr_in6
socket_addr	examples\common.h	/^union socket_addr {$/;"	u
event_name_str	examples\ibverbs_examples\asyncwatch.c	/^static const char *event_name_str(enum ibv_event_type event_type)$/;"	f	file:
main	examples\ibverbs_examples\asyncwatch.c	/^int main(int argc, char *argv[])$/;"	f
usage	examples\ibverbs_examples\asyncwatch.c	/^static void usage(const char *argv0)$/;"	f	file:
main	examples\ibverbs_examples\device_list.c	/^int main(int argc, char *argv[])$/;"	f
atomic_cap_str	examples\ibverbs_examples\devinfo.c	/^static const char *atomic_cap_str(enum ibv_atomic_cap atom_cap)$/;"	f	file:
guid_str	examples\ibverbs_examples\devinfo.c	/^static const char *guid_str(uint64_t node_guid, char *str)$/;"	f	file:
link_layer_str	examples\ibverbs_examples\devinfo.c	/^static const char *link_layer_str(uint8_t link_layer)$/;"	f	file:
main	examples\ibverbs_examples\devinfo.c	/^int main(int argc, char *argv[])$/;"	f
mtu_str	examples\ibverbs_examples\devinfo.c	/^static const char *mtu_str(enum ibv_mtu max_mtu)$/;"	f	file:
null_gid	examples\ibverbs_examples\devinfo.c	/^static int null_gid(union ibv_gid *gid)$/;"	f	file:
port_phy_state_str	examples\ibverbs_examples\devinfo.c	/^static const char *port_phy_state_str(uint8_t phys_state)$/;"	f	file:
port_state_str	examples\ibverbs_examples\devinfo.c	/^static const char *port_state_str(enum ibv_port_state pstate)$/;"	f	file:
print_all_port_gids	examples\ibverbs_examples\devinfo.c	/^static int print_all_port_gids(struct ibv_context *ctx, uint8_t port_num, int tbl_len)$/;"	f	file:
print_device_cap_flags	examples\ibverbs_examples\devinfo.c	/^static void print_device_cap_flags(uint32_t dev_cap_flags)$/;"	f	file:
print_device_cap_flags_ex	examples\ibverbs_examples\devinfo.c	/^static void print_device_cap_flags_ex(uint64_t device_cap_flags_ex)$/;"	f	file:
print_hca_cap	examples\ibverbs_examples\devinfo.c	/^static int print_hca_cap(struct ibv_device *ib_dev, uint8_t ib_port)$/;"	f	file:
print_odp_caps	examples\ibverbs_examples\devinfo.c	/^void print_odp_caps(const struct ibv_odp_caps *caps)$/;"	f
print_odp_trans_caps	examples\ibverbs_examples\devinfo.c	/^void print_odp_trans_caps(uint32_t trans)$/;"	f
print_rss_caps	examples\ibverbs_examples\devinfo.c	/^static void print_rss_caps(const struct ibv_rss_caps *caps)$/;"	f	file:
print_tso_caps	examples\ibverbs_examples\devinfo.c	/^static void print_tso_caps(const struct ibv_tso_caps *caps)$/;"	f	file:
speed_str	examples\ibverbs_examples\devinfo.c	/^static const char *speed_str(uint8_t speed)$/;"	f	file:
transport_str	examples\ibverbs_examples\devinfo.c	/^static const char *transport_str(enum ibv_transport_type transport)$/;"	f	file:
usage	examples\ibverbs_examples\devinfo.c	/^static void usage(const char *argv0)$/;"	f	file:
verbose	examples\ibverbs_examples\devinfo.c	/^static int verbose;$/;"	v	file:
vl_str	examples\ibverbs_examples\devinfo.c	/^static const char *vl_str(uint8_t vl_num)$/;"	f	file:
width_str	examples\ibverbs_examples\devinfo.c	/^static const char *width_str(uint8_t width)$/;"	f	file:
gid_to_wire_gid	examples\ibverbs_examples\pingpong.c	/^void gid_to_wire_gid(const union ibv_gid *gid, char wgid[])$/;"	f
pp_get_port_info	examples\ibverbs_examples\pingpong.c	/^int pp_get_port_info(struct ibv_context *context, int port,$/;"	f
pp_mtu_to_enum	examples\ibverbs_examples\pingpong.c	/^enum ibv_mtu pp_mtu_to_enum(int mtu)$/;"	f
wire_gid_to_gid	examples\ibverbs_examples\pingpong.c	/^void wire_gid_to_gid(const char *wgid, union ibv_gid *gid)$/;"	f
IBV_PINGPONG_H	examples\ibverbs_examples\pingpong.h	34;"	d
PINGPONG_RECV_WRID	examples\ibverbs_examples\rc_pingpong.c	/^	PINGPONG_RECV_WRID = 1,$/;"	e	enum:__anon1	file:
PINGPONG_SEND_WRID	examples\ibverbs_examples\rc_pingpong.c	/^	PINGPONG_SEND_WRID = 2,$/;"	e	enum:__anon1	file:
buf	examples\ibverbs_examples\rc_pingpong.c	/^	void			*buf;$/;"	m	struct:pingpong_context	file:
channel	examples\ibverbs_examples\rc_pingpong.c	/^	struct ibv_comp_channel *channel;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_comp_channel	file:
comp_recv_max_time_delta	examples\ibverbs_examples\rc_pingpong.c	/^	unsigned int		 comp_recv_max_time_delta;$/;"	m	struct:ts_params	file:
comp_recv_min_time_delta	examples\ibverbs_examples\rc_pingpong.c	/^	unsigned int		 comp_recv_min_time_delta;$/;"	m	struct:ts_params	file:
comp_recv_prev_time	examples\ibverbs_examples\rc_pingpong.c	/^	uint64_t		 comp_recv_prev_time;$/;"	m	struct:ts_params	file:
comp_recv_total_time_delta	examples\ibverbs_examples\rc_pingpong.c	/^	uint64_t		 comp_recv_total_time_delta;$/;"	m	struct:ts_params	file:
comp_with_time_iters	examples\ibverbs_examples\rc_pingpong.c	/^	unsigned int		 comp_with_time_iters;$/;"	m	struct:ts_params	file:
completion_timestamp_mask	examples\ibverbs_examples\rc_pingpong.c	/^	uint64_t		 completion_timestamp_mask;$/;"	m	struct:pingpong_context	file:
context	examples\ibverbs_examples\rc_pingpong.c	/^	struct ibv_context	*context;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_context	file:
cq	examples\ibverbs_examples\rc_pingpong.c	/^		struct ibv_cq		*cq;$/;"	m	union:pingpong_context::__anon2	typeref:struct:pingpong_context::__anon2::ibv_cq	file:
cq_ex	examples\ibverbs_examples\rc_pingpong.c	/^		struct ibv_cq_ex	*cq_ex;$/;"	m	union:pingpong_context::__anon2	typeref:struct:pingpong_context::__anon2::ibv_cq_ex	file:
cq_s	examples\ibverbs_examples\rc_pingpong.c	/^	} cq_s;$/;"	m	struct:pingpong_context	typeref:union:pingpong_context::__anon2	file:
gid	examples\ibverbs_examples\rc_pingpong.c	/^	union ibv_gid gid;$/;"	m	struct:pingpong_dest	typeref:union:pingpong_dest::ibv_gid	file:
last_comp_with_ts	examples\ibverbs_examples\rc_pingpong.c	/^	int			 last_comp_with_ts;$/;"	m	struct:ts_params	file:
lid	examples\ibverbs_examples\rc_pingpong.c	/^	int lid;$/;"	m	struct:pingpong_dest	file:
main	examples\ibverbs_examples\rc_pingpong.c	/^int main(int argc, char *argv[])$/;"	f
max	examples\ibverbs_examples\rc_pingpong.c	53;"	d	file:
min	examples\ibverbs_examples\rc_pingpong.c	57;"	d	file:
mr	examples\ibverbs_examples\rc_pingpong.c	/^	struct ibv_mr		*mr;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_mr	file:
page_size	examples\ibverbs_examples\rc_pingpong.c	/^static int page_size;$/;"	v	file:
parse_single_wc	examples\ibverbs_examples\rc_pingpong.c	/^static inline int parse_single_wc(struct pingpong_context *ctx, int *scnt,$/;"	f	file:
pd	examples\ibverbs_examples\rc_pingpong.c	/^	struct ibv_pd		*pd;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_pd	file:
pending	examples\ibverbs_examples\rc_pingpong.c	/^	int			 pending;$/;"	m	struct:pingpong_context	file:
pingpong_context	examples\ibverbs_examples\rc_pingpong.c	/^struct pingpong_context {$/;"	s	file:
pingpong_dest	examples\ibverbs_examples\rc_pingpong.c	/^struct pingpong_dest {$/;"	s	file:
portinfo	examples\ibverbs_examples\rc_pingpong.c	/^	struct ibv_port_attr     portinfo;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_port_attr	file:
pp_client_exch_dest	examples\ibverbs_examples\rc_pingpong.c	/^static struct pingpong_dest *pp_client_exch_dest(const char *servername, int port,$/;"	f	file:
pp_close_ctx	examples\ibverbs_examples\rc_pingpong.c	/^int pp_close_ctx(struct pingpong_context *ctx)$/;"	f
pp_connect_ctx	examples\ibverbs_examples\rc_pingpong.c	/^static int pp_connect_ctx(struct pingpong_context *ctx, int port, int my_psn,$/;"	f	file:
pp_cq	examples\ibverbs_examples\rc_pingpong.c	/^struct ibv_cq *pp_cq(struct pingpong_context *ctx)$/;"	f
pp_init_ctx	examples\ibverbs_examples\rc_pingpong.c	/^static struct pingpong_context *pp_init_ctx(struct ibv_device *ib_dev, int size,$/;"	f	file:
pp_post_recv	examples\ibverbs_examples\rc_pingpong.c	/^static int pp_post_recv(struct pingpong_context *ctx, int n)$/;"	f	file:
pp_post_send	examples\ibverbs_examples\rc_pingpong.c	/^static int pp_post_send(struct pingpong_context *ctx)$/;"	f	file:
pp_server_exch_dest	examples\ibverbs_examples\rc_pingpong.c	/^static struct pingpong_dest *pp_server_exch_dest(struct pingpong_context *ctx,$/;"	f	file:
psn	examples\ibverbs_examples\rc_pingpong.c	/^	int psn;$/;"	m	struct:pingpong_dest	file:
qp	examples\ibverbs_examples\rc_pingpong.c	/^	struct ibv_qp		*qp;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_qp	file:
qpn	examples\ibverbs_examples\rc_pingpong.c	/^	int qpn;$/;"	m	struct:pingpong_dest	file:
rx_depth	examples\ibverbs_examples\rc_pingpong.c	/^	int			 rx_depth;$/;"	m	struct:pingpong_context	file:
send_flags	examples\ibverbs_examples\rc_pingpong.c	/^	int			 send_flags;$/;"	m	struct:pingpong_context	file:
size	examples\ibverbs_examples\rc_pingpong.c	/^	int			 size;$/;"	m	struct:pingpong_context	file:
ts_params	examples\ibverbs_examples\rc_pingpong.c	/^struct ts_params {$/;"	s	file:
usage	examples\ibverbs_examples\rc_pingpong.c	/^static void usage(const char *argv0)$/;"	f	file:
use_odp	examples\ibverbs_examples\rc_pingpong.c	/^static int use_odp;$/;"	v	file:
use_ts	examples\ibverbs_examples\rc_pingpong.c	/^static int use_ts;$/;"	v	file:
MAX_QP	examples\ibverbs_examples\srq_pingpong.c	/^	MAX_QP             = 256,$/;"	e	enum:__anon3	file:
PINGPONG_RECV_WRID	examples\ibverbs_examples\srq_pingpong.c	/^	PINGPONG_RECV_WRID = 1,$/;"	e	enum:__anon3	file:
PINGPONG_SEND_WRID	examples\ibverbs_examples\srq_pingpong.c	/^	PINGPONG_SEND_WRID = 2,$/;"	e	enum:__anon3	file:
buf	examples\ibverbs_examples\srq_pingpong.c	/^	void			*buf;$/;"	m	struct:pingpong_context	file:
channel	examples\ibverbs_examples\srq_pingpong.c	/^	struct ibv_comp_channel *channel;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_comp_channel	file:
context	examples\ibverbs_examples\srq_pingpong.c	/^	struct ibv_context	*context;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_context	file:
cq	examples\ibverbs_examples\srq_pingpong.c	/^	struct ibv_cq		*cq;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_cq	file:
find_qp	examples\ibverbs_examples\srq_pingpong.c	/^static int find_qp(int qpn, struct pingpong_context *ctx, int num_qp)$/;"	f	file:
gid	examples\ibverbs_examples\srq_pingpong.c	/^	union ibv_gid gid;$/;"	m	struct:pingpong_dest	typeref:union:pingpong_dest::ibv_gid	file:
lid	examples\ibverbs_examples\srq_pingpong.c	/^	int lid;$/;"	m	struct:pingpong_dest	file:
main	examples\ibverbs_examples\srq_pingpong.c	/^int main(int argc, char *argv[])$/;"	f
mr	examples\ibverbs_examples\srq_pingpong.c	/^	struct ibv_mr		*mr;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_mr	file:
num_qp	examples\ibverbs_examples\srq_pingpong.c	/^	int			 num_qp;$/;"	m	struct:pingpong_context	file:
page_size	examples\ibverbs_examples\srq_pingpong.c	/^static int page_size;$/;"	v	file:
pd	examples\ibverbs_examples\srq_pingpong.c	/^	struct ibv_pd		*pd;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_pd	file:
pending	examples\ibverbs_examples\srq_pingpong.c	/^	int			 pending[MAX_QP];$/;"	m	struct:pingpong_context	file:
pingpong_context	examples\ibverbs_examples\srq_pingpong.c	/^struct pingpong_context {$/;"	s	file:
pingpong_dest	examples\ibverbs_examples\srq_pingpong.c	/^struct pingpong_dest {$/;"	s	file:
portinfo	examples\ibverbs_examples\srq_pingpong.c	/^	struct ibv_port_attr	 portinfo;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_port_attr	file:
pp_client_exch_dest	examples\ibverbs_examples\srq_pingpong.c	/^static struct pingpong_dest *pp_client_exch_dest(const char *servername, int port,$/;"	f	file:
pp_close_ctx	examples\ibverbs_examples\srq_pingpong.c	/^int pp_close_ctx(struct pingpong_context *ctx, int num_qp)$/;"	f
pp_connect_ctx	examples\ibverbs_examples\srq_pingpong.c	/^static int pp_connect_ctx(struct pingpong_context *ctx, int port, enum ibv_mtu mtu,$/;"	f	file:
pp_init_ctx	examples\ibverbs_examples\srq_pingpong.c	/^static struct pingpong_context *pp_init_ctx(struct ibv_device *ib_dev, int size,$/;"	f	file:
pp_post_recv	examples\ibverbs_examples\srq_pingpong.c	/^static int pp_post_recv(struct pingpong_context *ctx, int n)$/;"	f	file:
pp_post_send	examples\ibverbs_examples\srq_pingpong.c	/^static int pp_post_send(struct pingpong_context *ctx, int qp_index)$/;"	f	file:
pp_server_exch_dest	examples\ibverbs_examples\srq_pingpong.c	/^static struct pingpong_dest *pp_server_exch_dest(struct pingpong_context *ctx,$/;"	f	file:
psn	examples\ibverbs_examples\srq_pingpong.c	/^	int psn;$/;"	m	struct:pingpong_dest	file:
qp	examples\ibverbs_examples\srq_pingpong.c	/^	struct ibv_qp		*qp[MAX_QP];$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_qp	file:
qpn	examples\ibverbs_examples\srq_pingpong.c	/^	int qpn;$/;"	m	struct:pingpong_dest	file:
rx_depth	examples\ibverbs_examples\srq_pingpong.c	/^	int			 rx_depth;$/;"	m	struct:pingpong_context	file:
send_flags	examples\ibverbs_examples\srq_pingpong.c	/^	int			 send_flags;$/;"	m	struct:pingpong_context	file:
size	examples\ibverbs_examples\srq_pingpong.c	/^	int			 size;$/;"	m	struct:pingpong_context	file:
srq	examples\ibverbs_examples\srq_pingpong.c	/^	struct ibv_srq		*srq;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_srq	file:
usage	examples\ibverbs_examples\srq_pingpong.c	/^static void usage(const char *argv0)$/;"	f	file:
PINGPONG_RECV_WRID	examples\ibverbs_examples\uc_pingpong.c	/^	PINGPONG_RECV_WRID = 1,$/;"	e	enum:__anon4	file:
PINGPONG_SEND_WRID	examples\ibverbs_examples\uc_pingpong.c	/^	PINGPONG_SEND_WRID = 2,$/;"	e	enum:__anon4	file:
buf	examples\ibverbs_examples\uc_pingpong.c	/^	void			*buf;$/;"	m	struct:pingpong_context	file:
channel	examples\ibverbs_examples\uc_pingpong.c	/^	struct ibv_comp_channel *channel;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_comp_channel	file:
context	examples\ibverbs_examples\uc_pingpong.c	/^	struct ibv_context	*context;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_context	file:
cq	examples\ibverbs_examples\uc_pingpong.c	/^	struct ibv_cq		*cq;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_cq	file:
gid	examples\ibverbs_examples\uc_pingpong.c	/^	union ibv_gid gid;$/;"	m	struct:pingpong_dest	typeref:union:pingpong_dest::ibv_gid	file:
lid	examples\ibverbs_examples\uc_pingpong.c	/^	int lid;$/;"	m	struct:pingpong_dest	file:
main	examples\ibverbs_examples\uc_pingpong.c	/^int main(int argc, char *argv[])$/;"	f
mr	examples\ibverbs_examples\uc_pingpong.c	/^	struct ibv_mr		*mr;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_mr	file:
page_size	examples\ibverbs_examples\uc_pingpong.c	/^static int page_size;$/;"	v	file:
pd	examples\ibverbs_examples\uc_pingpong.c	/^	struct ibv_pd		*pd;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_pd	file:
pending	examples\ibverbs_examples\uc_pingpong.c	/^	int			 pending;$/;"	m	struct:pingpong_context	file:
pingpong_context	examples\ibverbs_examples\uc_pingpong.c	/^struct pingpong_context {$/;"	s	file:
pingpong_dest	examples\ibverbs_examples\uc_pingpong.c	/^struct pingpong_dest {$/;"	s	file:
portinfo	examples\ibverbs_examples\uc_pingpong.c	/^	struct ibv_port_attr     portinfo;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_port_attr	file:
pp_client_exch_dest	examples\ibverbs_examples\uc_pingpong.c	/^static struct pingpong_dest *pp_client_exch_dest(const char *servername, int port,$/;"	f	file:
pp_close_ctx	examples\ibverbs_examples\uc_pingpong.c	/^int pp_close_ctx(struct pingpong_context *ctx)$/;"	f
pp_connect_ctx	examples\ibverbs_examples\uc_pingpong.c	/^static int pp_connect_ctx(struct pingpong_context *ctx, int port, int my_psn,$/;"	f	file:
pp_init_ctx	examples\ibverbs_examples\uc_pingpong.c	/^static struct pingpong_context *pp_init_ctx(struct ibv_device *ib_dev, int size,$/;"	f	file:
pp_post_recv	examples\ibverbs_examples\uc_pingpong.c	/^static int pp_post_recv(struct pingpong_context *ctx, int n)$/;"	f	file:
pp_post_send	examples\ibverbs_examples\uc_pingpong.c	/^static int pp_post_send(struct pingpong_context *ctx)$/;"	f	file:
pp_server_exch_dest	examples\ibverbs_examples\uc_pingpong.c	/^static struct pingpong_dest *pp_server_exch_dest(struct pingpong_context *ctx,$/;"	f	file:
psn	examples\ibverbs_examples\uc_pingpong.c	/^	int psn;$/;"	m	struct:pingpong_dest	file:
qp	examples\ibverbs_examples\uc_pingpong.c	/^	struct ibv_qp		*qp;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_qp	file:
qpn	examples\ibverbs_examples\uc_pingpong.c	/^	int qpn;$/;"	m	struct:pingpong_dest	file:
rx_depth	examples\ibverbs_examples\uc_pingpong.c	/^	int			 rx_depth;$/;"	m	struct:pingpong_context	file:
send_flags	examples\ibverbs_examples\uc_pingpong.c	/^	int			 send_flags;$/;"	m	struct:pingpong_context	file:
size	examples\ibverbs_examples\uc_pingpong.c	/^	int			 size;$/;"	m	struct:pingpong_context	file:
usage	examples\ibverbs_examples\uc_pingpong.c	/^static void usage(const char *argv0)$/;"	f	file:
PINGPONG_RECV_WRID	examples\ibverbs_examples\ud_pingpong.c	/^	PINGPONG_RECV_WRID = 1,$/;"	e	enum:__anon5	file:
PINGPONG_SEND_WRID	examples\ibverbs_examples\ud_pingpong.c	/^	PINGPONG_SEND_WRID = 2,$/;"	e	enum:__anon5	file:
ah	examples\ibverbs_examples\ud_pingpong.c	/^	struct ibv_ah		*ah;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_ah	file:
buf	examples\ibverbs_examples\ud_pingpong.c	/^	void			*buf;$/;"	m	struct:pingpong_context	file:
channel	examples\ibverbs_examples\ud_pingpong.c	/^	struct ibv_comp_channel *channel;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_comp_channel	file:
context	examples\ibverbs_examples\ud_pingpong.c	/^	struct ibv_context	*context;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_context	file:
cq	examples\ibverbs_examples\ud_pingpong.c	/^	struct ibv_cq		*cq;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_cq	file:
gid	examples\ibverbs_examples\ud_pingpong.c	/^	union ibv_gid gid;$/;"	m	struct:pingpong_dest	typeref:union:pingpong_dest::ibv_gid	file:
lid	examples\ibverbs_examples\ud_pingpong.c	/^	int lid;$/;"	m	struct:pingpong_dest	file:
main	examples\ibverbs_examples\ud_pingpong.c	/^int main(int argc, char *argv[])$/;"	f
mr	examples\ibverbs_examples\ud_pingpong.c	/^	struct ibv_mr		*mr;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_mr	file:
page_size	examples\ibverbs_examples\ud_pingpong.c	/^static int page_size;$/;"	v	file:
pd	examples\ibverbs_examples\ud_pingpong.c	/^	struct ibv_pd		*pd;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_pd	file:
pending	examples\ibverbs_examples\ud_pingpong.c	/^	int			 pending;$/;"	m	struct:pingpong_context	file:
pingpong_context	examples\ibverbs_examples\ud_pingpong.c	/^struct pingpong_context {$/;"	s	file:
pingpong_dest	examples\ibverbs_examples\ud_pingpong.c	/^struct pingpong_dest {$/;"	s	file:
portinfo	examples\ibverbs_examples\ud_pingpong.c	/^	struct ibv_port_attr     portinfo;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_port_attr	file:
pp_client_exch_dest	examples\ibverbs_examples\ud_pingpong.c	/^static struct pingpong_dest *pp_client_exch_dest(const char *servername, int port,$/;"	f	file:
pp_close_ctx	examples\ibverbs_examples\ud_pingpong.c	/^int pp_close_ctx(struct pingpong_context *ctx)$/;"	f
pp_connect_ctx	examples\ibverbs_examples\ud_pingpong.c	/^static int pp_connect_ctx(struct pingpong_context *ctx, int port, int my_psn,$/;"	f	file:
pp_init_ctx	examples\ibverbs_examples\ud_pingpong.c	/^static struct pingpong_context *pp_init_ctx(struct ibv_device *ib_dev, int size,$/;"	f	file:
pp_post_recv	examples\ibverbs_examples\ud_pingpong.c	/^static int pp_post_recv(struct pingpong_context *ctx, int n)$/;"	f	file:
pp_post_send	examples\ibverbs_examples\ud_pingpong.c	/^static int pp_post_send(struct pingpong_context *ctx, uint32_t qpn)$/;"	f	file:
pp_server_exch_dest	examples\ibverbs_examples\ud_pingpong.c	/^static struct pingpong_dest *pp_server_exch_dest(struct pingpong_context *ctx,$/;"	f	file:
psn	examples\ibverbs_examples\ud_pingpong.c	/^	int psn;$/;"	m	struct:pingpong_dest	file:
qp	examples\ibverbs_examples\ud_pingpong.c	/^	struct ibv_qp		*qp;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_qp	file:
qpn	examples\ibverbs_examples\ud_pingpong.c	/^	int qpn;$/;"	m	struct:pingpong_dest	file:
rx_depth	examples\ibverbs_examples\ud_pingpong.c	/^	int			 rx_depth;$/;"	m	struct:pingpong_context	file:
send_flags	examples\ibverbs_examples\ud_pingpong.c	/^	int			 send_flags;$/;"	m	struct:pingpong_context	file:
size	examples\ibverbs_examples\ud_pingpong.c	/^	int			 size;$/;"	m	struct:pingpong_context	file:
usage	examples\ibverbs_examples\ud_pingpong.c	/^static void usage(const char *argv0)$/;"	f	file:
ADDR_FORMAT	examples\ibverbs_examples\xsrq_pingpong.c	58;"	d	file:
MSG_FORMAT	examples\ibverbs_examples\xsrq_pingpong.c	55;"	d	file:
MSG_SIZE	examples\ibverbs_examples\xsrq_pingpong.c	56;"	d	file:
MSG_SSCAN	examples\ibverbs_examples\xsrq_pingpong.c	57;"	d	file:
TERMINATION_FORMAT	examples\ibverbs_examples\xsrq_pingpong.c	60;"	d	file:
TERMINATION_MSG	examples\ibverbs_examples\xsrq_pingpong.c	62;"	d	file:
TERMINATION_MSG_SIZE	examples\ibverbs_examples\xsrq_pingpong.c	61;"	d	file:
buf	examples\ibverbs_examples\xsrq_pingpong.c	/^	void			*buf;$/;"	m	struct:pingpong_context	file:
channel	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_comp_channel *channel;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_comp_channel	file:
connect_qps	examples\ibverbs_examples\xsrq_pingpong.c	/^static int connect_qps(int index)$/;"	f	file:
context	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_context	*context;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_context	file:
create_qps	examples\ibverbs_examples\xsrq_pingpong.c	/^static int create_qps(void)$/;"	f	file:
ctx	examples\ibverbs_examples\xsrq_pingpong.c	/^struct pingpong_context ctx;$/;"	v	typeref:struct:pingpong_context
fd	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 fd;$/;"	m	struct:pingpong_context	file:
find_qp	examples\ibverbs_examples\xsrq_pingpong.c	/^static int find_qp(int qpn)$/;"	f	file:
get_cq_event	examples\ibverbs_examples\xsrq_pingpong.c	/^static int get_cq_event(void)$/;"	f	file:
gid	examples\ibverbs_examples\xsrq_pingpong.c	/^	union ibv_gid gid;$/;"	m	struct:pingpong_dest	typeref:union:pingpong_dest::ibv_gid	file:
gidx	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 gidx;$/;"	m	struct:pingpong_context	file:
ib_port	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 ib_port;$/;"	m	struct:pingpong_context	file:
init	examples\ibverbs_examples\xsrq_pingpong.c	/^static void init(void)$/;"	f	file:
lid	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 lid;$/;"	m	struct:pingpong_context	file:
lid	examples\ibverbs_examples\xsrq_pingpong.c	/^	int lid;$/;"	m	struct:pingpong_dest	file:
main	examples\ibverbs_examples\xsrq_pingpong.c	/^int main(int argc, char *argv[])$/;"	f
mr	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_mr		*mr;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_mr	file:
mtu	examples\ibverbs_examples\xsrq_pingpong.c	/^	enum ibv_mtu		 mtu;$/;"	m	struct:pingpong_context	typeref:enum:pingpong_context::ibv_mtu	file:
num_clients	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 num_clients;$/;"	m	struct:pingpong_context	file:
num_tests	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 num_tests;$/;"	m	struct:pingpong_context	file:
open_device	examples\ibverbs_examples\xsrq_pingpong.c	/^static int open_device(char *ib_devname)$/;"	f	file:
page_size	examples\ibverbs_examples\xsrq_pingpong.c	/^static int page_size;$/;"	v	file:
pd	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_pd		*pd;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_pd	file:
pingpong_context	examples\ibverbs_examples\xsrq_pingpong.c	/^struct pingpong_context {$/;"	s	file:
pingpong_dest	examples\ibverbs_examples\xsrq_pingpong.c	/^struct pingpong_dest {$/;"	s	file:
pp_client_connect	examples\ibverbs_examples\xsrq_pingpong.c	/^static int pp_client_connect(const char *servername, int port)$/;"	f	file:
pp_client_termination	examples\ibverbs_examples\xsrq_pingpong.c	/^static int pp_client_termination()$/;"	f	file:
pp_close_ctx	examples\ibverbs_examples\xsrq_pingpong.c	/^static int pp_close_ctx(void)$/;"	f	file:
pp_cnt	examples\ibverbs_examples\xsrq_pingpong.c	/^	int pp_cnt;$/;"	m	struct:pingpong_dest	file:
pp_init_ctx	examples\ibverbs_examples\xsrq_pingpong.c	/^static int pp_init_ctx(char *ib_devname)$/;"	f	file:
pp_post_recv	examples\ibverbs_examples\xsrq_pingpong.c	/^static int pp_post_recv(int cnt)$/;"	f	file:
pp_post_send	examples\ibverbs_examples\xsrq_pingpong.c	/^static int pp_post_send(int index)$/;"	f	file:
pp_server_connect	examples\ibverbs_examples\xsrq_pingpong.c	/^static int pp_server_connect(int port)$/;"	f	file:
pp_server_termination	examples\ibverbs_examples\xsrq_pingpong.c	/^static int pp_server_termination()$/;"	f	file:
recv_cq	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_cq		*recv_cq;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_cq	file:
recv_psn	examples\ibverbs_examples\xsrq_pingpong.c	/^	int recv_psn;$/;"	m	struct:pingpong_dest	file:
recv_qp	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_qp		**recv_qp;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_qp	file:
recv_qpn	examples\ibverbs_examples\xsrq_pingpong.c	/^	int recv_qpn;$/;"	m	struct:pingpong_dest	file:
recv_remote_dest	examples\ibverbs_examples\xsrq_pingpong.c	/^static int recv_remote_dest(int sockfd, int index)$/;"	f	file:
recv_termination_ack	examples\ibverbs_examples\xsrq_pingpong.c	/^static int recv_termination_ack(int index)$/;"	f	file:
rem_dest	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct pingpong_dest	*rem_dest;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::pingpong_dest	file:
send_cq	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_cq		*send_cq;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_cq	file:
send_local_dest	examples\ibverbs_examples\xsrq_pingpong.c	/^static int send_local_dest(int sockfd, int index)$/;"	f	file:
send_psn	examples\ibverbs_examples\xsrq_pingpong.c	/^	int send_psn;$/;"	m	struct:pingpong_dest	file:
send_qp	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_qp		**send_qp;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_qp	file:
send_qpn	examples\ibverbs_examples\xsrq_pingpong.c	/^	int send_qpn;$/;"	m	struct:pingpong_dest	file:
send_termination_ack	examples\ibverbs_examples\xsrq_pingpong.c	/^static int send_termination_ack(int index)$/;"	f	file:
set_ah_attr	examples\ibverbs_examples\xsrq_pingpong.c	/^static void set_ah_attr(struct ibv_ah_attr *attr, struct pingpong_context *ctx,$/;"	f	file:
size	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 size;$/;"	m	struct:pingpong_context	file:
sl	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 sl;$/;"	m	struct:pingpong_context	file:
sockfd	examples\ibverbs_examples\xsrq_pingpong.c	/^	int sockfd;$/;"	m	struct:pingpong_dest	file:
srq	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_srq		*srq;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_srq	file:
srqn	examples\ibverbs_examples\xsrq_pingpong.c	/^	int srqn;$/;"	m	struct:pingpong_dest	file:
usage	examples\ibverbs_examples\xsrq_pingpong.c	/^static void usage(const char *argv0)$/;"	f	file:
use_event	examples\ibverbs_examples\xsrq_pingpong.c	/^	int			 use_event;$/;"	m	struct:pingpong_context	file:
xrcd	examples\ibverbs_examples\xsrq_pingpong.c	/^	struct ibv_xrcd		*xrcd;$/;"	m	struct:pingpong_context	typeref:struct:pingpong_context::ibv_xrcd	file:
addr_handler	examples\mckey.c	/^static int addr_handler(struct cmatest_node *node)$/;"	f	file:
ah	examples\mckey.c	/^	struct ibv_ah		*ah;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_ah	file:
alloc_nodes	examples\mckey.c	/^static int alloc_nodes(void)$/;"	f	file:
channel	examples\mckey.c	/^	struct rdma_event_channel *channel;$/;"	m	struct:cmatest	typeref:struct:cmatest::rdma_event_channel	file:
cma_handler	examples\mckey.c	/^static int cma_handler(struct rdma_cm_id *cma_id, struct rdma_cm_event *event)$/;"	f	file:
cma_id	examples\mckey.c	/^	struct rdma_cm_id	*cma_id;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::rdma_cm_id	file:
cma_thread	examples\mckey.c	/^static void *cma_thread(void *arg)$/;"	f	file:
cmatest	examples\mckey.c	/^struct cmatest {$/;"	s	file:
cmatest_node	examples\mckey.c	/^struct cmatest_node {$/;"	s	file:
cmathread	examples\mckey.c	/^	pthread_t 		cmathread;$/;"	m	struct:cmatest	file:
conn_index	examples\mckey.c	/^	int			conn_index;$/;"	m	struct:cmatest	file:
connect_error	examples\mckey.c	/^static void connect_error(void)$/;"	f	file:
connect_events	examples\mckey.c	/^static int connect_events(void)$/;"	f	file:
connected	examples\mckey.c	/^	int			connected;$/;"	m	struct:cmatest_node	file:
connections	examples\mckey.c	/^static int connections = 1;$/;"	v	file:
connects_left	examples\mckey.c	/^	int			connects_left;$/;"	m	struct:cmatest	file:
cq	examples\mckey.c	/^	struct ibv_cq		*cq;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_cq	file:
create_message	examples\mckey.c	/^static int create_message(struct cmatest_node *node)$/;"	f	file:
destroy_node	examples\mckey.c	/^static void destroy_node(struct cmatest_node *node)$/;"	f	file:
destroy_nodes	examples\mckey.c	/^static void destroy_nodes(void)$/;"	f	file:
dst_addr	examples\mckey.c	/^	struct sockaddr		*dst_addr;$/;"	m	struct:cmatest	typeref:struct:cmatest::sockaddr	file:
dst_addr	examples\mckey.c	/^static char *dst_addr;$/;"	v	file:
dst_in	examples\mckey.c	/^	struct sockaddr_storage	dst_in;$/;"	m	struct:cmatest	typeref:struct:cmatest::sockaddr_storage	file:
get_addr	examples\mckey.c	/^static int get_addr(char *dst, struct sockaddr *addr)$/;"	f	file:
get_dst_addr	examples\mckey.c	/^static int get_dst_addr(char *dst, struct sockaddr *addr)$/;"	f	file:
id	examples\mckey.c	/^	int			id;$/;"	m	struct:cmatest_node	file:
init_node	examples\mckey.c	/^static int init_node(struct cmatest_node *node)$/;"	f	file:
is_sender	examples\mckey.c	/^static int is_sender;$/;"	v	file:
join_handler	examples\mckey.c	/^static int join_handler(struct cmatest_node *node,$/;"	f	file:
main	examples\mckey.c	/^int main(int argc, char **argv)$/;"	f
mem	examples\mckey.c	/^	void			*mem;$/;"	m	struct:cmatest_node	file:
message_count	examples\mckey.c	/^static int message_count = 10;$/;"	v	file:
message_size	examples\mckey.c	/^static int message_size = 100;$/;"	v	file:
mr	examples\mckey.c	/^	struct ibv_mr		*mr;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_mr	file:
nodes	examples\mckey.c	/^	struct cmatest_node	*nodes;$/;"	m	struct:cmatest	typeref:struct:cmatest::cmatest_node	file:
pd	examples\mckey.c	/^	struct ibv_pd		*pd;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_pd	file:
poll_cqs	examples\mckey.c	/^static int poll_cqs(void)$/;"	f	file:
port_space	examples\mckey.c	/^static enum rdma_port_space port_space = RDMA_PS_UDP;$/;"	v	typeref:enum:rdma_port_space	file:
post_recvs	examples\mckey.c	/^static int post_recvs(struct cmatest_node *node)$/;"	f	file:
post_sends	examples\mckey.c	/^static int post_sends(struct cmatest_node *node, int signal_flag)$/;"	f	file:
remote_qkey	examples\mckey.c	/^	uint32_t		remote_qkey;$/;"	m	struct:cmatest_node	file:
remote_qpn	examples\mckey.c	/^	uint32_t		remote_qpn;$/;"	m	struct:cmatest_node	file:
run	examples\mckey.c	/^static int run(void)$/;"	f	file:
src_addr	examples\mckey.c	/^	struct sockaddr		*src_addr;$/;"	m	struct:cmatest	typeref:struct:cmatest::sockaddr	file:
src_addr	examples\mckey.c	/^static char *src_addr;$/;"	v	file:
src_in	examples\mckey.c	/^	struct sockaddr_storage	src_in;$/;"	m	struct:cmatest	typeref:struct:cmatest::sockaddr_storage	file:
test	examples\mckey.c	/^static struct cmatest test;$/;"	v	typeref:struct:cmatest	file:
unmapped_addr	examples\mckey.c	/^static int unmapped_addr;$/;"	v	file:
verify_test_params	examples\mckey.c	/^static int verify_test_params(struct cmatest_node *node)$/;"	f	file:
CMD_CLOSE	examples\rcopy.c	/^	CMD_CLOSE,$/;"	e	enum:__anon6	file:
CMD_NOOP	examples\rcopy.c	/^	CMD_NOOP,$/;"	e	enum:__anon6	file:
CMD_OPEN	examples\rcopy.c	/^	CMD_OPEN,$/;"	e	enum:__anon6	file:
CMD_RESP	examples\rcopy.c	/^	CMD_RESP = 0x80,$/;"	e	enum:__anon6	file:
CMD_WRITE	examples\rcopy.c	/^	CMD_WRITE,$/;"	e	enum:__anon6	file:
_ntop	examples\rcopy.c	/^static char *_ntop(union rsocket_address *rsa)$/;"	f	file:
_recv	examples\rcopy.c	/^static size_t _recv(int rs, char *msg, size_t len)$/;"	f	file:
bytes	examples\rcopy.c	/^static uint64_t bytes;$/;"	v	file:
client_close	examples\rcopy.c	/^static int client_close(int rs)$/;"	f	file:
client_connect	examples\rcopy.c	/^static int client_connect(void)$/;"	f	file:
client_open	examples\rcopy.c	/^static int client_open(int rs)$/;"	f	file:
client_opts	examples\rcopy.c	/^static void client_opts(int argc, char **argv)$/;"	f	file:
client_run	examples\rcopy.c	/^static int client_run(void)$/;"	f	file:
client_start_write	examples\rcopy.c	/^static int client_start_write(int rs)$/;"	f	file:
command	examples\rcopy.c	/^	uint8_t  command;$/;"	m	struct:msg_hdr	file:
data	examples\rcopy.c	/^	uint32_t data;$/;"	m	struct:msg_hdr	file:
dst_addr	examples\rcopy.c	/^static char *dst_addr;$/;"	v	file:
dst_file	examples\rcopy.c	/^static char *dst_file;$/;"	v	file:
end	examples\rcopy.c	/^static struct timeval start, end;$/;"	v	typeref:struct:	file:
fd	examples\rcopy.c	/^int fd;$/;"	v
file_addr	examples\rcopy.c	/^void *file_addr;$/;"	v
hdr	examples\rcopy.c	/^	struct msg_hdr hdr;$/;"	m	struct:msg_open	typeref:struct:msg_open::msg_hdr	file:
hdr	examples\rcopy.c	/^	struct msg_hdr hdr;$/;"	m	struct:msg_write	typeref:struct:msg_write::msg_hdr	file:
id	examples\rcopy.c	/^	uint64_t id;$/;"	m	struct:msg_hdr	file:
len	examples\rcopy.c	/^	uint16_t len;$/;"	m	struct:msg_hdr	file:
main	examples\rcopy.c	/^int main(int argc, char **argv)$/;"	f
msg_get_resp	examples\rcopy.c	/^static int msg_get_resp(int rs, struct msg_hdr *msg, uint8_t cmd)$/;"	f	file:
msg_hdr	examples\rcopy.c	/^struct msg_hdr {$/;"	s	file:
msg_open	examples\rcopy.c	/^struct msg_open {$/;"	s	file:
msg_recv_hdr	examples\rcopy.c	/^static int msg_recv_hdr(int rs, struct msg_hdr *hdr)$/;"	f	file:
msg_send_resp	examples\rcopy.c	/^static void msg_send_resp(int rs, struct msg_hdr *msg, uint32_t status)$/;"	f	file:
msg_write	examples\rcopy.c	/^struct msg_write {$/;"	s	file:
path	examples\rcopy.c	/^	char path[0];$/;"	m	struct:msg_open	file:
port	examples\rcopy.c	/^static char *port = "7427";$/;"	v	file:
rsocket_address	examples\rcopy.c	/^union rsocket_address {$/;"	u	file:
sa	examples\rcopy.c	/^	struct sockaddr		sa;$/;"	m	union:rsocket_address	typeref:struct:rsocket_address::sockaddr	file:
server_close	examples\rcopy.c	/^static void server_close(int rs, struct msg_hdr *msg)$/;"	f	file:
server_listen	examples\rcopy.c	/^static int server_listen(void)$/;"	f	file:
server_open	examples\rcopy.c	/^static int server_open(int rs, struct msg_hdr *msg)$/;"	f	file:
server_opts	examples\rcopy.c	/^static void server_opts(int argc, char **argv)$/;"	f	file:
server_process	examples\rcopy.c	/^static void server_process(int rs)$/;"	f	file:
server_run	examples\rcopy.c	/^static int server_run(void)$/;"	f	file:
server_write	examples\rcopy.c	/^static int server_write(int rs, struct msg_hdr *msg)$/;"	f	file:
show_perf	examples\rcopy.c	/^static void show_perf(void)$/;"	f	file:
show_usage	examples\rcopy.c	/^static void show_usage(char *program)$/;"	f	file:
sin	examples\rcopy.c	/^	struct sockaddr_in	sin;$/;"	m	union:rsocket_address	typeref:struct:rsocket_address::sockaddr_in	file:
sin6	examples\rcopy.c	/^	struct sockaddr_in6	sin6;$/;"	m	union:rsocket_address	typeref:struct:rsocket_address::sockaddr_in6	file:
size	examples\rcopy.c	/^	uint64_t size;$/;"	m	struct:msg_write	file:
src_file	examples\rcopy.c	/^static char *src_file;$/;"	v	file:
start	examples\rcopy.c	/^static struct timeval start, end;$/;"	v	typeref:struct:timeval	file:
storage	examples\rcopy.c	/^	struct sockaddr_storage storage;$/;"	m	union:rsocket_address	typeref:struct:rsocket_address::sockaddr_storage	file:
version	examples\rcopy.c	/^	uint8_t  version;$/;"	m	struct:msg_hdr	file:
id	examples\rdma_client.c	/^struct rdma_cm_id *id;$/;"	v	typeref:struct:rdma_cm_id
main	examples\rdma_client.c	/^int main(int argc, char **argv)$/;"	f
mr	examples\rdma_client.c	/^struct ibv_mr *mr, *send_mr;$/;"	v	typeref:struct:ibv_mr
port	examples\rdma_client.c	/^static char *port = "7471";$/;"	v	file:
recv_msg	examples\rdma_client.c	/^uint8_t recv_msg[16];$/;"	v
run	examples\rdma_client.c	/^static int run(void)$/;"	f	file:
send_flags	examples\rdma_client.c	/^int send_flags;$/;"	v
send_mr	examples\rdma_client.c	/^struct ibv_mr *mr, *send_mr;$/;"	v	typeref:struct:
send_msg	examples\rdma_client.c	/^uint8_t send_msg[16];$/;"	v
server	examples\rdma_client.c	/^static char *server = "127.0.0.1";$/;"	v	file:
id	examples\rdma_server.c	/^struct rdma_cm_id *listen_id, *id;$/;"	v	typeref:struct:
listen_id	examples\rdma_server.c	/^struct rdma_cm_id *listen_id, *id;$/;"	v	typeref:struct:rdma_cm_id
main	examples\rdma_server.c	/^int main(int argc, char **argv)$/;"	f
mr	examples\rdma_server.c	/^struct ibv_mr *mr, *send_mr;$/;"	v	typeref:struct:ibv_mr
port	examples\rdma_server.c	/^static char *port = "7471";$/;"	v	file:
recv_msg	examples\rdma_server.c	/^uint8_t recv_msg[16];$/;"	v
run	examples\rdma_server.c	/^static int run(void)$/;"	f	file:
send_flags	examples\rdma_server.c	/^int send_flags;$/;"	v
send_mr	examples\rdma_server.c	/^struct ibv_mr *mr, *send_mr;$/;"	v	typeref:struct:
send_msg	examples\rdma_server.c	/^uint8_t send_msg[16];$/;"	v
hints	examples\rdma_xclient.c	/^struct rdma_addrinfo hints;$/;"	v	typeref:struct:rdma_addrinfo
id	examples\rdma_xclient.c	/^struct rdma_cm_id *id;$/;"	v	typeref:struct:rdma_cm_id
main	examples\rdma_xclient.c	/^int main(int argc, char **argv)$/;"	f
mr	examples\rdma_xclient.c	/^struct ibv_mr *mr;$/;"	v	typeref:struct:ibv_mr
port	examples\rdma_xclient.c	/^static char port[6] = "7471";$/;"	v	file:
post_send	examples\rdma_xclient.c	/^static int post_send(void)$/;"	f	file:
send_msg	examples\rdma_xclient.c	/^uint8_t send_msg[16];$/;"	v
server	examples\rdma_xclient.c	/^static char *server = "127.0.0.1";$/;"	v	file:
srqn	examples\rdma_xclient.c	/^uint32_t srqn;$/;"	v
test	examples\rdma_xclient.c	/^static int test(void)$/;"	f	file:
create_srq	examples\rdma_xserver.c	/^static int create_srq(void)$/;"	f	file:
hints	examples\rdma_xserver.c	/^struct rdma_addrinfo hints;$/;"	v	typeref:struct:rdma_addrinfo
id	examples\rdma_xserver.c	/^struct rdma_cm_id *listen_id, *id;$/;"	v	typeref:struct:
listen_id	examples\rdma_xserver.c	/^struct rdma_cm_id *listen_id, *id;$/;"	v	typeref:struct:rdma_cm_id
main	examples\rdma_xserver.c	/^int main(int argc, char **argv)$/;"	f
mr	examples\rdma_xserver.c	/^struct ibv_mr *mr;$/;"	v	typeref:struct:ibv_mr
port	examples\rdma_xserver.c	/^static char *port = "7471";$/;"	v	file:
recv_msg	examples\rdma_xserver.c	/^uint8_t recv_msg[16];$/;"	v
srqn	examples\rdma_xserver.c	/^uint32_t srqn;$/;"	v
test	examples\rdma_xserver.c	/^static int test(void)$/;"	f	file:
TEST_CNT	examples\riostream.c	75;"	d	file:
ai_hints	examples\riostream.c	/^static struct addrinfo ai_hints;$/;"	v	typeref:struct:addrinfo	file:
buf	examples\riostream.c	/^static void *buf;$/;"	v	file:
buffer_size	examples\riostream.c	/^static int buffer_size, inline_size = 64;$/;"	v	file:
client_connect	examples\riostream.c	/^static int client_connect(void)$/;"	f	file:
custom	examples\riostream.c	/^static int custom;$/;"	v	file:
dst_addr	examples\riostream.c	/^static char *dst_addr;$/;"	v	file:
end	examples\riostream.c	/^static struct timeval start, end;$/;"	v	typeref:struct:	file:
flags	examples\riostream.c	/^static int flags = MSG_DONTWAIT;$/;"	v	file:
init_bandwidth_test	examples\riostream.c	/^static void init_bandwidth_test(int size)$/;"	f	file:
init_latency_test	examples\riostream.c	/^static void init_latency_test(int size)$/;"	f	file:
inline_size	examples\riostream.c	/^static int buffer_size, inline_size = 64;$/;"	v	file:
iterations	examples\riostream.c	/^static int iterations = 1;$/;"	v	file:
lrs	examples\riostream.c	/^static int rs, lrs;$/;"	v	file:
main	examples\riostream.c	/^int main(int argc, char **argv)$/;"	f
optimization	examples\riostream.c	/^static enum rs_optimization optimization;$/;"	v	typeref:enum:rs_optimization	file:
option	examples\riostream.c	/^	int option;$/;"	m	struct:test_size_param	file:
poll_byte	examples\riostream.c	/^static volatile uint8_t *poll_byte;$/;"	v	file:
poll_timeout	examples\riostream.c	/^static int poll_timeout = 0;$/;"	v	file:
port	examples\riostream.c	/^static char *port = "7471";$/;"	v	file:
rai_hints	examples\riostream.c	/^static struct rdma_addrinfo rai_hints;$/;"	v	typeref:struct:rdma_addrinfo	file:
recv_msg	examples\riostream.c	/^static int recv_msg(int size)$/;"	f	file:
recv_xfer	examples\riostream.c	/^static int recv_xfer(int size, uint8_t marker)$/;"	f	file:
rs	examples\riostream.c	/^static int rs, lrs;$/;"	v	file:
run	examples\riostream.c	/^static int run(void)$/;"	f	file:
run_test	examples\riostream.c	/^static int run_test(void)$/;"	f	file:
send_msg	examples\riostream.c	/^static int send_msg(int size)$/;"	f	file:
send_xfer	examples\riostream.c	/^static int send_xfer(int size)$/;"	f	file:
server_connect	examples\riostream.c	/^static int server_connect(void)$/;"	f	file:
server_listen	examples\riostream.c	/^static int server_listen(void)$/;"	f	file:
set_options	examples\riostream.c	/^static void set_options(int rs)$/;"	f	file:
set_test_opt	examples\riostream.c	/^static int set_test_opt(char *optarg)$/;"	f	file:
show_perf	examples\riostream.c	/^static void show_perf(void)$/;"	f	file:
size	examples\riostream.c	/^	int size;$/;"	m	struct:test_size_param	file:
size_option	examples\riostream.c	/^static int size_option;$/;"	v	file:
src_addr	examples\riostream.c	/^static char *src_addr;$/;"	v	file:
start	examples\riostream.c	/^static struct timeval start, end;$/;"	v	typeref:struct:timeval	file:
sync_test	examples\riostream.c	/^static int sync_test(void)$/;"	f	file:
test_name	examples\riostream.c	/^static char test_name[10] = "custom";$/;"	v	file:
test_size	examples\riostream.c	/^static struct test_size_param test_size[] = {$/;"	v	typeref:struct:test_size_param	file:
test_size_param	examples\riostream.c	/^struct test_size_param {$/;"	s	file:
transfer_count	examples\riostream.c	/^static int transfer_count = 1000;$/;"	v	file:
transfer_size	examples\riostream.c	/^static int transfer_size = 1000;$/;"	v	file:
use_async	examples\riostream.c	/^static int use_async;$/;"	v	file:
use_rgai	examples\riostream.c	/^static int use_rgai;$/;"	v	file:
verify	examples\riostream.c	/^static int verify;$/;"	v	file:
ADDR_RESOLVED	examples\rping.c	/^	ADDR_RESOLVED,$/;"	e	enum:test_state	file:
CONNECTED	examples\rping.c	/^	CONNECTED,$/;"	e	enum:test_state	file:
CONNECT_REQUEST	examples\rping.c	/^	CONNECT_REQUEST,$/;"	e	enum:test_state	file:
DEBUG_LOG	examples\rping.c	53;"	d	file:
DISCONNECTED	examples\rping.c	/^	DISCONNECTED,$/;"	e	enum:test_state	file:
ERROR	examples\rping.c	/^	ERROR$/;"	e	enum:test_state	file:
IDLE	examples\rping.c	/^	IDLE = 1,$/;"	e	enum:test_state	file:
RDMA_READ_ADV	examples\rping.c	/^	RDMA_READ_ADV,$/;"	e	enum:test_state	file:
RDMA_READ_COMPLETE	examples\rping.c	/^	RDMA_READ_COMPLETE,$/;"	e	enum:test_state	file:
RDMA_WRITE_ADV	examples\rping.c	/^	RDMA_WRITE_ADV,$/;"	e	enum:test_state	file:
RDMA_WRITE_COMPLETE	examples\rping.c	/^	RDMA_WRITE_COMPLETE,$/;"	e	enum:test_state	file:
ROUTE_RESOLVED	examples\rping.c	/^	ROUTE_RESOLVED,$/;"	e	enum:test_state	file:
RPING_BUFSIZE	examples\rping.c	98;"	d	file:
RPING_MIN_BUFSIZE	examples\rping.c	108;"	d	file:
RPING_MSG_FMT	examples\rping.c	107;"	d	file:
RPING_SQ_DEPTH	examples\rping.c	99;"	d	file:
_stringify	examples\rping.c	104;"	d	file:
buf	examples\rping.c	/^	uint64_t buf;$/;"	m	struct:rping_rdma_info	file:
channel	examples\rping.c	/^	struct ibv_comp_channel *channel;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_comp_channel	file:
child_cm_id	examples\rping.c	/^	struct rdma_cm_id *child_cm_id;	\/* connection on server side *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::rdma_cm_id	file:
client_recv	examples\rping.c	/^static int client_recv(struct rping_cb *cb, struct ibv_wc *wc)$/;"	f	file:
clone_cb	examples\rping.c	/^static struct rping_cb *clone_cb(struct rping_cb *listening_cb)$/;"	f	file:
cm_channel	examples\rping.c	/^	struct rdma_event_channel *cm_channel;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::rdma_event_channel	file:
cm_id	examples\rping.c	/^	struct rdma_cm_id *cm_id;	\/* connection on client side,*\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::rdma_cm_id	file:
cm_thread	examples\rping.c	/^static void *cm_thread(void *arg)$/;"	f	file:
cmthread	examples\rping.c	/^	pthread_t cmthread;$/;"	m	struct:rping_cb	file:
count	examples\rping.c	/^	int count;			\/* ping count *\/$/;"	m	struct:rping_cb	file:
cq	examples\rping.c	/^	struct ibv_cq *cq;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_cq	file:
cq_thread	examples\rping.c	/^static void *cq_thread(void *arg)$/;"	f	file:
cqthread	examples\rping.c	/^	pthread_t cqthread;$/;"	m	struct:rping_cb	file:
debug	examples\rping.c	/^static int debug = 0;$/;"	v	file:
free_cb	examples\rping.c	/^static void free_cb(struct rping_cb *cb)$/;"	f	file:
get_addr	examples\rping.c	/^static int get_addr(char *dst, struct sockaddr *addr)$/;"	f	file:
main	examples\rping.c	/^int main(int argc, char *argv[])$/;"	f
pd	examples\rping.c	/^	struct ibv_pd *pd;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_pd	file:
persistent_server_thread	examples\rping.c	/^	pthread_t persistent_server_thread;$/;"	m	struct:rping_cb	file:
port	examples\rping.c	/^	uint16_t port;			\/* dst port in NBO *\/$/;"	m	struct:rping_cb	file:
qp	examples\rping.c	/^	struct ibv_qp *qp;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_qp	file:
rdma_buf	examples\rping.c	/^	char *rdma_buf;			\/* used as rdma sink *\/$/;"	m	struct:rping_cb	file:
rdma_mr	examples\rping.c	/^	struct ibv_mr *rdma_mr;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_mr	file:
rdma_sgl	examples\rping.c	/^	struct ibv_sge rdma_sgl;	\/* rdma single SGE *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_sge	file:
rdma_sq_wr	examples\rping.c	/^	struct ibv_send_wr rdma_sq_wr;	\/* rdma work request record *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_send_wr	file:
recv_buf	examples\rping.c	/^	struct rping_rdma_info recv_buf;\/* malloc'd buffer *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::rping_rdma_info	file:
recv_mr	examples\rping.c	/^	struct ibv_mr *recv_mr;		\/* MR associated with this buffer *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_mr	file:
recv_sgl	examples\rping.c	/^	struct ibv_sge recv_sgl;	\/* recv single SGE *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_sge	file:
remote_addr	examples\rping.c	/^	uint64_t remote_addr;		\/* remote guys TO *\/$/;"	m	struct:rping_cb	file:
remote_len	examples\rping.c	/^	uint32_t remote_len;		\/* remote guys LEN *\/$/;"	m	struct:rping_cb	file:
remote_rkey	examples\rping.c	/^	uint32_t remote_rkey;		\/* remote guys RKEY *\/$/;"	m	struct:rping_cb	file:
rkey	examples\rping.c	/^	uint32_t rkey;$/;"	m	struct:rping_rdma_info	file:
rping_accept	examples\rping.c	/^static int rping_accept(struct rping_cb *cb)$/;"	f	file:
rping_bind_client	examples\rping.c	/^static int rping_bind_client(struct rping_cb *cb)$/;"	f	file:
rping_bind_server	examples\rping.c	/^static int rping_bind_server(struct rping_cb *cb)$/;"	f	file:
rping_cb	examples\rping.c	/^struct rping_cb {$/;"	s	file:
rping_cma_event_handler	examples\rping.c	/^static int rping_cma_event_handler(struct rdma_cm_id *cma_id,$/;"	f	file:
rping_connect_client	examples\rping.c	/^static int rping_connect_client(struct rping_cb *cb)$/;"	f	file:
rping_cq_event_handler	examples\rping.c	/^static int rping_cq_event_handler(struct rping_cb *cb)$/;"	f	file:
rping_create_qp	examples\rping.c	/^static int rping_create_qp(struct rping_cb *cb)$/;"	f	file:
rping_format_send	examples\rping.c	/^static void rping_format_send(struct rping_cb *cb, char *buf, struct ibv_mr *mr)$/;"	f	file:
rping_free_buffers	examples\rping.c	/^static void rping_free_buffers(struct rping_cb *cb)$/;"	f	file:
rping_free_qp	examples\rping.c	/^static void rping_free_qp(struct rping_cb *cb)$/;"	f	file:
rping_persistent_server_thread	examples\rping.c	/^static void *rping_persistent_server_thread(void *arg)$/;"	f	file:
rping_rdma_info	examples\rping.c	/^struct rping_rdma_info {$/;"	s	file:
rping_run_client	examples\rping.c	/^static int rping_run_client(struct rping_cb *cb)$/;"	f	file:
rping_run_persistent_server	examples\rping.c	/^static int rping_run_persistent_server(struct rping_cb *listening_cb)$/;"	f	file:
rping_run_server	examples\rping.c	/^static int rping_run_server(struct rping_cb *cb)$/;"	f	file:
rping_setup_buffers	examples\rping.c	/^static int rping_setup_buffers(struct rping_cb *cb)$/;"	f	file:
rping_setup_qp	examples\rping.c	/^static int rping_setup_qp(struct rping_cb *cb, struct rdma_cm_id *cm_id)$/;"	f	file:
rping_setup_wr	examples\rping.c	/^static void rping_setup_wr(struct rping_cb *cb)$/;"	f	file:
rping_test_client	examples\rping.c	/^static int rping_test_client(struct rping_cb *cb)$/;"	f	file:
rping_test_server	examples\rping.c	/^static int rping_test_server(struct rping_cb *cb)$/;"	f	file:
rq_wr	examples\rping.c	/^	struct ibv_recv_wr rq_wr;	\/* recv work request record *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_recv_wr	file:
sem	examples\rping.c	/^	sem_t sem;$/;"	m	struct:rping_cb	file:
send_buf	examples\rping.c	/^	struct rping_rdma_info send_buf;\/* single send buf *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::rping_rdma_info	file:
send_mr	examples\rping.c	/^	struct ibv_mr *send_mr;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_mr	file:
send_sgl	examples\rping.c	/^	struct ibv_sge send_sgl;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_sge	file:
server	examples\rping.c	/^	int server;			\/* 0 iff client *\/$/;"	m	struct:rping_cb	file:
server_recv	examples\rping.c	/^static int server_recv(struct rping_cb *cb, struct ibv_wc *wc)$/;"	f	file:
sin	examples\rping.c	/^	struct sockaddr_storage sin;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::sockaddr_storage	file:
size	examples\rping.c	/^	int size;			\/* ping data size *\/$/;"	m	struct:rping_cb	file:
size	examples\rping.c	/^	uint32_t size;$/;"	m	struct:rping_rdma_info	file:
sq_wr	examples\rping.c	/^	struct ibv_send_wr sq_wr;	\/* send work request record *\/$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_send_wr	file:
start_buf	examples\rping.c	/^	char *start_buf;		\/* rdma read src *\/$/;"	m	struct:rping_cb	file:
start_mr	examples\rping.c	/^	struct ibv_mr *start_mr;$/;"	m	struct:rping_cb	typeref:struct:rping_cb::ibv_mr	file:
state	examples\rping.c	/^	enum test_state state;		\/* used for cond\/signalling *\/$/;"	m	struct:rping_cb	typeref:enum:rping_cb::test_state	file:
stringify	examples\rping.c	105;"	d	file:
test_state	examples\rping.c	/^enum test_state {$/;"	g	file:
usage	examples\rping.c	/^static void usage(char *name)$/;"	f	file:
validate	examples\rping.c	/^	int validate;			\/* validate ping data *\/$/;"	m	struct:rping_cb	file:
verbose	examples\rping.c	/^	int verbose;			\/* verbose logging *\/$/;"	m	struct:rping_cb	file:
TEST_CNT	examples\rstream.c	76;"	d	file:
ai_hints	examples\rstream.c	/^static struct addrinfo ai_hints;$/;"	v	typeref:struct:addrinfo	file:
buf	examples\rstream.c	/^static void *buf;$/;"	v	file:
buffer_size	examples\rstream.c	/^static int buffer_size, inline_size = 64;$/;"	v	file:
client_connect	examples\rstream.c	/^static int client_connect(void)$/;"	f	file:
custom	examples\rstream.c	/^static int custom; \/\/ 是否定制发送数据$/;"	v	file:
dst_addr	examples\rstream.c	/^static char *dst_addr; \/\/client ip . if dst_addr = NULL, then start as server , the src_addr is the server ip$/;"	v	file:
end	examples\rstream.c	/^static struct timeval start, end;$/;"	v	typeref:struct:	file:
flags	examples\rstream.c	/^static int flags = MSG_DONTWAIT;$/;"	v	file:
fork_pid	examples\rstream.c	/^static pid_t fork_pid;$/;"	v	file:
init_bandwidth_test	examples\rstream.c	/^static void init_bandwidth_test(int size)$/;"	f	file:
init_latency_test	examples\rstream.c	/^static void init_latency_test(int size)$/;"	f	file:
inline_size	examples\rstream.c	/^static int buffer_size, inline_size = 64;$/;"	v	file:
iterations	examples\rstream.c	/^static int iterations = 1;$/;"	v	file:
keepalive	examples\rstream.c	/^static int keepalive;$/;"	v	file:
lrs	examples\rstream.c	/^static int rs, lrs;  \/\/ rs client_socket_fd, lrs server_socket_fd$/;"	v	file:
main	examples\rstream.c	/^int main(int argc, char **argv)$/;"	f
optimization	examples\rstream.c	/^static enum rs_optimization optimization;$/;"	v	typeref:enum:rs_optimization	file:
option	examples\rstream.c	/^	int option; \/\/ 级别$/;"	m	struct:test_size_param	file:
poll_timeout	examples\rstream.c	/^static int poll_timeout = 0;$/;"	v	file:
port	examples\rstream.c	/^static char *port = "7471";$/;"	v	file:
rai_hints	examples\rstream.c	/^static struct rdma_addrinfo rai_hints;$/;"	v	typeref:struct:rdma_addrinfo	file:
recv_xfer	examples\rstream.c	/^static int recv_xfer(int size)$/;"	f	file:
rs	examples\rstream.c	/^static int rs, lrs;  \/\/ rs client_socket_fd, lrs server_socket_fd$/;"	v	file:
run	examples\rstream.c	/^static int run(void)$/;"	f	file:
run_test	examples\rstream.c	/^static int run_test(void)$/;"	f	file:
send_xfer	examples\rstream.c	/^static int send_xfer(int size)$/;"	f	file:
server_connect	examples\rstream.c	/^static int server_connect(void)$/;"	f	file:
server_listen	examples\rstream.c	/^static int server_listen(void)$/;"	f	file:
set_keepalive	examples\rstream.c	/^static void set_keepalive(int rs)$/;"	f	file:
set_options	examples\rstream.c	/^static void set_options(int rs)$/;"	f	file:
set_test_opt	examples\rstream.c	/^static int set_test_opt(char *optarg)$/;"	f	file:
show_perf	examples\rstream.c	/^static void show_perf(void)$/;"	f	file:
size	examples\rstream.c	/^	int size;$/;"	m	struct:test_size_param	file:
size_option	examples\rstream.c	/^static int size_option; \/\/ 级别$/;"	v	file:
src_addr	examples\rstream.c	/^static char *src_addr; \/\/ server ip$/;"	v	file:
start	examples\rstream.c	/^static struct timeval start, end;$/;"	v	typeref:struct:timeval	file:
sync_test	examples\rstream.c	/^static int sync_test(void)$/;"	f	file:
test_name	examples\rstream.c	/^static char test_name[10] = "custom";$/;"	v	file:
test_size	examples\rstream.c	/^static struct test_size_param test_size[] = {$/;"	v	typeref:struct:test_size_param	file:
test_size_param	examples\rstream.c	/^struct test_size_param {$/;"	s	file:
transfer_count	examples\rstream.c	/^static int transfer_count = 1000;$/;"	v	file:
transfer_size	examples\rstream.c	/^static int transfer_size = 1000;$/;"	v	file:
use_async	examples\rstream.c	/^static int use_async;$/;"	v	file:
use_fork	examples\rstream.c	/^static int use_fork;$/;"	v	file:
use_rgai	examples\rstream.c	/^static int use_rgai; \/\/ no-zero means use rdma , 0 means use tcp\/ip $/;"	v	file:
verify	examples\rstream.c	/^static int verify;$/;"	v	file:
addr_handler	examples\udaddy.c	/^static int addr_handler(struct cmatest_node *node)$/;"	f	file:
ah	examples\udaddy.c	/^	struct ibv_ah		*ah;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_ah	file:
alloc_nodes	examples\udaddy.c	/^static int alloc_nodes(void)$/;"	f	file:
channel	examples\udaddy.c	/^	struct rdma_event_channel *channel;$/;"	m	struct:cmatest	typeref:struct:cmatest::rdma_event_channel	file:
cma_handler	examples\udaddy.c	/^static int cma_handler(struct rdma_cm_id *cma_id, struct rdma_cm_event *event)$/;"	f	file:
cma_id	examples\udaddy.c	/^	struct rdma_cm_id	*cma_id;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::rdma_cm_id	file:
cmatest	examples\udaddy.c	/^struct cmatest {$/;"	s	file:
cmatest_node	examples\udaddy.c	/^struct cmatest_node {$/;"	s	file:
conn_index	examples\udaddy.c	/^	int			conn_index;$/;"	m	struct:cmatest	file:
connect_error	examples\udaddy.c	/^static void connect_error(void)$/;"	f	file:
connect_events	examples\udaddy.c	/^static int connect_events(void)$/;"	f	file:
connect_handler	examples\udaddy.c	/^static int connect_handler(struct rdma_cm_id *cma_id)$/;"	f	file:
connected	examples\udaddy.c	/^	int			connected;$/;"	m	struct:cmatest_node	file:
connections	examples\udaddy.c	/^static int connections = 1;$/;"	v	file:
connects_left	examples\udaddy.c	/^	int			connects_left;$/;"	m	struct:cmatest	file:
cq	examples\udaddy.c	/^	struct ibv_cq		*cq;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_cq	file:
create_message	examples\udaddy.c	/^static int create_message(struct cmatest_node *node)$/;"	f	file:
create_reply_ah	examples\udaddy.c	/^static void create_reply_ah(struct cmatest_node *node, struct ibv_wc *wc)$/;"	f	file:
destroy_node	examples\udaddy.c	/^static void destroy_node(struct cmatest_node *node)$/;"	f	file:
destroy_nodes	examples\udaddy.c	/^static void destroy_nodes(void)$/;"	f	file:
dst_addr	examples\udaddy.c	/^static char *dst_addr;$/;"	v	file:
hints	examples\udaddy.c	/^static struct rdma_addrinfo hints;$/;"	v	typeref:struct:rdma_addrinfo	file:
id	examples\udaddy.c	/^	int			id;$/;"	m	struct:cmatest_node	file:
init_node	examples\udaddy.c	/^static int init_node(struct cmatest_node *node)$/;"	f	file:
main	examples\udaddy.c	/^int main(int argc, char **argv)$/;"	f
mem	examples\udaddy.c	/^	void			*mem;$/;"	m	struct:cmatest_node	file:
message_count	examples\udaddy.c	/^static int message_count = 10;$/;"	v	file:
message_size	examples\udaddy.c	/^static int message_size = 100;$/;"	v	file:
mr	examples\udaddy.c	/^	struct ibv_mr		*mr;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_mr	file:
nodes	examples\udaddy.c	/^	struct cmatest_node	*nodes;$/;"	m	struct:cmatest	typeref:struct:cmatest::cmatest_node	file:
pd	examples\udaddy.c	/^	struct ibv_pd		*pd;$/;"	m	struct:cmatest_node	typeref:struct:cmatest_node::ibv_pd	file:
poll_cqs	examples\udaddy.c	/^static int poll_cqs(void)$/;"	f	file:
port	examples\udaddy.c	/^static char *port = "7174";$/;"	v	file:
post_recvs	examples\udaddy.c	/^static int post_recvs(struct cmatest_node *node)$/;"	f	file:
post_sends	examples\udaddy.c	/^static int post_sends(struct cmatest_node *node, int signal_flag)$/;"	f	file:
rai	examples\udaddy.c	/^	struct rdma_addrinfo	*rai;$/;"	m	struct:cmatest	typeref:struct:cmatest::rdma_addrinfo	file:
remote_qkey	examples\udaddy.c	/^	uint32_t		remote_qkey;$/;"	m	struct:cmatest_node	file:
remote_qpn	examples\udaddy.c	/^	uint32_t		remote_qpn;$/;"	m	struct:cmatest_node	file:
resolved_handler	examples\udaddy.c	/^static int resolved_handler(struct cmatest_node *node,$/;"	f	file:
route_handler	examples\udaddy.c	/^static int route_handler(struct cmatest_node *node)$/;"	f	file:
run_client	examples\udaddy.c	/^static int run_client(void)$/;"	f	file:
run_server	examples\udaddy.c	/^static int run_server(void)$/;"	f	file:
set_tos	examples\udaddy.c	/^static uint8_t set_tos = 0;$/;"	v	file:
src_addr	examples\udaddy.c	/^static char *src_addr;$/;"	v	file:
test	examples\udaddy.c	/^static struct cmatest test;$/;"	v	typeref:struct:cmatest	file:
tos	examples\udaddy.c	/^static uint8_t tos;$/;"	v	file:
verify_test_params	examples\udaddy.c	/^static int verify_test_params(struct cmatest_node *node)$/;"	f	file:
CTRL_MSG_SIZE	examples\udpong.c	77;"	d	file:
TEST_CNT	examples\udpong.c	58;"	d	file:
addr	examples\udpong.c	/^static union socket_addr addr;$/;"	v	typeref:union:socket_addr	file:
addrlen	examples\udpong.c	/^static socklen_t addrlen;$/;"	v	file:
buf	examples\udpong.c	/^	uint8_t  buf[2048];$/;"	m	struct:message	file:
buffer_size	examples\udpong.c	/^static int buffer_size;$/;"	v	file:
client	examples\udpong.c	/^struct client {$/;"	s	file:
client_connect	examples\udpong.c	/^static int client_connect(void)$/;"	f	file:
client_recv	examples\udpong.c	/^static ssize_t client_recv(struct message *msg, size_t size, int timeout)$/;"	f	file:
client_run	examples\udpong.c	/^static int client_run(void)$/;"	f	file:
client_send	examples\udpong.c	/^static ssize_t client_send(struct message *msg, size_t size)$/;"	f	file:
client_send_recv	examples\udpong.c	/^static int client_send_recv(struct message *msg, size_t size, int timeout)$/;"	f	file:
clients	examples\udpong.c	/^static struct client clients[256];$/;"	v	typeref:struct:client	file:
custom	examples\udpong.c	/^static int custom;$/;"	v	file:
data	examples\udpong.c	/^	uint32_t data;$/;"	m	struct:message	file:
dst_addr	examples\udpong.c	/^static char *dst_addr;$/;"	v	file:
echo	examples\udpong.c	/^static int echo;$/;"	v	file:
end	examples\udpong.c	/^static struct timeval start, end;$/;"	v	typeref:struct:	file:
flags	examples\udpong.c	/^static int flags = MSG_DONTWAIT;$/;"	v	file:
id	examples\udpong.c	/^	uint8_t id;$/;"	m	struct:message	file:
id	examples\udpong.c	/^static uint8_t id;$/;"	v	file:
init_bandwidth_test	examples\udpong.c	/^static void init_bandwidth_test(int size)$/;"	f	file:
init_latency_test	examples\udpong.c	/^static void init_latency_test(int size)$/;"	f	file:
main	examples\udpong.c	/^int main(int argc, char **argv)$/;"	f
message	examples\udpong.c	/^struct message {$/;"	s	file:
msg	examples\udpong.c	/^static struct message msg;$/;"	v	typeref:struct:message	file:
msg_op_data	examples\udpong.c	/^	msg_op_data,$/;"	e	enum:__anon7	file:
msg_op_echo	examples\udpong.c	/^	msg_op_echo,$/;"	e	enum:__anon7	file:
msg_op_end	examples\udpong.c	/^	msg_op_end$/;"	e	enum:__anon7	file:
msg_op_login	examples\udpong.c	/^	msg_op_login,$/;"	e	enum:__anon7	file:
msg_op_start	examples\udpong.c	/^	msg_op_start,$/;"	e	enum:__anon7	file:
op	examples\udpong.c	/^	uint8_t op;$/;"	m	struct:message	file:
poll_timeout	examples\udpong.c	/^static int poll_timeout;$/;"	v	file:
port	examples\udpong.c	/^static char *port = "7174";$/;"	v	file:
recvcnt	examples\udpong.c	/^	uint64_t recvcnt;$/;"	m	struct:client	file:
reserved	examples\udpong.c	/^	uint8_t reserved;$/;"	m	struct:message	file:
rs	examples\udpong.c	/^static int rs;$/;"	v	file:
run_test	examples\udpong.c	/^static int run_test(void)$/;"	f	file:
seqno	examples\udpong.c	/^	uint8_t seqno;$/;"	m	struct:message	file:
set_options	examples\udpong.c	/^static void set_options(int rs)$/;"	f	file:
set_test_opt	examples\udpong.c	/^static int set_test_opt(char *optarg)$/;"	f	file:
show_perf	examples\udpong.c	/^static void show_perf(void)$/;"	f	file:
src_addr	examples\udpong.c	/^static char *src_addr;$/;"	v	file:
start	examples\udpong.c	/^static struct timeval start, end;$/;"	v	typeref:struct:timeval	file:
svr_bind	examples\udpong.c	/^static int svr_bind(void)$/;"	f	file:
svr_process	examples\udpong.c	/^static int svr_process(struct message *msg, size_t size,$/;"	f	file:
svr_recv	examples\udpong.c	/^static ssize_t svr_recv(struct message *msg, size_t size,$/;"	f	file:
svr_run	examples\udpong.c	/^static int svr_run(void)$/;"	f	file:
svr_send	examples\udpong.c	/^static ssize_t svr_send(struct message *msg, size_t size,$/;"	f	file:
test_name	examples\udpong.c	/^static char test_name[10] = "custom";$/;"	v	file:
test_size	examples\udpong.c	/^static int test_size[] = {$/;"	v	file:
transfer_count	examples\udpong.c	/^static int transfer_count = 1000;$/;"	v	file:
transfer_size	examples\udpong.c	/^static int transfer_size = 1000;$/;"	v	file:
use_async	examples\udpong.c	/^static int use_async;$/;"	v	file:
INFINIBAND_ARCH_H	include\infiniband\arch.h	34;"	d
htonll	include\infiniband\arch.h	/^static inline uint64_t htonll(uint64_t x) { return bswap_64(x); }$/;"	f
htonll	include\infiniband\arch.h	/^static inline uint64_t htonll(uint64_t x) { return x; }$/;"	f
mb	include\infiniband\arch.h	106;"	d
mb	include\infiniband\arch.h	113;"	d
mb	include\infiniband\arch.h	120;"	d
mb	include\infiniband\arch.h	128;"	d
mb	include\infiniband\arch.h	67;"	d
mb	include\infiniband\arch.h	78;"	d
mb	include\infiniband\arch.h	85;"	d
mb	include\infiniband\arch.h	92;"	d
mb	include\infiniband\arch.h	99;"	d
ntohll	include\infiniband\arch.h	/^static inline uint64_t ntohll(uint64_t x) { return bswap_64(x); }$/;"	f
ntohll	include\infiniband\arch.h	/^static inline uint64_t ntohll(uint64_t x) { return x; }$/;"	f
rmb	include\infiniband\arch.h	100;"	d
rmb	include\infiniband\arch.h	107;"	d
rmb	include\infiniband\arch.h	114;"	d
rmb	include\infiniband\arch.h	121;"	d
rmb	include\infiniband\arch.h	129;"	d
rmb	include\infiniband\arch.h	68;"	d
rmb	include\infiniband\arch.h	79;"	d
rmb	include\infiniband\arch.h	86;"	d
rmb	include\infiniband\arch.h	93;"	d
wc_wmb	include\infiniband\arch.h	102;"	d
wc_wmb	include\infiniband\arch.h	109;"	d
wc_wmb	include\infiniband\arch.h	116;"	d
wc_wmb	include\infiniband\arch.h	123;"	d
wc_wmb	include\infiniband\arch.h	131;"	d
wc_wmb	include\infiniband\arch.h	70;"	d
wc_wmb	include\infiniband\arch.h	81;"	d
wc_wmb	include\infiniband\arch.h	88;"	d
wc_wmb	include\infiniband\arch.h	95;"	d
wmb	include\infiniband\arch.h	101;"	d
wmb	include\infiniband\arch.h	108;"	d
wmb	include\infiniband\arch.h	115;"	d
wmb	include\infiniband\arch.h	122;"	d
wmb	include\infiniband\arch.h	130;"	d
wmb	include\infiniband\arch.h	69;"	d
wmb	include\infiniband\arch.h	80;"	d
wmb	include\infiniband\arch.h	87;"	d
wmb	include\infiniband\arch.h	94;"	d
BEGIN_C_DECLS	include\infiniband\driver.h	42;"	d
BEGIN_C_DECLS	include\infiniband\driver.h	45;"	d
END_C_DECLS	include\infiniband\driver.h	43;"	d
END_C_DECLS	include\infiniband\driver.h	46;"	d
IBV_CMD_REG_MR_HAS_RESP_PARAMS	include\infiniband\driver.h	140;"	d
IBV_CMD_RESIZE_CQ_HAS_RESP_PARAMS	include\infiniband\driver.h	174;"	d
IBV_DEVICE_LIBRARY_EXTENSION	include\infiniband\driver.h	54;"	d
IBV_GID_TYPE_IB_ROCE_V1	include\infiniband\driver.h	/^	IBV_GID_TYPE_IB_ROCE_V1,$/;"	e	enum:ibv_gid_type
IBV_GID_TYPE_ROCE_V2	include\infiniband\driver.h	/^	IBV_GID_TYPE_ROCE_V2,$/;"	e	enum:ibv_gid_type
INFINIBAND_DRIVER_H	include\infiniband\driver.h	36;"	d
VERBS_QP_RESERVED	include\infiniband\driver.h	/^	VERBS_QP_RESERVED	= 1 << 1$/;"	e	enum:verbs_qp_mask
VERBS_QP_XRCD	include\infiniband\driver.h	/^	VERBS_QP_XRCD		= 1 << 0,$/;"	e	enum:verbs_qp_mask
VERBS_SRQ_CQ	include\infiniband\driver.h	/^	VERBS_SRQ_CQ		= 1 << 2,$/;"	e	enum:verbs_srq_mask
VERBS_SRQ_NUM	include\infiniband\driver.h	/^	VERBS_SRQ_NUM		= 1 << 3,$/;"	e	enum:verbs_srq_mask
VERBS_SRQ_RESERVED	include\infiniband\driver.h	/^	VERBS_SRQ_RESERVED	= 1 << 4$/;"	e	enum:verbs_srq_mask
VERBS_SRQ_TYPE	include\infiniband\driver.h	/^	VERBS_SRQ_TYPE		= 1 << 0,$/;"	e	enum:verbs_srq_mask
VERBS_SRQ_XRCD	include\infiniband\driver.h	/^	VERBS_SRQ_XRCD		= 1 << 1,$/;"	e	enum:verbs_srq_mask
VERBS_XRCD_HANDLE	include\infiniband\driver.h	/^	VERBS_XRCD_HANDLE	= 1 << 0,$/;"	e	enum:verbs_xrcd_mask
VERBS_XRCD_RESERVED	include\infiniband\driver.h	/^	VERBS_XRCD_RESERVED	= 1 << 1$/;"	e	enum:verbs_xrcd_mask
comp_mask	include\infiniband\driver.h	/^	uint32_t		comp_mask;$/;"	m	struct:verbs_qp
comp_mask	include\infiniband\driver.h	/^	uint32_t		comp_mask;$/;"	m	struct:verbs_srq
comp_mask	include\infiniband\driver.h	/^	uint32_t		comp_mask;$/;"	m	struct:verbs_xrcd
cq	include\infiniband\driver.h	/^	struct ibv_cq	       *cq;$/;"	m	struct:verbs_srq	typeref:struct:verbs_srq::ibv_cq
handle	include\infiniband\driver.h	/^	uint32_t		handle;$/;"	m	struct:verbs_xrcd
ibv_driver_init_func	include\infiniband\driver.h	/^typedef struct ibv_device *(*ibv_driver_init_func)(const char *uverbs_sys_path,$/;"	t	typeref:struct:ibv_driver_init_func
ibv_gid_type	include\infiniband\driver.h	/^enum ibv_gid_type {$/;"	g
qp	include\infiniband\driver.h	/^	struct ibv_qp		qp;$/;"	m	struct:verbs_qp	typeref:struct:verbs_qp::ibv_qp
srq	include\infiniband\driver.h	/^	struct ibv_srq		srq;$/;"	m	struct:verbs_srq	typeref:struct:verbs_srq::ibv_srq
srq_num	include\infiniband\driver.h	/^	uint32_t		srq_num;$/;"	m	struct:verbs_srq
srq_type	include\infiniband\driver.h	/^	enum ibv_srq_type	srq_type;$/;"	m	struct:verbs_srq	typeref:enum:verbs_srq::ibv_srq_type
verbs_driver_init_func	include\infiniband\driver.h	/^typedef struct verbs_device *(*verbs_driver_init_func)(const char *uverbs_sys_path,$/;"	t	typeref:struct:verbs_driver_init_func
verbs_get_srq_num	include\infiniband\driver.h	/^static inline int verbs_get_srq_num(struct ibv_srq *srq, uint32_t *srq_num)$/;"	f
verbs_qp	include\infiniband\driver.h	/^struct verbs_qp {$/;"	s
verbs_qp_mask	include\infiniband\driver.h	/^enum verbs_qp_mask {$/;"	g
verbs_srq	include\infiniband\driver.h	/^struct verbs_srq {$/;"	s
verbs_srq_mask	include\infiniband\driver.h	/^enum verbs_srq_mask {$/;"	g
verbs_xrcd	include\infiniband\driver.h	/^struct verbs_xrcd {$/;"	s
verbs_xrcd_mask	include\infiniband\driver.h	/^enum verbs_xrcd_mask {$/;"	g
xrcd	include\infiniband\driver.h	/^	struct ibv_xrcd		xrcd;$/;"	m	struct:verbs_xrcd	typeref:struct:verbs_xrcd::ibv_xrcd
xrcd	include\infiniband\driver.h	/^	struct verbs_xrcd       *xrcd;$/;"	m	struct:verbs_qp	typeref:struct:verbs_qp::verbs_xrcd
xrcd	include\infiniband\driver.h	/^	struct verbs_xrcd      *xrcd;$/;"	m	struct:verbs_srq	typeref:struct:verbs_srq::verbs_xrcd
AF_IB	include\infiniband\ib.h	40;"	d
PF_IB	include\infiniband\ib.h	43;"	d
_RDMA_IB_H	include\infiniband\ib.h	34;"	d
__be16	include\infiniband\ib.h	47;"	d
__be32	include\infiniband\ib.h	50;"	d
__be64	include\infiniband\ib.h	53;"	d
ib_addr	include\infiniband\ib.h	/^struct ib_addr {$/;"	s
ib_addr_any	include\infiniband\ib.h	/^static inline int ib_addr_any(const struct ib_addr *a)$/;"	f
ib_addr_cmp	include\infiniband\ib.h	/^static inline int ib_addr_cmp(const struct ib_addr *a1, const struct ib_addr *a2)$/;"	f
ib_addr_loopback	include\infiniband\ib.h	/^static inline int ib_addr_loopback(const struct ib_addr *a)$/;"	f
ib_addr_set	include\infiniband\ib.h	/^static inline void ib_addr_set(struct ib_addr *addr,$/;"	f
ib_u	include\infiniband\ib.h	/^	} ib_u;$/;"	m	struct:ib_addr	typeref:union:ib_addr::__anon8
sib_addr	include\infiniband\ib.h	/^	struct ib_addr		sib_addr;$/;"	m	struct:sockaddr_ib	typeref:struct:sockaddr_ib::ib_addr
sib_addr16	include\infiniband\ib.h	64;"	d
sib_addr32	include\infiniband\ib.h	65;"	d
sib_addr64	include\infiniband\ib.h	66;"	d
sib_addr8	include\infiniband\ib.h	63;"	d
sib_family	include\infiniband\ib.h	/^	unsigned short int	sib_family;	\/* AF_IB *\/$/;"	m	struct:sockaddr_ib
sib_flowinfo	include\infiniband\ib.h	/^	__be32			sib_flowinfo;$/;"	m	struct:sockaddr_ib
sib_interface_id	include\infiniband\ib.h	69;"	d
sib_pkey	include\infiniband\ib.h	/^	__be16			sib_pkey;$/;"	m	struct:sockaddr_ib
sib_raw	include\infiniband\ib.h	67;"	d
sib_scope_id	include\infiniband\ib.h	/^	__u64			sib_scope_id;$/;"	m	struct:sockaddr_ib
sib_sid	include\infiniband\ib.h	/^	__be64			sib_sid;$/;"	m	struct:sockaddr_ib
sib_sid_mask	include\infiniband\ib.h	/^	__be64			sib_sid_mask;$/;"	m	struct:sockaddr_ib
sib_subnet_prefix	include\infiniband\ib.h	68;"	d
sockaddr_ib	include\infiniband\ib.h	/^struct sockaddr_ib {$/;"	s
uib_addr16	include\infiniband\ib.h	/^		__be16		uib_addr16[8];$/;"	m	union:ib_addr::__anon8
uib_addr32	include\infiniband\ib.h	/^		__be32		uib_addr32[4];$/;"	m	union:ib_addr::__anon8
uib_addr64	include\infiniband\ib.h	/^		__be64		uib_addr64[2];$/;"	m	union:ib_addr::__anon8
uib_addr8	include\infiniband\ib.h	/^		__u8		uib_addr8[16];$/;"	m	union:ib_addr::__anon8
IBV_CREATE_CQ_EX_KERNEL_FLAG_COMPLETION_TIMESTAMP	include\infiniband\kern-abi.h	/^	IBV_CREATE_CQ_EX_KERNEL_FLAG_COMPLETION_TIMESTAMP = 1 << 0,$/;"	e	enum:ibv_create_cq_ex_kernel_flags
IBV_CREATE_QP_COMMON	include\infiniband\kern-abi.h	/^	IBV_CREATE_QP_COMMON;$/;"	m	struct:ibv_create_qp
IBV_CREATE_QP_COMMON	include\infiniband\kern-abi.h	/^	IBV_CREATE_QP_COMMON;$/;"	m	struct:ibv_create_qp_common
IBV_CREATE_QP_COMMON	include\infiniband\kern-abi.h	616;"	d
IBV_CREATE_QP_EX_KERNEL_MASK_IND_TABLE	include\infiniband\kern-abi.h	/^	IBV_CREATE_QP_EX_KERNEL_MASK_IND_TABLE = 1 << 0,$/;"	e	enum:ibv_create_qp_ex_kernel_mask
IB_USER_VERBS_CMD_ALLOC_MW	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_ALLOC_MW,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_ALLOC_MW_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_ALLOC_MW_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_ALLOC_PD	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_ALLOC_PD,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_ALLOC_PD_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_ALLOC_PD_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_ATTACH_MCAST	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_ATTACH_MCAST,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_ATTACH_MCAST_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_ATTACH_MCAST_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_BIND_MW	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_BIND_MW,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_BIND_MW_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_BIND_MW_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CLOSE_XRCD	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CLOSE_XRCD,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_CLOSE_XRCD_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CLOSE_XRCD_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_COMMAND_MASK	include\infiniband\kern-abi.h	97;"	d
IB_USER_VERBS_CMD_CREATE_AH	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_AH,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_CREATE_AH_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_AH_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_COMP_CHANNEL_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_CQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_CQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_CREATE_CQ_EX	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_CQ_EX = IB_USER_VERBS_CMD_EXTENDED_MASK |$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_CREATE_CQ_EX_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_CQ_EX_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_CQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_CQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_FLOW	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_FLOW = IB_USER_VERBS_CMD_EXTENDED_MASK +$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_CREATE_FLOW_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_FLOW_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_QP	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_QP,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_CREATE_QP_EX	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_QP_EX = IB_USER_VERBS_CMD_EXTENDED_MASK |$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_CREATE_QP_EX_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_QP_EX_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_QP_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_QP_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_RWQ_IND_TBL	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_RWQ_IND_TBL,$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_CREATE_RWQ_IND_TBL_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_RWQ_IND_TBL_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_SRQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_SRQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_CREATE_SRQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_SRQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_WQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_WQ,$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_CREATE_WQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_WQ_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_CREATE_XSRQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_XSRQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_CREATE_XSRQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_CREATE_XSRQ_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DEALLOC_MW	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DEALLOC_MW,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_DEALLOC_MW_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DEALLOC_MW_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DEALLOC_PD	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DEALLOC_PD,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_DEALLOC_PD_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DEALLOC_PD_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DEREG_MR	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DEREG_MR,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_DEREG_MR_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DEREG_MR_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DESTROY_AH	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_AH,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_DESTROY_AH_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_AH_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DESTROY_CQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_CQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_DESTROY_CQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_CQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DESTROY_FLOW	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_FLOW,$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_DESTROY_FLOW_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_FLOW_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DESTROY_QP	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_QP,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_DESTROY_QP_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_QP_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DESTROY_RWQ_IND_TBL	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_RWQ_IND_TBL,$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_DESTROY_RWQ_IND_TBL_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_RWQ_IND_TBL_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DESTROY_SRQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_SRQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_DESTROY_SRQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_SRQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DESTROY_WQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_WQ,$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_DESTROY_WQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DESTROY_WQ_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_DETACH_MCAST	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DETACH_MCAST,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_DETACH_MCAST_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_DETACH_MCAST_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_EXTENDED_MASK	include\infiniband\kern-abi.h	105;"	d
IB_USER_VERBS_CMD_FLAGS_MASK	include\infiniband\kern-abi.h	98;"	d
IB_USER_VERBS_CMD_FLAGS_SHIFT	include\infiniband\kern-abi.h	99;"	d
IB_USER_VERBS_CMD_FLAG_EXTENDED	include\infiniband\kern-abi.h	102;"	d
IB_USER_VERBS_CMD_GET_CONTEXT	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_GET_CONTEXT,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_GET_CONTEXT_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_GET_CONTEXT_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_MODIFY_AH	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_MODIFY_AH,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_MODIFY_AH_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_MODIFY_AH_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_MODIFY_QP	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_MODIFY_QP,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_MODIFY_QP_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_MODIFY_QP_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_MODIFY_SRQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_MODIFY_SRQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_MODIFY_SRQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_MODIFY_SRQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_MODIFY_WQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_MODIFY_WQ,$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_MODIFY_WQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_MODIFY_WQ_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_OPEN_QP	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_OPEN_QP$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_OPEN_QP_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_OPEN_QP_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_OPEN_XRCD	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_OPEN_XRCD,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_OPEN_XRCD_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_OPEN_XRCD_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_PEEK_CQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_PEEK_CQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_PEEK_CQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_PEEK_CQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_POLL_CQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_POLL_CQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_POLL_CQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_POLL_CQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_POST_RECV	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_POST_RECV,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_POST_RECV_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_POST_RECV_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_POST_SEND	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_POST_SEND,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_POST_SEND_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_POST_SEND_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_POST_SRQ_RECV	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_POST_SRQ_RECV,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_POST_SRQ_RECV_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_POST_SRQ_RECV_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_AH	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_AH,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_QUERY_AH_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_AH_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_DEVICE	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_DEVICE,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_QUERY_DEVICE_EX	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_DEVICE_EX = IB_USER_VERBS_CMD_EXTENDED_MASK |$/;"	e	enum:__anon10
IB_USER_VERBS_CMD_QUERY_DEVICE_EX_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_DEVICE_EX_V2 = -1,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_DEVICE_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_DEVICE_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_GID_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_GID_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_MR	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_MR,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_QUERY_MR_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_MR_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_PARAMS_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_PARAMS_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_PKEY_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_PKEY_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_PORT	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_PORT,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_QUERY_PORT_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_PORT_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_QP	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_QP,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_QUERY_QP_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_QP_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_QUERY_SRQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_SRQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_QUERY_SRQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_QUERY_SRQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_REG_MR	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_REG_MR,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_REG_MR_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_REG_MR_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_REG_SMR	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_REG_SMR,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_REG_SMR_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_REG_SMR_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_REQ_NOTIFY_CQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_REQ_NOTIFY_CQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_REQ_NOTIFY_CQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_REQ_NOTIFY_CQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_REREG_MR	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_REREG_MR,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_REREG_MR_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_REREG_MR_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_RESIZE_CQ	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_RESIZE_CQ,$/;"	e	enum:__anon9
IB_USER_VERBS_CMD_RESIZE_CQ_V2	include\infiniband\kern-abi.h	/^	IB_USER_VERBS_CMD_RESIZE_CQ_V2,$/;"	e	enum:__anon23
IB_USER_VERBS_CMD_THRESHOLD	include\infiniband\kern-abi.h	51;"	d
IB_USER_VERBS_MAX_ABI_VERSION	include\infiniband\kern-abi.h	49;"	d
IB_USER_VERBS_MIN_ABI_VERSION	include\infiniband\kern-abi.h	48;"	d
KERN_ABI_H	include\infiniband\kern-abi.h	36;"	d
access_flags	include\infiniband\kern-abi.h	/^	__u32 access_flags;$/;"	m	struct:ibv_reg_mr
access_flags	include\infiniband\kern-abi.h	/^	__u32 access_flags;$/;"	m	struct:ibv_rereg_mr
active_mtu	include\infiniband\kern-abi.h	/^	__u8  active_mtu;$/;"	m	struct:ibv_query_port_resp
active_speed	include\infiniband\kern-abi.h	/^	__u8  active_speed;$/;"	m	struct:ibv_query_port_resp
active_width	include\infiniband\kern-abi.h	/^	__u8  active_width;$/;"	m	struct:ibv_query_port_resp
ah	include\infiniband\kern-abi.h	/^			__u32 ah;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon18
ah_attr	include\infiniband\kern-abi.h	/^	struct ibv_kern_ah_attr ah_attr;$/;"	m	struct:ibv_kern_qp_attr	typeref:struct:ibv_kern_qp_attr::ibv_kern_ah_attr
ah_handle	include\infiniband\kern-abi.h	/^	__u32 ah_handle;$/;"	m	struct:ibv_destroy_ah
alt_ah_attr	include\infiniband\kern-abi.h	/^	struct ibv_kern_ah_attr alt_ah_attr;$/;"	m	struct:ibv_kern_qp_attr	typeref:struct:ibv_kern_qp_attr::ibv_kern_ah_attr
alt_dest	include\infiniband\kern-abi.h	/^	struct ibv_qp_dest alt_dest;$/;"	m	struct:ibv_modify_qp	typeref:struct:ibv_modify_qp::ibv_qp_dest
alt_dest	include\infiniband\kern-abi.h	/^	struct ibv_qp_dest alt_dest;$/;"	m	struct:ibv_query_qp_resp	typeref:struct:ibv_query_qp_resp::ibv_qp_dest
alt_pkey_index	include\infiniband\kern-abi.h	/^	__u16	alt_pkey_index;$/;"	m	struct:ibv_kern_qp_attr
alt_pkey_index	include\infiniband\kern-abi.h	/^	__u16 alt_pkey_index;$/;"	m	struct:ibv_modify_qp
alt_pkey_index	include\infiniband\kern-abi.h	/^	__u16 alt_pkey_index;$/;"	m	struct:ibv_query_qp_resp
alt_port_num	include\infiniband\kern-abi.h	/^	__u8	alt_port_num;$/;"	m	struct:ibv_kern_qp_attr
alt_port_num	include\infiniband\kern-abi.h	/^	__u8  alt_port_num;$/;"	m	struct:ibv_modify_qp
alt_port_num	include\infiniband\kern-abi.h	/^	__u8  alt_port_num;$/;"	m	struct:ibv_query_qp_resp
alt_timeout	include\infiniband\kern-abi.h	/^	__u8	alt_timeout;$/;"	m	struct:ibv_kern_qp_attr
alt_timeout	include\infiniband\kern-abi.h	/^	__u8  alt_timeout;$/;"	m	struct:ibv_modify_qp
alt_timeout	include\infiniband\kern-abi.h	/^	__u8  alt_timeout;$/;"	m	struct:ibv_query_qp_resp
async_events_reported	include\infiniband\kern-abi.h	/^	__u32 async_events_reported;$/;"	m	struct:ibv_destroy_cq_resp
async_fd	include\infiniband\kern-abi.h	/^	__u32 async_fd;$/;"	m	struct:ibv_get_context_resp
atomic	include\infiniband\kern-abi.h	/^		} atomic;$/;"	m	union:ibv_kern_send_wr::__anon15	typeref:struct:ibv_kern_send_wr::__anon15::__anon17
atomic_cap	include\infiniband\kern-abi.h	/^	__u32 atomic_cap;$/;"	m	struct:ibv_query_device_resp
attr	include\infiniband\kern-abi.h	/^	struct ibv_kern_ah_attr attr;$/;"	m	struct:ibv_create_ah	typeref:struct:ibv_create_ah::ibv_kern_ah_attr
attr_mask	include\infiniband\kern-abi.h	/^	__u32 attr_mask;$/;"	m	struct:ibv_modify_qp
attr_mask	include\infiniband\kern-abi.h	/^	__u32 attr_mask;$/;"	m	struct:ibv_modify_srq
attr_mask	include\infiniband\kern-abi.h	/^	__u32 attr_mask;$/;"	m	struct:ibv_modify_srq_v3
attr_mask	include\infiniband\kern-abi.h	/^	__u32 attr_mask;$/;"	m	struct:ibv_modify_wq
attr_mask	include\infiniband\kern-abi.h	/^	__u32 attr_mask;$/;"	m	struct:ibv_query_qp
bad_pkey_cntr	include\infiniband\kern-abi.h	/^	__u32 bad_pkey_cntr;$/;"	m	struct:ibv_query_port_resp
bad_wr	include\infiniband\kern-abi.h	/^	__u32 bad_wr;$/;"	m	struct:ibv_post_recv_resp
bad_wr	include\infiniband\kern-abi.h	/^	__u32 bad_wr;$/;"	m	struct:ibv_post_send_resp
bad_wr	include\infiniband\kern-abi.h	/^	__u32 bad_wr;$/;"	m	struct:ibv_post_srq_recv_resp
base	include\infiniband\kern-abi.h	/^	struct ibv_create_cq_resp	base;$/;"	m	struct:ibv_create_cq_resp_ex	typeref:struct:ibv_create_cq_resp_ex::ibv_create_cq_resp
base	include\infiniband\kern-abi.h	/^	struct ibv_create_qp_common base;$/;"	m	struct:ibv_create_qp_ex	typeref:struct:ibv_create_qp_ex::ibv_create_qp_common
base	include\infiniband\kern-abi.h	/^	struct ibv_create_qp_resp base;$/;"	m	struct:ibv_create_qp_resp_ex	typeref:struct:ibv_create_qp_resp_ex::ibv_create_qp_resp
base	include\infiniband\kern-abi.h	/^	struct ibv_query_device_resp base;$/;"	m	struct:ibv_query_device_resp_ex	typeref:struct:ibv_query_device_resp_ex::ibv_query_device_resp
byte_len	include\infiniband\kern-abi.h	/^	__u32  byte_len;$/;"	m	struct:ibv_kern_wc
command	include\infiniband\kern-abi.h	/^		__u32 command;$/;"	m	struct:ex_hdr::__anon11
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:hdr
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_alloc_mw
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_alloc_pd
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_attach_mcast
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_close_xrcd
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_create_ah
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_create_comp_channel
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_create_cq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_create_qp
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_create_srq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_create_xsrq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_dealloc_mw
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_dealloc_pd
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_dereg_mr
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_destroy_ah
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_destroy_cq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_destroy_qp
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_destroy_srq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_detach_mcast
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_get_context
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_modify_qp
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_modify_srq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_modify_srq_v3
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_open_qp
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_open_xrcd
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_poll_cq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_post_recv
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_post_send
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_post_srq_recv
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_query_device
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_query_params
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_query_port
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_query_qp
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_query_srq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_reg_mr
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_req_notify_cq
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_rereg_mr
command	include\infiniband\kern-abi.h	/^	__u32 command;$/;"	m	struct:ibv_resize_cq
comp_channel	include\infiniband\kern-abi.h	/^	__s32		comp_channel;$/;"	m	struct:ibv_create_cq_ex
comp_channel	include\infiniband\kern-abi.h	/^	__s32 comp_channel;$/;"	m	struct:ibv_create_cq
comp_events_reported	include\infiniband\kern-abi.h	/^	__u32 comp_events_reported;$/;"	m	struct:ibv_destroy_cq_resp
comp_mask	include\infiniband\kern-abi.h	/^	__u32				comp_mask;$/;"	m	struct:ibv_create_cq_resp_ex
comp_mask	include\infiniband\kern-abi.h	/^	__u32		comp_mask;$/;"	m	struct:ibv_create_cq_ex
comp_mask	include\infiniband\kern-abi.h	/^	__u32		comp_mask;$/;"	m	struct:ibv_query_device_ex
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_create_flow
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_create_flow_resp
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_create_qp_ex
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_create_qp_resp_ex
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_create_rwq_ind_table
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_create_rwq_ind_table_resp
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_create_wq
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_create_wq_resp
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_destroy_flow
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_destroy_rwq_ind_table
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_destroy_wq
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_destroy_wq_resp
comp_mask	include\infiniband\kern-abi.h	/^	__u32 comp_mask;$/;"	m	struct:ibv_query_device_resp_ex
comp_vector	include\infiniband\kern-abi.h	/^	__u32		comp_vector;$/;"	m	struct:ibv_create_cq_ex
comp_vector	include\infiniband\kern-abi.h	/^	__u32 comp_vector;$/;"	m	struct:ibv_create_cq
compare_add	include\infiniband\kern-abi.h	/^			__u64 compare_add;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon17
count	include\infiniband\kern-abi.h	/^	__u32 count;$/;"	m	struct:ibv_poll_cq_resp
cq_handle	include\infiniband\kern-abi.h	/^	__u32 cq_handle;$/;"	m	struct:ibv_create_cq_resp
cq_handle	include\infiniband\kern-abi.h	/^	__u32 cq_handle;$/;"	m	struct:ibv_create_wq
cq_handle	include\infiniband\kern-abi.h	/^	__u32 cq_handle;$/;"	m	struct:ibv_create_xsrq
cq_handle	include\infiniband\kern-abi.h	/^	__u32 cq_handle;$/;"	m	struct:ibv_destroy_cq
cq_handle	include\infiniband\kern-abi.h	/^	__u32 cq_handle;$/;"	m	struct:ibv_poll_cq
cq_handle	include\infiniband\kern-abi.h	/^	__u32 cq_handle;$/;"	m	struct:ibv_req_notify_cq
cq_handle	include\infiniband\kern-abi.h	/^	__u32 cq_handle;$/;"	m	struct:ibv_resize_cq
cq_handle	include\infiniband\kern-abi.h	/^	__u64 cq_handle;$/;"	m	struct:ibv_comp_event
cqe	include\infiniband\kern-abi.h	/^	__u32		cqe;$/;"	m	struct:ibv_create_cq_ex
cqe	include\infiniband\kern-abi.h	/^	__u32 cqe;$/;"	m	struct:ibv_create_cq
cqe	include\infiniband\kern-abi.h	/^	__u32 cqe;$/;"	m	struct:ibv_create_cq_resp
cqe	include\infiniband\kern-abi.h	/^	__u32 cqe;$/;"	m	struct:ibv_resize_cq
cqe	include\infiniband\kern-abi.h	/^	__u32 cqe;$/;"	m	struct:ibv_resize_cq_resp
create_flags	include\infiniband\kern-abi.h	/^	__u32 create_flags;$/;"	m	struct:ibv_create_qp_ex
cur_qp_state	include\infiniband\kern-abi.h	/^	__u32	cur_qp_state;$/;"	m	struct:ibv_kern_qp_attr
cur_qp_state	include\infiniband\kern-abi.h	/^	__u8  cur_qp_state;$/;"	m	struct:ibv_modify_qp
cur_qp_state	include\infiniband\kern-abi.h	/^	__u8  cur_qp_state;$/;"	m	struct:ibv_query_qp_resp
curr_wq_state	include\infiniband\kern-abi.h	/^	__u32 curr_wq_state;$/;"	m	struct:ibv_modify_wq
dest	include\infiniband\kern-abi.h	/^	struct ibv_qp_dest dest;$/;"	m	struct:ibv_modify_qp	typeref:struct:ibv_modify_qp::ibv_qp_dest
dest	include\infiniband\kern-abi.h	/^	struct ibv_qp_dest dest;$/;"	m	struct:ibv_query_qp_resp	typeref:struct:ibv_query_qp_resp::ibv_qp_dest
dest_qp_num	include\infiniband\kern-abi.h	/^	__u32	dest_qp_num;$/;"	m	struct:ibv_kern_qp_attr
dest_qp_num	include\infiniband\kern-abi.h	/^	__u32 dest_qp_num;$/;"	m	struct:ibv_modify_qp
dest_qp_num	include\infiniband\kern-abi.h	/^	__u32 dest_qp_num;$/;"	m	struct:ibv_query_qp_resp
device_cap_flags	include\infiniband\kern-abi.h	/^	__u32 device_cap_flags;$/;"	m	struct:ibv_query_device_resp
device_cap_flags_ex	include\infiniband\kern-abi.h	/^	__u64 device_cap_flags_ex;$/;"	m	struct:ibv_query_device_resp_ex
dgid	include\infiniband\kern-abi.h	/^	__u8  dgid[16];$/;"	m	struct:ibv_kern_global_route
dgid	include\infiniband\kern-abi.h	/^	__u8  dgid[16];$/;"	m	struct:ibv_qp_dest
dlid	include\infiniband\kern-abi.h	/^	__u16 dlid;$/;"	m	struct:ibv_kern_ah_attr
dlid	include\infiniband\kern-abi.h	/^	__u16 dlid;$/;"	m	struct:ibv_qp_dest
dlid_path_bits	include\infiniband\kern-abi.h	/^	__u8   dlid_path_bits;$/;"	m	struct:ibv_kern_wc
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_alloc_pd
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_attach_mcast
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_create_cq
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_create_qp
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_create_srq
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_create_xsrq
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_detach_mcast
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_get_context
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_modify_qp
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_modify_srq
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_modify_srq_v3
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_open_qp
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_open_xrcd
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_query_device
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_query_port
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_query_qp
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_query_qp_resp
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_query_srq
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_reg_mr
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_rereg_mr
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_resize_cq
driver_data	include\infiniband\kern-abi.h	/^	__u64 driver_data[0];$/;"	m	struct:ibv_resize_cq_resp
dst_ip	include\infiniband\kern-abi.h	/^	__u32 dst_ip;$/;"	m	struct:ibv_kern_ipv4_filter
dst_mac	include\infiniband\kern-abi.h	/^	__u8  dst_mac[6];$/;"	m	struct:ibv_kern_eth_filter
dst_port	include\infiniband\kern-abi.h	/^	__u16 dst_port;$/;"	m	struct:ibv_kern_tcp_udp_filter
element	include\infiniband\kern-abi.h	/^	__u64 element;$/;"	m	struct:ibv_kern_async_event
en_sqd_async_notify	include\infiniband\kern-abi.h	/^	__u8	en_sqd_async_notify;$/;"	m	struct:ibv_kern_qp_attr
en_sqd_async_notify	include\infiniband\kern-abi.h	/^	__u8  en_sqd_async_notify;$/;"	m	struct:ibv_modify_qp
eth	include\infiniband\kern-abi.h	/^		struct ibv_kern_spec_eth eth;$/;"	m	union:ibv_kern_spec::__anon21	typeref:struct:ibv_kern_spec::__anon21::ibv_kern_spec_eth
ether_type	include\infiniband\kern-abi.h	/^	__u16  ether_type;$/;"	m	struct:ibv_kern_eth_filter
event_type	include\infiniband\kern-abi.h	/^	__u32 event_type;$/;"	m	struct:ibv_kern_async_event
events_reported	include\infiniband\kern-abi.h	/^	__u32 events_reported;$/;"	m	struct:ibv_destroy_qp_resp
events_reported	include\infiniband\kern-abi.h	/^	__u32 events_reported;$/;"	m	struct:ibv_destroy_srq_resp
events_reported	include\infiniband\kern-abi.h	/^	__u32 events_reported;$/;"	m	struct:ibv_destroy_wq_resp
ex_hdr	include\infiniband\kern-abi.h	/^struct ex_hdr {$/;"	s
fd	include\infiniband\kern-abi.h	/^	__u32 fd;$/;"	m	struct:ibv_create_comp_channel_resp
fd	include\infiniband\kern-abi.h	/^	__u32 fd;$/;"	m	struct:ibv_open_xrcd
flags	include\infiniband\kern-abi.h	/^	__u32		flags;$/;"	m	struct:ibv_create_cq_ex
flags	include\infiniband\kern-abi.h	/^	__u32 flags;$/;"	m	struct:ibv_kern_flow_attr
flags	include\infiniband\kern-abi.h	/^	__u32 flags;$/;"	m	struct:ibv_rereg_mr
flow_attr	include\infiniband\kern-abi.h	/^	struct ibv_kern_flow_attr flow_attr;$/;"	m	struct:ibv_create_flow	typeref:struct:ibv_create_flow::ibv_kern_flow_attr
flow_handle	include\infiniband\kern-abi.h	/^	__u32 flow_handle;$/;"	m	struct:ibv_create_flow_resp
flow_handle	include\infiniband\kern-abi.h	/^	__u32 flow_handle;$/;"	m	struct:ibv_destroy_flow
flow_label	include\infiniband\kern-abi.h	/^	__u32 flow_label;$/;"	m	struct:ibv_kern_global_route
flow_label	include\infiniband\kern-abi.h	/^	__u32 flow_label;$/;"	m	struct:ibv_qp_dest
fw_ver	include\infiniband\kern-abi.h	/^	__u64 fw_ver;$/;"	m	struct:ibv_query_device_resp
general_caps	include\infiniband\kern-abi.h	/^	__u64 general_caps;$/;"	m	struct:ibv_odp_caps_resp
gid	include\infiniband\kern-abi.h	/^	__u8  gid[16];$/;"	m	struct:ibv_attach_mcast
gid	include\infiniband\kern-abi.h	/^	__u8  gid[16];$/;"	m	struct:ibv_detach_mcast
gid_tbl_len	include\infiniband\kern-abi.h	/^	__u32 gid_tbl_len;$/;"	m	struct:ibv_query_port_resp
grh	include\infiniband\kern-abi.h	/^	struct ibv_kern_global_route grh;$/;"	m	struct:ibv_kern_ah_attr	typeref:struct:ibv_kern_ah_attr::ibv_kern_global_route
handle	include\infiniband\kern-abi.h	/^	__u32 handle;$/;"	m	struct:ibv_create_ah_resp
hca_core_clock	include\infiniband\kern-abi.h	/^	__u64 hca_core_clock;$/;"	m	struct:ibv_query_device_resp_ex
hca_va	include\infiniband\kern-abi.h	/^	__u64 hca_va;$/;"	m	struct:ibv_reg_mr
hca_va	include\infiniband\kern-abi.h	/^	__u64 hca_va;$/;"	m	struct:ibv_rereg_mr
hdr	include\infiniband\kern-abi.h	/^		} hdr;$/;"	m	union:ibv_kern_spec::__anon21	typeref:struct:ibv_kern_spec::__anon21::__anon22
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr	hdr;$/;"	m	struct:ibv_create_cq_ex	typeref:struct:ibv_create_cq_ex::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr	hdr;$/;"	m	struct:ibv_create_qp_ex	typeref:struct:ibv_create_qp_ex::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr	hdr;$/;"	m	struct:ibv_query_device_ex	typeref:struct:ibv_query_device_ex::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr hdr;$/;"	m	struct:ibv_create_flow	typeref:struct:ibv_create_flow::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr hdr;$/;"	m	struct:ibv_create_rwq_ind_table	typeref:struct:ibv_create_rwq_ind_table::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr hdr;$/;"	m	struct:ibv_create_wq	typeref:struct:ibv_create_wq::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr hdr;$/;"	m	struct:ibv_destroy_flow	typeref:struct:ibv_destroy_flow::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr hdr;$/;"	m	struct:ibv_destroy_rwq_ind_table	typeref:struct:ibv_destroy_rwq_ind_table::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr hdr;$/;"	m	struct:ibv_destroy_wq	typeref:struct:ibv_destroy_wq::ex_hdr
hdr	include\infiniband\kern-abi.h	/^	struct ex_hdr hdr;$/;"	m	struct:ibv_modify_wq	typeref:struct:ibv_modify_wq::ex_hdr
hdr	include\infiniband\kern-abi.h	/^struct hdr {$/;"	s
hop_limit	include\infiniband\kern-abi.h	/^	__u8  hop_limit;$/;"	m	struct:ibv_kern_global_route
hop_limit	include\infiniband\kern-abi.h	/^	__u8  hop_limit;$/;"	m	struct:ibv_qp_dest
hw_ver	include\infiniband\kern-abi.h	/^	__u32 hw_ver;$/;"	m	struct:ibv_query_device_resp
ibv_alloc_mw	include\infiniband\kern-abi.h	/^struct ibv_alloc_mw {$/;"	s
ibv_alloc_mw_resp	include\infiniband\kern-abi.h	/^struct ibv_alloc_mw_resp {$/;"	s
ibv_alloc_pd	include\infiniband\kern-abi.h	/^struct ibv_alloc_pd {$/;"	s
ibv_alloc_pd_resp	include\infiniband\kern-abi.h	/^struct ibv_alloc_pd_resp {$/;"	s
ibv_attach_mcast	include\infiniband\kern-abi.h	/^struct ibv_attach_mcast {$/;"	s
ibv_close_xrcd	include\infiniband\kern-abi.h	/^struct ibv_close_xrcd {$/;"	s
ibv_comp_event	include\infiniband\kern-abi.h	/^struct ibv_comp_event {$/;"	s
ibv_create_ah	include\infiniband\kern-abi.h	/^struct ibv_create_ah {$/;"	s
ibv_create_ah_resp	include\infiniband\kern-abi.h	/^struct ibv_create_ah_resp {$/;"	s
ibv_create_comp_channel	include\infiniband\kern-abi.h	/^struct ibv_create_comp_channel {$/;"	s
ibv_create_comp_channel_resp	include\infiniband\kern-abi.h	/^struct ibv_create_comp_channel_resp {$/;"	s
ibv_create_cq	include\infiniband\kern-abi.h	/^struct ibv_create_cq {$/;"	s
ibv_create_cq_ex	include\infiniband\kern-abi.h	/^struct ibv_create_cq_ex {$/;"	s
ibv_create_cq_ex_kernel_flags	include\infiniband\kern-abi.h	/^enum ibv_create_cq_ex_kernel_flags {$/;"	g
ibv_create_cq_resp	include\infiniband\kern-abi.h	/^struct ibv_create_cq_resp {$/;"	s
ibv_create_cq_resp_ex	include\infiniband\kern-abi.h	/^struct ibv_create_cq_resp_ex {$/;"	s
ibv_create_flow	include\infiniband\kern-abi.h	/^struct ibv_create_flow  {$/;"	s
ibv_create_flow_resp	include\infiniband\kern-abi.h	/^struct ibv_create_flow_resp {$/;"	s
ibv_create_qp	include\infiniband\kern-abi.h	/^struct ibv_create_qp {$/;"	s
ibv_create_qp_common	include\infiniband\kern-abi.h	/^struct ibv_create_qp_common {$/;"	s
ibv_create_qp_ex	include\infiniband\kern-abi.h	/^struct ibv_create_qp_ex {$/;"	s
ibv_create_qp_ex_kernel_mask	include\infiniband\kern-abi.h	/^enum ibv_create_qp_ex_kernel_mask {$/;"	g
ibv_create_qp_resp	include\infiniband\kern-abi.h	/^struct ibv_create_qp_resp {$/;"	s
ibv_create_qp_resp_ex	include\infiniband\kern-abi.h	/^struct ibv_create_qp_resp_ex {$/;"	s
ibv_create_qp_resp_v3	include\infiniband\kern-abi.h	/^struct ibv_create_qp_resp_v3 {$/;"	s
ibv_create_qp_resp_v4	include\infiniband\kern-abi.h	/^struct ibv_create_qp_resp_v4 {$/;"	s
ibv_create_rwq_ind_table	include\infiniband\kern-abi.h	/^struct ibv_create_rwq_ind_table {$/;"	s
ibv_create_rwq_ind_table_resp	include\infiniband\kern-abi.h	/^struct ibv_create_rwq_ind_table_resp {$/;"	s
ibv_create_srq	include\infiniband\kern-abi.h	/^struct ibv_create_srq {$/;"	s
ibv_create_srq_resp	include\infiniband\kern-abi.h	/^struct ibv_create_srq_resp {$/;"	s
ibv_create_srq_resp_v5	include\infiniband\kern-abi.h	/^struct ibv_create_srq_resp_v5 {$/;"	s
ibv_create_wq	include\infiniband\kern-abi.h	/^struct ibv_create_wq {$/;"	s
ibv_create_wq_resp	include\infiniband\kern-abi.h	/^struct ibv_create_wq_resp {$/;"	s
ibv_create_xsrq	include\infiniband\kern-abi.h	/^struct ibv_create_xsrq {$/;"	s
ibv_dealloc_mw	include\infiniband\kern-abi.h	/^struct ibv_dealloc_mw {$/;"	s
ibv_dealloc_pd	include\infiniband\kern-abi.h	/^struct ibv_dealloc_pd {$/;"	s
ibv_dereg_mr	include\infiniband\kern-abi.h	/^struct ibv_dereg_mr {$/;"	s
ibv_destroy_ah	include\infiniband\kern-abi.h	/^struct ibv_destroy_ah {$/;"	s
ibv_destroy_cq	include\infiniband\kern-abi.h	/^struct ibv_destroy_cq {$/;"	s
ibv_destroy_cq_resp	include\infiniband\kern-abi.h	/^struct ibv_destroy_cq_resp {$/;"	s
ibv_destroy_flow	include\infiniband\kern-abi.h	/^struct ibv_destroy_flow  {$/;"	s
ibv_destroy_qp	include\infiniband\kern-abi.h	/^struct ibv_destroy_qp {$/;"	s
ibv_destroy_qp_resp	include\infiniband\kern-abi.h	/^struct ibv_destroy_qp_resp {$/;"	s
ibv_destroy_rwq_ind_table	include\infiniband\kern-abi.h	/^struct ibv_destroy_rwq_ind_table {$/;"	s
ibv_destroy_srq	include\infiniband\kern-abi.h	/^struct ibv_destroy_srq {$/;"	s
ibv_destroy_srq_resp	include\infiniband\kern-abi.h	/^struct ibv_destroy_srq_resp {$/;"	s
ibv_destroy_wq	include\infiniband\kern-abi.h	/^struct ibv_destroy_wq {$/;"	s
ibv_destroy_wq_resp	include\infiniband\kern-abi.h	/^struct ibv_destroy_wq_resp {$/;"	s
ibv_detach_mcast	include\infiniband\kern-abi.h	/^struct ibv_detach_mcast {$/;"	s
ibv_get_context	include\infiniband\kern-abi.h	/^struct ibv_get_context {$/;"	s
ibv_get_context_resp	include\infiniband\kern-abi.h	/^struct ibv_get_context_resp {$/;"	s
ibv_kern_ah_attr	include\infiniband\kern-abi.h	/^struct ibv_kern_ah_attr {$/;"	s
ibv_kern_async_event	include\infiniband\kern-abi.h	/^struct ibv_kern_async_event {$/;"	s
ibv_kern_eth_filter	include\infiniband\kern-abi.h	/^struct ibv_kern_eth_filter {$/;"	s
ibv_kern_flow_attr	include\infiniband\kern-abi.h	/^struct ibv_kern_flow_attr {$/;"	s
ibv_kern_global_route	include\infiniband\kern-abi.h	/^struct ibv_kern_global_route {$/;"	s
ibv_kern_ipv4_filter	include\infiniband\kern-abi.h	/^struct ibv_kern_ipv4_filter {$/;"	s
ibv_kern_qp_attr	include\infiniband\kern-abi.h	/^struct ibv_kern_qp_attr {$/;"	s
ibv_kern_recv_wr	include\infiniband\kern-abi.h	/^struct ibv_kern_recv_wr {$/;"	s
ibv_kern_send_wr	include\infiniband\kern-abi.h	/^struct ibv_kern_send_wr {$/;"	s
ibv_kern_spec	include\infiniband\kern-abi.h	/^struct ibv_kern_spec {$/;"	s
ibv_kern_spec_eth	include\infiniband\kern-abi.h	/^struct ibv_kern_spec_eth {$/;"	s
ibv_kern_spec_ipv4	include\infiniband\kern-abi.h	/^struct ibv_kern_spec_ipv4 {$/;"	s
ibv_kern_spec_tcp_udp	include\infiniband\kern-abi.h	/^struct ibv_kern_spec_tcp_udp {$/;"	s
ibv_kern_tcp_udp_filter	include\infiniband\kern-abi.h	/^struct ibv_kern_tcp_udp_filter {$/;"	s
ibv_kern_wc	include\infiniband\kern-abi.h	/^struct ibv_kern_wc {$/;"	s
ibv_modify_qp	include\infiniband\kern-abi.h	/^struct ibv_modify_qp {$/;"	s
ibv_modify_srq	include\infiniband\kern-abi.h	/^struct ibv_modify_srq {$/;"	s
ibv_modify_srq_v3	include\infiniband\kern-abi.h	/^struct ibv_modify_srq_v3 {$/;"	s
ibv_modify_wq	include\infiniband\kern-abi.h	/^struct ibv_modify_wq  {$/;"	s
ibv_odp_caps_resp	include\infiniband\kern-abi.h	/^struct ibv_odp_caps_resp {$/;"	s
ibv_open_qp	include\infiniband\kern-abi.h	/^struct ibv_open_qp {$/;"	s
ibv_open_xrcd	include\infiniband\kern-abi.h	/^struct ibv_open_xrcd {$/;"	s
ibv_open_xrcd_resp	include\infiniband\kern-abi.h	/^struct ibv_open_xrcd_resp {$/;"	s
ibv_poll_cq	include\infiniband\kern-abi.h	/^struct ibv_poll_cq {$/;"	s
ibv_poll_cq_resp	include\infiniband\kern-abi.h	/^struct ibv_poll_cq_resp {$/;"	s
ibv_post_recv	include\infiniband\kern-abi.h	/^struct ibv_post_recv {$/;"	s
ibv_post_recv_resp	include\infiniband\kern-abi.h	/^struct ibv_post_recv_resp {$/;"	s
ibv_post_send	include\infiniband\kern-abi.h	/^struct ibv_post_send {$/;"	s
ibv_post_send_resp	include\infiniband\kern-abi.h	/^struct ibv_post_send_resp {$/;"	s
ibv_post_srq_recv	include\infiniband\kern-abi.h	/^struct ibv_post_srq_recv {$/;"	s
ibv_post_srq_recv_resp	include\infiniband\kern-abi.h	/^struct ibv_post_srq_recv_resp {$/;"	s
ibv_qp_dest	include\infiniband\kern-abi.h	/^struct ibv_qp_dest {$/;"	s
ibv_query_device	include\infiniband\kern-abi.h	/^struct ibv_query_device {$/;"	s
ibv_query_device_ex	include\infiniband\kern-abi.h	/^struct ibv_query_device_ex {$/;"	s
ibv_query_device_resp	include\infiniband\kern-abi.h	/^struct ibv_query_device_resp {$/;"	s
ibv_query_device_resp_ex	include\infiniband\kern-abi.h	/^struct ibv_query_device_resp_ex {$/;"	s
ibv_query_params	include\infiniband\kern-abi.h	/^struct ibv_query_params {$/;"	s
ibv_query_params_resp	include\infiniband\kern-abi.h	/^struct ibv_query_params_resp {$/;"	s
ibv_query_port	include\infiniband\kern-abi.h	/^struct ibv_query_port {$/;"	s
ibv_query_port_resp	include\infiniband\kern-abi.h	/^struct ibv_query_port_resp {$/;"	s
ibv_query_qp	include\infiniband\kern-abi.h	/^struct ibv_query_qp {$/;"	s
ibv_query_qp_resp	include\infiniband\kern-abi.h	/^struct ibv_query_qp_resp {$/;"	s
ibv_query_srq	include\infiniband\kern-abi.h	/^struct ibv_query_srq {$/;"	s
ibv_query_srq_resp	include\infiniband\kern-abi.h	/^struct ibv_query_srq_resp {$/;"	s
ibv_reg_mr	include\infiniband\kern-abi.h	/^struct ibv_reg_mr {$/;"	s
ibv_reg_mr_resp	include\infiniband\kern-abi.h	/^struct ibv_reg_mr_resp {$/;"	s
ibv_req_notify_cq	include\infiniband\kern-abi.h	/^struct ibv_req_notify_cq {$/;"	s
ibv_rereg_mr	include\infiniband\kern-abi.h	/^struct ibv_rereg_mr {$/;"	s
ibv_rereg_mr_resp	include\infiniband\kern-abi.h	/^struct ibv_rereg_mr_resp {$/;"	s
ibv_resize_cq	include\infiniband\kern-abi.h	/^struct ibv_resize_cq {$/;"	s
ibv_resize_cq_resp	include\infiniband\kern-abi.h	/^struct ibv_resize_cq_resp {$/;"	s
ibv_rss_caps_resp	include\infiniband\kern-abi.h	/^struct ibv_rss_caps_resp {$/;"	s
imm_data	include\infiniband\kern-abi.h	/^	__u32  imm_data;$/;"	m	struct:ibv_kern_wc
imm_data	include\infiniband\kern-abi.h	/^	__u32 imm_data;$/;"	m	struct:ibv_kern_send_wr
in_words	include\infiniband\kern-abi.h	/^		__u16 in_words;$/;"	m	struct:ex_hdr::__anon11
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:hdr
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_alloc_mw
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_alloc_pd
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_attach_mcast
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_close_xrcd
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_create_ah
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_create_comp_channel
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_create_cq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_create_qp
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_create_srq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_create_xsrq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_dealloc_mw
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_dealloc_pd
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_dereg_mr
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_destroy_ah
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_destroy_cq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_destroy_qp
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_destroy_srq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_detach_mcast
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_get_context
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_modify_qp
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_modify_srq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_modify_srq_v3
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_open_qp
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_open_xrcd
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_poll_cq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_post_recv
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_post_send
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_post_srq_recv
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_query_device
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_query_params
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_query_port
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_query_qp
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_query_srq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_reg_mr
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_req_notify_cq
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_rereg_mr
in_words	include\infiniband\kern-abi.h	/^	__u16 in_words;$/;"	m	struct:ibv_resize_cq
ind_tbl_handle	include\infiniband\kern-abi.h	/^	__u32 ind_tbl_handle;$/;"	m	struct:ibv_create_qp_ex
ind_tbl_handle	include\infiniband\kern-abi.h	/^	__u32 ind_tbl_handle;$/;"	m	struct:ibv_create_rwq_ind_table_resp
ind_tbl_handle	include\infiniband\kern-abi.h	/^	__u32 ind_tbl_handle;$/;"	m	struct:ibv_destroy_rwq_ind_table
ind_tbl_num	include\infiniband\kern-abi.h	/^	__u32 ind_tbl_num;$/;"	m	struct:ibv_create_rwq_ind_table_resp
init_type_reply	include\infiniband\kern-abi.h	/^	__u8  init_type_reply;$/;"	m	struct:ibv_query_port_resp
ipv4	include\infiniband\kern-abi.h	/^		struct ibv_kern_spec_ipv4 ipv4;$/;"	m	union:ibv_kern_spec::__anon21	typeref:struct:ibv_kern_spec::__anon21::ibv_kern_spec_ipv4
is_global	include\infiniband\kern-abi.h	/^	__u8  is_global;$/;"	m	struct:ibv_kern_ah_attr
is_global	include\infiniband\kern-abi.h	/^	__u8  is_global;$/;"	m	struct:ibv_qp_dest
length	include\infiniband\kern-abi.h	/^	__u64 length;$/;"	m	struct:ibv_reg_mr
length	include\infiniband\kern-abi.h	/^	__u64 length;$/;"	m	struct:ibv_rereg_mr
lid	include\infiniband\kern-abi.h	/^	__u16 lid;$/;"	m	struct:ibv_query_port_resp
link_layer	include\infiniband\kern-abi.h	/^	__u8  link_layer;$/;"	m	struct:ibv_query_port_resp
lkey	include\infiniband\kern-abi.h	/^	__u32 lkey;$/;"	m	struct:ibv_reg_mr_resp
lkey	include\infiniband\kern-abi.h	/^	__u32 lkey;$/;"	m	struct:ibv_rereg_mr_resp
lmc	include\infiniband\kern-abi.h	/^	__u8  lmc;$/;"	m	struct:ibv_query_port_resp
local_ca_ack_delay	include\infiniband\kern-abi.h	/^	__u8  local_ca_ack_delay;$/;"	m	struct:ibv_query_device_resp
log_ind_tbl_size	include\infiniband\kern-abi.h	/^	__u32 log_ind_tbl_size;$/;"	m	struct:ibv_create_rwq_ind_table
mask	include\infiniband\kern-abi.h	/^	struct ibv_kern_eth_filter mask;$/;"	m	struct:ibv_kern_spec_eth	typeref:struct:ibv_kern_spec_eth::ibv_kern_eth_filter
mask	include\infiniband\kern-abi.h	/^	struct ibv_kern_ipv4_filter mask;$/;"	m	struct:ibv_kern_spec_ipv4	typeref:struct:ibv_kern_spec_ipv4::ibv_kern_ipv4_filter
mask	include\infiniband\kern-abi.h	/^	struct ibv_kern_tcp_udp_filter mask;$/;"	m	struct:ibv_kern_spec_tcp_udp	typeref:struct:ibv_kern_spec_tcp_udp::ibv_kern_tcp_udp_filter
max_ah	include\infiniband\kern-abi.h	/^	__u32 max_ah;$/;"	m	struct:ibv_query_device_resp
max_cq	include\infiniband\kern-abi.h	/^	__u32 max_cq;$/;"	m	struct:ibv_query_device_resp
max_cqe	include\infiniband\kern-abi.h	/^	__u32 max_cqe;$/;"	m	struct:ibv_query_device_resp
max_dest_rd_atomic	include\infiniband\kern-abi.h	/^	__u8	max_dest_rd_atomic;$/;"	m	struct:ibv_kern_qp_attr
max_dest_rd_atomic	include\infiniband\kern-abi.h	/^	__u8  max_dest_rd_atomic;$/;"	m	struct:ibv_modify_qp
max_dest_rd_atomic	include\infiniband\kern-abi.h	/^	__u8  max_dest_rd_atomic;$/;"	m	struct:ibv_query_qp_resp
max_ee	include\infiniband\kern-abi.h	/^	__u32 max_ee;$/;"	m	struct:ibv_query_device_resp
max_ee_init_rd_atom	include\infiniband\kern-abi.h	/^	__u32 max_ee_init_rd_atom;$/;"	m	struct:ibv_query_device_resp
max_ee_rd_atom	include\infiniband\kern-abi.h	/^	__u32 max_ee_rd_atom;$/;"	m	struct:ibv_query_device_resp
max_fmr	include\infiniband\kern-abi.h	/^	__u32 max_fmr;$/;"	m	struct:ibv_query_device_resp
max_inline_data	include\infiniband\kern-abi.h	/^	__u32	max_inline_data;$/;"	m	struct:ibv_kern_qp_attr
max_inline_data	include\infiniband\kern-abi.h	/^	__u32 max_inline_data;$/;"	m	struct:ibv_create_qp_resp
max_inline_data	include\infiniband\kern-abi.h	/^	__u32 max_inline_data;$/;"	m	struct:ibv_create_qp_resp_v4
max_inline_data	include\infiniband\kern-abi.h	/^	__u32 max_inline_data;$/;"	m	struct:ibv_query_qp_resp
max_map_per_fmr	include\infiniband\kern-abi.h	/^	__u32 max_map_per_fmr;$/;"	m	struct:ibv_query_device_resp
max_mcast_grp	include\infiniband\kern-abi.h	/^	__u32 max_mcast_grp;$/;"	m	struct:ibv_query_device_resp
max_mcast_qp_attach	include\infiniband\kern-abi.h	/^	__u32 max_mcast_qp_attach;$/;"	m	struct:ibv_query_device_resp
max_mr	include\infiniband\kern-abi.h	/^	__u32 max_mr;$/;"	m	struct:ibv_query_device_resp
max_mr_size	include\infiniband\kern-abi.h	/^	__u64 max_mr_size;$/;"	m	struct:ibv_query_device_resp
max_msg_sz	include\infiniband\kern-abi.h	/^	__u32 max_msg_sz;$/;"	m	struct:ibv_query_port_resp
max_mtu	include\infiniband\kern-abi.h	/^	__u8  max_mtu;$/;"	m	struct:ibv_query_port_resp
max_mw	include\infiniband\kern-abi.h	/^	__u32 max_mw;$/;"	m	struct:ibv_query_device_resp
max_pd	include\infiniband\kern-abi.h	/^	__u32 max_pd;$/;"	m	struct:ibv_query_device_resp
max_pkeys	include\infiniband\kern-abi.h	/^	__u16 max_pkeys;$/;"	m	struct:ibv_query_device_resp
max_qp	include\infiniband\kern-abi.h	/^	__u32 max_qp;$/;"	m	struct:ibv_query_device_resp
max_qp_init_rd_atom	include\infiniband\kern-abi.h	/^	__u32 max_qp_init_rd_atom;$/;"	m	struct:ibv_query_device_resp
max_qp_rd_atom	include\infiniband\kern-abi.h	/^	__u32 max_qp_rd_atom;$/;"	m	struct:ibv_query_device_resp
max_qp_wr	include\infiniband\kern-abi.h	/^	__u32 max_qp_wr;$/;"	m	struct:ibv_query_device_resp
max_raw_ethy_qp	include\infiniband\kern-abi.h	/^	__u32 max_raw_ethy_qp;$/;"	m	struct:ibv_query_device_resp
max_raw_ipv6_qp	include\infiniband\kern-abi.h	/^	__u32 max_raw_ipv6_qp;$/;"	m	struct:ibv_query_device_resp
max_rd_atomic	include\infiniband\kern-abi.h	/^	__u8	max_rd_atomic;$/;"	m	struct:ibv_kern_qp_attr
max_rd_atomic	include\infiniband\kern-abi.h	/^	__u8  max_rd_atomic;$/;"	m	struct:ibv_modify_qp
max_rd_atomic	include\infiniband\kern-abi.h	/^	__u8  max_rd_atomic;$/;"	m	struct:ibv_query_qp_resp
max_rdd	include\infiniband\kern-abi.h	/^	__u32 max_rdd;$/;"	m	struct:ibv_query_device_resp
max_recv_sge	include\infiniband\kern-abi.h	/^	__u32	max_recv_sge;$/;"	m	struct:ibv_kern_qp_attr
max_recv_sge	include\infiniband\kern-abi.h	/^	__u32 max_recv_sge;$/;"	m	struct:ibv_create_qp_resp
max_recv_sge	include\infiniband\kern-abi.h	/^	__u32 max_recv_sge;$/;"	m	struct:ibv_create_qp_resp_v4
max_recv_sge	include\infiniband\kern-abi.h	/^	__u32 max_recv_sge;$/;"	m	struct:ibv_query_qp_resp
max_recv_wr	include\infiniband\kern-abi.h	/^	__u32	max_recv_wr;$/;"	m	struct:ibv_kern_qp_attr
max_recv_wr	include\infiniband\kern-abi.h	/^	__u32 max_recv_wr;$/;"	m	struct:ibv_create_qp_resp
max_recv_wr	include\infiniband\kern-abi.h	/^	__u32 max_recv_wr;$/;"	m	struct:ibv_create_qp_resp_v4
max_recv_wr	include\infiniband\kern-abi.h	/^	__u32 max_recv_wr;$/;"	m	struct:ibv_query_qp_resp
max_res_rd_atom	include\infiniband\kern-abi.h	/^	__u32 max_res_rd_atom;$/;"	m	struct:ibv_query_device_resp
max_rwq_indirection_table_size	include\infiniband\kern-abi.h	/^	__u32 max_rwq_indirection_table_size;$/;"	m	struct:ibv_rss_caps_resp
max_rwq_indirection_tables	include\infiniband\kern-abi.h	/^	__u32 max_rwq_indirection_tables;$/;"	m	struct:ibv_rss_caps_resp
max_send_sge	include\infiniband\kern-abi.h	/^	__u32	max_send_sge;$/;"	m	struct:ibv_kern_qp_attr
max_send_sge	include\infiniband\kern-abi.h	/^	__u32 max_send_sge;$/;"	m	struct:ibv_create_qp_resp
max_send_sge	include\infiniband\kern-abi.h	/^	__u32 max_send_sge;$/;"	m	struct:ibv_create_qp_resp_v4
max_send_sge	include\infiniband\kern-abi.h	/^	__u32 max_send_sge;$/;"	m	struct:ibv_query_qp_resp
max_send_wr	include\infiniband\kern-abi.h	/^	__u32	max_send_wr;$/;"	m	struct:ibv_kern_qp_attr
max_send_wr	include\infiniband\kern-abi.h	/^	__u32 max_send_wr;$/;"	m	struct:ibv_create_qp_resp
max_send_wr	include\infiniband\kern-abi.h	/^	__u32 max_send_wr;$/;"	m	struct:ibv_create_qp_resp_v4
max_send_wr	include\infiniband\kern-abi.h	/^	__u32 max_send_wr;$/;"	m	struct:ibv_query_qp_resp
max_sge	include\infiniband\kern-abi.h	/^	__u32 max_sge;$/;"	m	struct:ibv_create_srq
max_sge	include\infiniband\kern-abi.h	/^	__u32 max_sge;$/;"	m	struct:ibv_create_srq_resp
max_sge	include\infiniband\kern-abi.h	/^	__u32 max_sge;$/;"	m	struct:ibv_create_wq
max_sge	include\infiniband\kern-abi.h	/^	__u32 max_sge;$/;"	m	struct:ibv_create_wq_resp
max_sge	include\infiniband\kern-abi.h	/^	__u32 max_sge;$/;"	m	struct:ibv_create_xsrq
max_sge	include\infiniband\kern-abi.h	/^	__u32 max_sge;$/;"	m	struct:ibv_modify_srq_v3
max_sge	include\infiniband\kern-abi.h	/^	__u32 max_sge;$/;"	m	struct:ibv_query_device_resp
max_sge	include\infiniband\kern-abi.h	/^	__u32 max_sge;$/;"	m	struct:ibv_query_srq_resp
max_sge_rd	include\infiniband\kern-abi.h	/^	__u32 max_sge_rd;$/;"	m	struct:ibv_query_device_resp
max_srq	include\infiniband\kern-abi.h	/^	__u32 max_srq;$/;"	m	struct:ibv_query_device_resp
max_srq_sge	include\infiniband\kern-abi.h	/^	__u32 max_srq_sge;$/;"	m	struct:ibv_query_device_resp
max_srq_wr	include\infiniband\kern-abi.h	/^	__u32 max_srq_wr;$/;"	m	struct:ibv_query_device_resp
max_total_mcast_qp_attach	include\infiniband\kern-abi.h	/^	__u32 max_total_mcast_qp_attach;$/;"	m	struct:ibv_query_device_resp
max_vl_num	include\infiniband\kern-abi.h	/^	__u8  max_vl_num;$/;"	m	struct:ibv_query_port_resp
max_wq_type_rq	include\infiniband\kern-abi.h	/^	__u32  max_wq_type_rq;$/;"	m	struct:ibv_query_device_resp_ex
max_wr	include\infiniband\kern-abi.h	/^	__u32 max_wr;$/;"	m	struct:ibv_create_srq
max_wr	include\infiniband\kern-abi.h	/^	__u32 max_wr;$/;"	m	struct:ibv_create_srq_resp
max_wr	include\infiniband\kern-abi.h	/^	__u32 max_wr;$/;"	m	struct:ibv_create_wq
max_wr	include\infiniband\kern-abi.h	/^	__u32 max_wr;$/;"	m	struct:ibv_create_wq_resp
max_wr	include\infiniband\kern-abi.h	/^	__u32 max_wr;$/;"	m	struct:ibv_create_xsrq
max_wr	include\infiniband\kern-abi.h	/^	__u32 max_wr;$/;"	m	struct:ibv_modify_srq
max_wr	include\infiniband\kern-abi.h	/^	__u32 max_wr;$/;"	m	struct:ibv_modify_srq_v3
max_wr	include\infiniband\kern-abi.h	/^	__u32 max_wr;$/;"	m	struct:ibv_query_srq_resp
min_rnr_timer	include\infiniband\kern-abi.h	/^	__u8	min_rnr_timer;$/;"	m	struct:ibv_kern_qp_attr
min_rnr_timer	include\infiniband\kern-abi.h	/^	__u8  min_rnr_timer;$/;"	m	struct:ibv_modify_qp
min_rnr_timer	include\infiniband\kern-abi.h	/^	__u8  min_rnr_timer;$/;"	m	struct:ibv_query_qp_resp
mlid	include\infiniband\kern-abi.h	/^	__u16 mlid;$/;"	m	struct:ibv_attach_mcast
mlid	include\infiniband\kern-abi.h	/^	__u16 mlid;$/;"	m	struct:ibv_detach_mcast
mr_handle	include\infiniband\kern-abi.h	/^	__u32 mr_handle;$/;"	m	struct:ibv_dereg_mr
mr_handle	include\infiniband\kern-abi.h	/^	__u32 mr_handle;$/;"	m	struct:ibv_reg_mr_resp
mr_handle	include\infiniband\kern-abi.h	/^	__u32 mr_handle;$/;"	m	struct:ibv_rereg_mr
mw_handle	include\infiniband\kern-abi.h	/^	__u32 mw_handle;$/;"	m	struct:ibv_alloc_mw_resp
mw_handle	include\infiniband\kern-abi.h	/^	__u32 mw_handle;$/;"	m	struct:ibv_dealloc_mw
mw_type	include\infiniband\kern-abi.h	/^	__u8  mw_type;$/;"	m	struct:ibv_alloc_mw
ne	include\infiniband\kern-abi.h	/^	__u32 ne;$/;"	m	struct:ibv_poll_cq
node_guid	include\infiniband\kern-abi.h	/^	__u64 node_guid;$/;"	m	struct:ibv_query_device_resp
num_comp_vectors	include\infiniband\kern-abi.h	/^	__u32 num_comp_vectors;$/;"	m	struct:ibv_get_context_resp
num_cq_events	include\infiniband\kern-abi.h	/^	__u32 num_cq_events;$/;"	m	struct:ibv_query_params_resp
num_of_specs	include\infiniband\kern-abi.h	/^	__u8 num_of_specs;$/;"	m	struct:ibv_kern_flow_attr
num_sge	include\infiniband\kern-abi.h	/^	__u32 num_sge;$/;"	m	struct:ibv_kern_recv_wr
num_sge	include\infiniband\kern-abi.h	/^	__u32 num_sge;$/;"	m	struct:ibv_kern_send_wr
odp_caps	include\infiniband\kern-abi.h	/^	struct ibv_odp_caps_resp odp_caps;$/;"	m	struct:ibv_query_device_resp_ex	typeref:struct:ibv_query_device_resp_ex::ibv_odp_caps_resp
oflags	include\infiniband\kern-abi.h	/^	__u32 oflags;$/;"	m	struct:ibv_open_xrcd
opcode	include\infiniband\kern-abi.h	/^	__u32  opcode;$/;"	m	struct:ibv_kern_wc
opcode	include\infiniband\kern-abi.h	/^	__u32 opcode;$/;"	m	struct:ibv_kern_send_wr
out_words	include\infiniband\kern-abi.h	/^		__u16 out_words;$/;"	m	struct:ex_hdr::__anon11
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:hdr
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_alloc_mw
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_alloc_pd
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_attach_mcast
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_close_xrcd
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_create_ah
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_create_comp_channel
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_create_cq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_create_qp
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_create_srq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_create_xsrq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_dealloc_mw
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_dealloc_pd
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_dereg_mr
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_destroy_ah
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_destroy_cq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_destroy_qp
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_destroy_srq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_detach_mcast
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_get_context
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_modify_qp
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_modify_srq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_modify_srq_v3
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_open_qp
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_open_xrcd
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_poll_cq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_post_recv
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_post_send
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_post_srq_recv
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_query_device
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_query_params
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_query_port
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_query_qp
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_query_srq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_reg_mr
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_req_notify_cq
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_rereg_mr
out_words	include\infiniband\kern-abi.h	/^	__u16 out_words;$/;"	m	struct:ibv_resize_cq
page_size_cap	include\infiniband\kern-abi.h	/^	__u64 page_size_cap;$/;"	m	struct:ibv_query_device_resp
path_mig_state	include\infiniband\kern-abi.h	/^	__u32	path_mig_state;$/;"	m	struct:ibv_kern_qp_attr
path_mig_state	include\infiniband\kern-abi.h	/^	__u8  path_mig_state;$/;"	m	struct:ibv_modify_qp
path_mig_state	include\infiniband\kern-abi.h	/^	__u8  path_mig_state;$/;"	m	struct:ibv_query_qp_resp
path_mtu	include\infiniband\kern-abi.h	/^	__u32	path_mtu;$/;"	m	struct:ibv_kern_qp_attr
path_mtu	include\infiniband\kern-abi.h	/^	__u8  path_mtu;$/;"	m	struct:ibv_modify_qp
path_mtu	include\infiniband\kern-abi.h	/^	__u8  path_mtu;$/;"	m	struct:ibv_query_qp_resp
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_alloc_mw
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_alloc_pd_resp
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_create_ah
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_create_srq
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_create_wq
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_create_xsrq
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_dealloc_pd
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_open_qp
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_reg_mr
pd_handle	include\infiniband\kern-abi.h	/^	__u32 pd_handle;$/;"	m	struct:ibv_rereg_mr
per_transport_caps	include\infiniband\kern-abi.h	/^	} per_transport_caps;$/;"	m	struct:ibv_odp_caps_resp	typeref:struct:ibv_odp_caps_resp::__anon14
phys_port_cnt	include\infiniband\kern-abi.h	/^	__u8  phys_port_cnt;$/;"	m	struct:ibv_query_device_resp
phys_state	include\infiniband\kern-abi.h	/^	__u8  phys_state;$/;"	m	struct:ibv_query_port_resp
pkey_index	include\infiniband\kern-abi.h	/^	__u16	pkey_index;$/;"	m	struct:ibv_kern_qp_attr
pkey_index	include\infiniband\kern-abi.h	/^	__u16  pkey_index;$/;"	m	struct:ibv_kern_wc
pkey_index	include\infiniband\kern-abi.h	/^	__u16 pkey_index;$/;"	m	struct:ibv_modify_qp
pkey_index	include\infiniband\kern-abi.h	/^	__u16 pkey_index;$/;"	m	struct:ibv_query_qp_resp
pkey_tbl_len	include\infiniband\kern-abi.h	/^	__u16 pkey_tbl_len;$/;"	m	struct:ibv_query_port_resp
port	include\infiniband\kern-abi.h	/^	__u8 port;$/;"	m	struct:ibv_kern_flow_attr
port_cap_flags	include\infiniband\kern-abi.h	/^	__u32 port_cap_flags;$/;"	m	struct:ibv_query_port_resp
port_num	include\infiniband\kern-abi.h	/^	__u8	port_num;$/;"	m	struct:ibv_kern_qp_attr
port_num	include\infiniband\kern-abi.h	/^	__u8   port_num;$/;"	m	struct:ibv_kern_wc
port_num	include\infiniband\kern-abi.h	/^	__u8  port_num;$/;"	m	struct:ibv_kern_ah_attr
port_num	include\infiniband\kern-abi.h	/^	__u8  port_num;$/;"	m	struct:ibv_modify_qp
port_num	include\infiniband\kern-abi.h	/^	__u8  port_num;$/;"	m	struct:ibv_qp_dest
port_num	include\infiniband\kern-abi.h	/^	__u8  port_num;$/;"	m	struct:ibv_query_port
port_num	include\infiniband\kern-abi.h	/^	__u8  port_num;$/;"	m	struct:ibv_query_qp_resp
priority	include\infiniband\kern-abi.h	/^	__u16 priority;$/;"	m	struct:ibv_kern_flow_attr
provider_in_words	include\infiniband\kern-abi.h	/^		__u16 provider_in_words;$/;"	m	struct:ex_hdr::__anon13
provider_out_words	include\infiniband\kern-abi.h	/^		__u16 provider_out_words;$/;"	m	struct:ex_hdr::__anon13
qkey	include\infiniband\kern-abi.h	/^	__u32	qkey;$/;"	m	struct:ibv_kern_qp_attr
qkey	include\infiniband\kern-abi.h	/^	__u32 qkey;$/;"	m	struct:ibv_modify_qp
qkey	include\infiniband\kern-abi.h	/^	__u32 qkey;$/;"	m	struct:ibv_query_qp_resp
qkey_viol_cntr	include\infiniband\kern-abi.h	/^	__u32 qkey_viol_cntr;$/;"	m	struct:ibv_query_port_resp
qp_access_flags	include\infiniband\kern-abi.h	/^	__u32	qp_access_flags;$/;"	m	struct:ibv_kern_qp_attr
qp_access_flags	include\infiniband\kern-abi.h	/^	__u32 qp_access_flags;$/;"	m	struct:ibv_modify_qp
qp_access_flags	include\infiniband\kern-abi.h	/^	__u32 qp_access_flags;$/;"	m	struct:ibv_query_qp_resp
qp_attr_mask	include\infiniband\kern-abi.h	/^	__u32	qp_attr_mask;$/;"	m	struct:ibv_kern_qp_attr
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_attach_mcast
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_create_flow
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_create_qp_resp
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_create_qp_resp_v3
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_create_qp_resp_v4
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_destroy_qp
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_detach_mcast
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_modify_qp
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_post_recv
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_post_send
qp_handle	include\infiniband\kern-abi.h	/^	__u32 qp_handle;$/;"	m	struct:ibv_query_qp
qp_num	include\infiniband\kern-abi.h	/^	__u32  qp_num;$/;"	m	struct:ibv_kern_wc
qp_state	include\infiniband\kern-abi.h	/^	__u32	qp_state;$/;"	m	struct:ibv_kern_qp_attr
qp_state	include\infiniband\kern-abi.h	/^	__u8  qp_state;$/;"	m	struct:ibv_modify_qp
qp_state	include\infiniband\kern-abi.h	/^	__u8  qp_state;$/;"	m	struct:ibv_query_qp_resp
qp_type	include\infiniband\kern-abi.h	/^	__u8  qp_type;$/;"	m	struct:ibv_open_qp
qp_type	include\infiniband\kern-abi.h	/^	} qp_type;$/;"	m	struct:ibv_kern_send_wr	typeref:union:ibv_kern_send_wr::__anon19
qpn	include\infiniband\kern-abi.h	/^	__u32 qpn;$/;"	m	struct:ibv_create_qp_resp
qpn	include\infiniband\kern-abi.h	/^	__u32 qpn;$/;"	m	struct:ibv_create_qp_resp_v3
qpn	include\infiniband\kern-abi.h	/^	__u32 qpn;$/;"	m	struct:ibv_create_qp_resp_v4
qpn	include\infiniband\kern-abi.h	/^	__u32 qpn;$/;"	m	struct:ibv_open_qp
rc_odp_caps	include\infiniband\kern-abi.h	/^		__u32 rc_odp_caps;$/;"	m	struct:ibv_odp_caps_resp::__anon14
rdma	include\infiniband\kern-abi.h	/^		} rdma;$/;"	m	union:ibv_kern_send_wr::__anon15	typeref:struct:ibv_kern_send_wr::__anon15::__anon16
recv_wr	include\infiniband\kern-abi.h	/^	struct ibv_kern_recv_wr recv_wr[0];$/;"	m	struct:ibv_post_recv	typeref:struct:ibv_post_recv::ibv_kern_recv_wr
recv_wr	include\infiniband\kern-abi.h	/^	struct ibv_kern_recv_wr recv_wr[0];$/;"	m	struct:ibv_post_srq_recv	typeref:struct:ibv_post_srq_recv::ibv_kern_recv_wr
remote_addr	include\infiniband\kern-abi.h	/^			__u64 remote_addr;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon16
remote_addr	include\infiniband\kern-abi.h	/^			__u64 remote_addr;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon17
remote_qkey	include\infiniband\kern-abi.h	/^			__u32 remote_qkey;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon18
remote_qpn	include\infiniband\kern-abi.h	/^			__u32 remote_qpn;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon18
remote_srqn	include\infiniband\kern-abi.h	/^			__u32 remote_srqn;$/;"	m	struct:ibv_kern_send_wr::__anon19::__anon20
reserved	include\infiniband\kern-abi.h	/^			__u16 reserved;$/;"	m	struct:ibv_kern_spec::__anon21::__anon22
reserved	include\infiniband\kern-abi.h	/^			__u32 reserved;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon16
reserved	include\infiniband\kern-abi.h	/^			__u32 reserved;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon17
reserved	include\infiniband\kern-abi.h	/^			__u32 reserved;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon18
reserved	include\infiniband\kern-abi.h	/^		__u32 reserved;$/;"	m	struct:ex_hdr::__anon13
reserved	include\infiniband\kern-abi.h	/^	__u16 reserved;$/;"	m	struct:ibv_attach_mcast
reserved	include\infiniband\kern-abi.h	/^	__u16 reserved;$/;"	m	struct:ibv_detach_mcast
reserved	include\infiniband\kern-abi.h	/^	__u16 reserved;$/;"	m	struct:ibv_kern_spec_eth
reserved	include\infiniband\kern-abi.h	/^	__u16 reserved;$/;"	m	struct:ibv_kern_spec_ipv4
reserved	include\infiniband\kern-abi.h	/^	__u16 reserved;$/;"	m	struct:ibv_kern_spec_tcp_udp
reserved	include\infiniband\kern-abi.h	/^	__u16 reserved;$/;"	m	struct:ibv_qp_dest
reserved	include\infiniband\kern-abi.h	/^	__u32		reserved;$/;"	m	struct:ibv_create_cq_ex
reserved	include\infiniband\kern-abi.h	/^	__u32		reserved;$/;"	m	struct:ibv_query_device_ex
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_create_ah
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_create_cq
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_create_qp_resp
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_create_xsrq
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_dealloc_mw
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_destroy_cq
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_destroy_qp
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_destroy_srq
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_destroy_wq_resp
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_kern_async_event
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_kern_recv_wr
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_modify_srq_v3
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_odp_caps_resp
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_poll_cq_resp
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_query_device_resp_ex
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_query_srq
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_query_srq_resp
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_resize_cq_resp
reserved	include\infiniband\kern-abi.h	/^	__u32 reserved;$/;"	m	struct:ibv_rss_caps_resp
reserved	include\infiniband\kern-abi.h	/^	__u8	reserved[5];$/;"	m	struct:ibv_kern_qp_attr
reserved	include\infiniband\kern-abi.h	/^	__u8   reserved;$/;"	m	struct:ibv_kern_wc
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved;$/;"	m	struct:ibv_kern_ah_attr
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved;$/;"	m	struct:ibv_kern_global_route
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved[2];$/;"	m	struct:ibv_modify_qp
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved[2];$/;"	m	struct:ibv_query_port_resp
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved[3];$/;"	m	struct:ibv_alloc_mw
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved[4];$/;"	m	struct:ibv_query_device_resp
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved[5];$/;"	m	struct:ibv_query_qp_resp
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved[7];$/;"	m	struct:ibv_open_qp
reserved	include\infiniband\kern-abi.h	/^	__u8  reserved[7];$/;"	m	struct:ibv_query_port
reserved	include\infiniband\kern-abi.h	/^	__u8 reserved[2];$/;"	m	struct:ibv_kern_flow_attr
reserved1	include\infiniband\kern-abi.h	/^	__u32 reserved1;$/;"	m	struct:ibv_create_qp_ex
response	include\infiniband\kern-abi.h	/^		__u64 response;$/;"	m	struct:ex_hdr::__anon12
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_alloc_mw
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_alloc_pd
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_create_ah
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_create_comp_channel
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_create_cq
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_create_qp
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_create_srq
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_create_xsrq
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_destroy_cq
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_destroy_qp
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_destroy_srq
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_get_context
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_open_qp
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_open_xrcd
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_poll_cq
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_post_recv
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_post_send
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_post_srq_recv
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_query_device
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_query_params
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_query_port
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_query_qp
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_query_srq
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_reg_mr
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_rereg_mr
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:ibv_resize_cq
response	include\infiniband\kern-abi.h	/^	__u64 response;$/;"	m	struct:response_hdr
response_hdr	include\infiniband\kern-abi.h	/^struct response_hdr {$/;"	s
response_length	include\infiniband\kern-abi.h	/^	__u32				response_length;$/;"	m	struct:ibv_create_cq_resp_ex
response_length	include\infiniband\kern-abi.h	/^	__u32 response_length;$/;"	m	struct:ibv_create_qp_resp_ex
response_length	include\infiniband\kern-abi.h	/^	__u32 response_length;$/;"	m	struct:ibv_create_rwq_ind_table_resp
response_length	include\infiniband\kern-abi.h	/^	__u32 response_length;$/;"	m	struct:ibv_create_wq_resp
response_length	include\infiniband\kern-abi.h	/^	__u32 response_length;$/;"	m	struct:ibv_destroy_wq_resp
response_length	include\infiniband\kern-abi.h	/^	__u32 response_length;$/;"	m	struct:ibv_query_device_resp_ex
retry_cnt	include\infiniband\kern-abi.h	/^	__u8	retry_cnt;$/;"	m	struct:ibv_kern_qp_attr
retry_cnt	include\infiniband\kern-abi.h	/^	__u8  retry_cnt;$/;"	m	struct:ibv_modify_qp
retry_cnt	include\infiniband\kern-abi.h	/^	__u8  retry_cnt;$/;"	m	struct:ibv_query_qp_resp
rkey	include\infiniband\kern-abi.h	/^			__u32 rkey;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon16
rkey	include\infiniband\kern-abi.h	/^			__u32 rkey;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon17
rkey	include\infiniband\kern-abi.h	/^	__u32 rkey;$/;"	m	struct:ibv_alloc_mw_resp
rkey	include\infiniband\kern-abi.h	/^	__u32 rkey;$/;"	m	struct:ibv_reg_mr_resp
rkey	include\infiniband\kern-abi.h	/^	__u32 rkey;$/;"	m	struct:ibv_rereg_mr_resp
rnr_retry	include\infiniband\kern-abi.h	/^	__u8	rnr_retry;$/;"	m	struct:ibv_kern_qp_attr
rnr_retry	include\infiniband\kern-abi.h	/^	__u8  rnr_retry;$/;"	m	struct:ibv_modify_qp
rnr_retry	include\infiniband\kern-abi.h	/^	__u8  rnr_retry;$/;"	m	struct:ibv_query_qp_resp
rq_psn	include\infiniband\kern-abi.h	/^	__u32	rq_psn;$/;"	m	struct:ibv_kern_qp_attr
rq_psn	include\infiniband\kern-abi.h	/^	__u32 rq_psn;$/;"	m	struct:ibv_modify_qp
rq_psn	include\infiniband\kern-abi.h	/^	__u32 rq_psn;$/;"	m	struct:ibv_query_qp_resp
rss_caps	include\infiniband\kern-abi.h	/^	struct ibv_rss_caps_resp rss_caps;$/;"	m	struct:ibv_query_device_resp_ex	typeref:struct:ibv_query_device_resp_ex::ibv_rss_caps_resp
send_flags	include\infiniband\kern-abi.h	/^	__u32 send_flags;$/;"	m	struct:ibv_kern_send_wr
send_wr	include\infiniband\kern-abi.h	/^	struct ibv_kern_send_wr send_wr[0];$/;"	m	struct:ibv_post_send	typeref:struct:ibv_post_send::ibv_kern_send_wr
sge_count	include\infiniband\kern-abi.h	/^	__u32 sge_count;$/;"	m	struct:ibv_post_recv
sge_count	include\infiniband\kern-abi.h	/^	__u32 sge_count;$/;"	m	struct:ibv_post_send
sge_count	include\infiniband\kern-abi.h	/^	__u32 sge_count;$/;"	m	struct:ibv_post_srq_recv
sgid_index	include\infiniband\kern-abi.h	/^	__u8  sgid_index;$/;"	m	struct:ibv_kern_global_route
sgid_index	include\infiniband\kern-abi.h	/^	__u8  sgid_index;$/;"	m	struct:ibv_qp_dest
size	include\infiniband\kern-abi.h	/^			__u16 size;$/;"	m	struct:ibv_kern_spec::__anon21::__anon22
size	include\infiniband\kern-abi.h	/^	__u16  size;$/;"	m	struct:ibv_kern_spec_eth
size	include\infiniband\kern-abi.h	/^	__u16  size;$/;"	m	struct:ibv_kern_spec_ipv4
size	include\infiniband\kern-abi.h	/^	__u16  size;$/;"	m	struct:ibv_kern_spec_tcp_udp
size	include\infiniband\kern-abi.h	/^	__u16 size;$/;"	m	struct:ibv_kern_flow_attr
sl	include\infiniband\kern-abi.h	/^	__u8   sl;$/;"	m	struct:ibv_kern_wc
sl	include\infiniband\kern-abi.h	/^	__u8  sl;$/;"	m	struct:ibv_kern_ah_attr
sl	include\infiniband\kern-abi.h	/^	__u8  sl;$/;"	m	struct:ibv_qp_dest
slid	include\infiniband\kern-abi.h	/^	__u16  slid;$/;"	m	struct:ibv_kern_wc
sm_lid	include\infiniband\kern-abi.h	/^	__u16 sm_lid;$/;"	m	struct:ibv_query_port_resp
sm_sl	include\infiniband\kern-abi.h	/^	__u8  sm_sl;$/;"	m	struct:ibv_query_port_resp
solicited	include\infiniband\kern-abi.h	/^	__u32 solicited;$/;"	m	struct:ibv_req_notify_cq
sq_draining	include\infiniband\kern-abi.h	/^	__u8	sq_draining;$/;"	m	struct:ibv_kern_qp_attr
sq_draining	include\infiniband\kern-abi.h	/^	__u8  sq_draining;$/;"	m	struct:ibv_query_qp_resp
sq_psn	include\infiniband\kern-abi.h	/^	__u32	sq_psn;$/;"	m	struct:ibv_kern_qp_attr
sq_psn	include\infiniband\kern-abi.h	/^	__u32 sq_psn;$/;"	m	struct:ibv_modify_qp
sq_psn	include\infiniband\kern-abi.h	/^	__u32 sq_psn;$/;"	m	struct:ibv_query_qp_resp
sq_sig_all	include\infiniband\kern-abi.h	/^	__u8  sq_sig_all;$/;"	m	struct:ibv_query_qp_resp
src_ip	include\infiniband\kern-abi.h	/^	__u32 src_ip;$/;"	m	struct:ibv_kern_ipv4_filter
src_mac	include\infiniband\kern-abi.h	/^	__u8  src_mac[6];$/;"	m	struct:ibv_kern_eth_filter
src_path_bits	include\infiniband\kern-abi.h	/^	__u8  src_path_bits;$/;"	m	struct:ibv_kern_ah_attr
src_path_bits	include\infiniband\kern-abi.h	/^	__u8  src_path_bits;$/;"	m	struct:ibv_qp_dest
src_port	include\infiniband\kern-abi.h	/^	__u16 src_port;$/;"	m	struct:ibv_kern_tcp_udp_filter
src_qp	include\infiniband\kern-abi.h	/^	__u32  src_qp;$/;"	m	struct:ibv_kern_wc
srq_handle	include\infiniband\kern-abi.h	/^	__u32 srq_handle;$/;"	m	struct:ibv_create_srq_resp
srq_handle	include\infiniband\kern-abi.h	/^	__u32 srq_handle;$/;"	m	struct:ibv_create_srq_resp_v5
srq_handle	include\infiniband\kern-abi.h	/^	__u32 srq_handle;$/;"	m	struct:ibv_destroy_srq
srq_handle	include\infiniband\kern-abi.h	/^	__u32 srq_handle;$/;"	m	struct:ibv_modify_srq
srq_handle	include\infiniband\kern-abi.h	/^	__u32 srq_handle;$/;"	m	struct:ibv_modify_srq_v3
srq_handle	include\infiniband\kern-abi.h	/^	__u32 srq_handle;$/;"	m	struct:ibv_post_srq_recv
srq_handle	include\infiniband\kern-abi.h	/^	__u32 srq_handle;$/;"	m	struct:ibv_query_srq
srq_limit	include\infiniband\kern-abi.h	/^	__u32 srq_limit;$/;"	m	struct:ibv_create_srq
srq_limit	include\infiniband\kern-abi.h	/^	__u32 srq_limit;$/;"	m	struct:ibv_create_xsrq
srq_limit	include\infiniband\kern-abi.h	/^	__u32 srq_limit;$/;"	m	struct:ibv_modify_srq
srq_limit	include\infiniband\kern-abi.h	/^	__u32 srq_limit;$/;"	m	struct:ibv_modify_srq_v3
srq_limit	include\infiniband\kern-abi.h	/^	__u32 srq_limit;$/;"	m	struct:ibv_query_srq_resp
srq_type	include\infiniband\kern-abi.h	/^	__u32 srq_type;$/;"	m	struct:ibv_create_xsrq
srqn	include\infiniband\kern-abi.h	/^	__u32 srqn;$/;"	m	struct:ibv_create_srq_resp
start	include\infiniband\kern-abi.h	/^	__u64 start;$/;"	m	struct:ibv_reg_mr
start	include\infiniband\kern-abi.h	/^	__u64 start;$/;"	m	struct:ibv_rereg_mr
state	include\infiniband\kern-abi.h	/^	__u8  state;$/;"	m	struct:ibv_query_port_resp
static_rate	include\infiniband\kern-abi.h	/^	__u8  static_rate;$/;"	m	struct:ibv_kern_ah_attr
static_rate	include\infiniband\kern-abi.h	/^	__u8  static_rate;$/;"	m	struct:ibv_qp_dest
status	include\infiniband\kern-abi.h	/^	__u32  status;$/;"	m	struct:ibv_kern_wc
subnet_timeout	include\infiniband\kern-abi.h	/^	__u8  subnet_timeout;$/;"	m	struct:ibv_query_port_resp
supported_qpts	include\infiniband\kern-abi.h	/^	__u32 supported_qpts;$/;"	m	struct:ibv_rss_caps_resp
swap	include\infiniband\kern-abi.h	/^			__u64 swap;$/;"	m	struct:ibv_kern_send_wr::__anon15::__anon17
sys_image_guid	include\infiniband\kern-abi.h	/^	__u64 sys_image_guid;$/;"	m	struct:ibv_query_device_resp
tcp_udp	include\infiniband\kern-abi.h	/^		struct ibv_kern_spec_tcp_udp tcp_udp;$/;"	m	union:ibv_kern_spec::__anon21	typeref:struct:ibv_kern_spec::__anon21::ibv_kern_spec_tcp_udp
timeout	include\infiniband\kern-abi.h	/^	__u8	timeout;$/;"	m	struct:ibv_kern_qp_attr
timeout	include\infiniband\kern-abi.h	/^	__u8  timeout;$/;"	m	struct:ibv_modify_qp
timeout	include\infiniband\kern-abi.h	/^	__u8  timeout;$/;"	m	struct:ibv_query_qp_resp
timestamp_mask	include\infiniband\kern-abi.h	/^	__u64 timestamp_mask;$/;"	m	struct:ibv_query_device_resp_ex
traffic_class	include\infiniband\kern-abi.h	/^	__u8  traffic_class;$/;"	m	struct:ibv_kern_global_route
traffic_class	include\infiniband\kern-abi.h	/^	__u8  traffic_class;$/;"	m	struct:ibv_qp_dest
type	include\infiniband\kern-abi.h	/^			__u32 type;$/;"	m	struct:ibv_kern_spec::__anon21::__anon22
type	include\infiniband\kern-abi.h	/^	__u32  type;$/;"	m	struct:ibv_kern_spec_ipv4
type	include\infiniband\kern-abi.h	/^	__u32  type;$/;"	m	struct:ibv_kern_spec_tcp_udp
type	include\infiniband\kern-abi.h	/^	__u32 type;$/;"	m	struct:ibv_kern_flow_attr
type	include\infiniband\kern-abi.h	/^	__u32 type;$/;"	m	struct:ibv_kern_spec_eth
uc_odp_caps	include\infiniband\kern-abi.h	/^		__u32 uc_odp_caps;$/;"	m	struct:ibv_odp_caps_resp::__anon14
ud	include\infiniband\kern-abi.h	/^		} ud;$/;"	m	union:ibv_kern_send_wr::__anon15	typeref:struct:ibv_kern_send_wr::__anon15::__anon18
ud_odp_caps	include\infiniband\kern-abi.h	/^		__u32 ud_odp_caps;$/;"	m	struct:ibv_odp_caps_resp::__anon14
user_handle	include\infiniband\kern-abi.h	/^	__u64		user_handle;$/;"	m	struct:ibv_create_cq_ex
user_handle	include\infiniband\kern-abi.h	/^	__u64 user_handle;$/;"	m	struct:ibv_create_ah
user_handle	include\infiniband\kern-abi.h	/^	__u64 user_handle;$/;"	m	struct:ibv_create_cq
user_handle	include\infiniband\kern-abi.h	/^	__u64 user_handle;$/;"	m	struct:ibv_create_srq
user_handle	include\infiniband\kern-abi.h	/^	__u64 user_handle;$/;"	m	struct:ibv_create_wq
user_handle	include\infiniband\kern-abi.h	/^	__u64 user_handle;$/;"	m	struct:ibv_create_xsrq
user_handle	include\infiniband\kern-abi.h	/^	__u64 user_handle;$/;"	m	struct:ibv_open_qp
val	include\infiniband\kern-abi.h	/^	struct ibv_kern_eth_filter val;$/;"	m	struct:ibv_kern_spec_eth	typeref:struct:ibv_kern_spec_eth::ibv_kern_eth_filter
val	include\infiniband\kern-abi.h	/^	struct ibv_kern_ipv4_filter val;$/;"	m	struct:ibv_kern_spec_ipv4	typeref:struct:ibv_kern_spec_ipv4::ibv_kern_ipv4_filter
val	include\infiniband\kern-abi.h	/^	struct ibv_kern_tcp_udp_filter val;$/;"	m	struct:ibv_kern_spec_tcp_udp	typeref:struct:ibv_kern_spec_tcp_udp::ibv_kern_tcp_udp_filter
vendor_err	include\infiniband\kern-abi.h	/^	__u32  vendor_err;$/;"	m	struct:ibv_kern_wc
vendor_id	include\infiniband\kern-abi.h	/^	__u32 vendor_id;$/;"	m	struct:ibv_query_device_resp
vendor_part_id	include\infiniband\kern-abi.h	/^	__u32 vendor_part_id;$/;"	m	struct:ibv_query_device_resp
vlan_tag	include\infiniband\kern-abi.h	/^	__u16  vlan_tag;$/;"	m	struct:ibv_kern_eth_filter
wc	include\infiniband\kern-abi.h	/^	struct ibv_kern_wc wc[0];$/;"	m	struct:ibv_poll_cq_resp	typeref:struct:ibv_poll_cq_resp::ibv_kern_wc
wc_flags	include\infiniband\kern-abi.h	/^	__u32  wc_flags;$/;"	m	struct:ibv_kern_wc
wq_handle	include\infiniband\kern-abi.h	/^	__u32 wq_handle;$/;"	m	struct:ibv_create_wq_resp
wq_handle	include\infiniband\kern-abi.h	/^	__u32 wq_handle;$/;"	m	struct:ibv_destroy_wq
wq_handle	include\infiniband\kern-abi.h	/^	__u32 wq_handle;$/;"	m	struct:ibv_modify_wq
wq_state	include\infiniband\kern-abi.h	/^	__u32 wq_state;$/;"	m	struct:ibv_modify_wq
wq_type	include\infiniband\kern-abi.h	/^	__u32 wq_type;$/;"	m	struct:ibv_create_wq
wqe_size	include\infiniband\kern-abi.h	/^	__u32 wqe_size;$/;"	m	struct:ibv_post_recv
wqe_size	include\infiniband\kern-abi.h	/^	__u32 wqe_size;$/;"	m	struct:ibv_post_send
wqe_size	include\infiniband\kern-abi.h	/^	__u32 wqe_size;$/;"	m	struct:ibv_post_srq_recv
wqn	include\infiniband\kern-abi.h	/^	__u32 wqn;$/;"	m	struct:ibv_create_wq_resp
wr	include\infiniband\kern-abi.h	/^	} wr;$/;"	m	struct:ibv_kern_send_wr	typeref:union:ibv_kern_send_wr::__anon15
wr_count	include\infiniband\kern-abi.h	/^	__u32 wr_count;$/;"	m	struct:ibv_post_recv
wr_count	include\infiniband\kern-abi.h	/^	__u32 wr_count;$/;"	m	struct:ibv_post_send
wr_count	include\infiniband\kern-abi.h	/^	__u32 wr_count;$/;"	m	struct:ibv_post_srq_recv
wr_id	include\infiniband\kern-abi.h	/^	__u64  wr_id;$/;"	m	struct:ibv_kern_wc
wr_id	include\infiniband\kern-abi.h	/^	__u64 wr_id;$/;"	m	struct:ibv_kern_recv_wr
wr_id	include\infiniband\kern-abi.h	/^	__u64 wr_id;$/;"	m	struct:ibv_kern_send_wr
xrc	include\infiniband\kern-abi.h	/^		} xrc;$/;"	m	union:ibv_kern_send_wr::__anon19	typeref:struct:ibv_kern_send_wr::__anon19::__anon20
xrcd_handle	include\infiniband\kern-abi.h	/^	__u32 xrcd_handle;$/;"	m	struct:ibv_close_xrcd
xrcd_handle	include\infiniband\kern-abi.h	/^	__u32 xrcd_handle;$/;"	m	struct:ibv_create_xsrq
xrcd_handle	include\infiniband\kern-abi.h	/^	__u32 xrcd_handle;$/;"	m	struct:ibv_open_xrcd_resp
BEGIN_C_DECLS	include\infiniband\marshall.h	42;"	d
BEGIN_C_DECLS	include\infiniband\marshall.h	45;"	d
END_C_DECLS	include\infiniband\marshall.h	43;"	d
END_C_DECLS	include\infiniband\marshall.h	46;"	d
INFINIBAND_MARSHALL_H	include\infiniband\marshall.h	34;"	d
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, ACKNOWLEDGE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, ATOMIC_ACKNOWLEDGE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, COMPARE_SWAP),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, FETCH_ADD),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_READ_REQUEST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_READ_RESPONSE_FIRST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_READ_RESPONSE_LAST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_READ_RESPONSE_MIDDLE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_READ_RESPONSE_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_WRITE_FIRST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_WRITE_LAST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_WRITE_LAST_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_WRITE_MIDDLE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_WRITE_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, RDMA_WRITE_ONLY_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, SEND_FIRST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, SEND_LAST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, SEND_LAST_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, SEND_MIDDLE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, SEND_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RC, SEND_ONLY_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, ACKNOWLEDGE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, ATOMIC_ACKNOWLEDGE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, COMPARE_SWAP),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, FETCH_ADD),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_READ_REQUEST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_READ_RESPONSE_FIRST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_READ_RESPONSE_LAST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_READ_RESPONSE_MIDDLE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_READ_RESPONSE_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_WRITE_FIRST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_WRITE_LAST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_WRITE_LAST_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_WRITE_MIDDLE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_WRITE_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, RDMA_WRITE_ONLY_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, SEND_FIRST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, SEND_LAST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, SEND_LAST_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, SEND_MIDDLE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, SEND_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(RD, SEND_ONLY_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, RDMA_WRITE_FIRST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, RDMA_WRITE_LAST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, RDMA_WRITE_LAST_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, RDMA_WRITE_MIDDLE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, RDMA_WRITE_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, RDMA_WRITE_ONLY_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, SEND_FIRST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, SEND_LAST),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, SEND_LAST_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, SEND_MIDDLE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, SEND_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UC, SEND_ONLY_WITH_IMMEDIATE),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UD, SEND_ONLY),$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	/^	IBV_OPCODE(UD, SEND_ONLY_WITH_IMMEDIATE)$/;"	e	enum:__anon24
IBV_OPCODE	include\infiniband\opcode.h	45;"	d
IBV_OPCODE_ACKNOWLEDGE	include\infiniband\opcode.h	/^	IBV_OPCODE_ACKNOWLEDGE                       = 0x11,$/;"	e	enum:__anon24
IBV_OPCODE_ATOMIC_ACKNOWLEDGE	include\infiniband\opcode.h	/^	IBV_OPCODE_ATOMIC_ACKNOWLEDGE                = 0x12,$/;"	e	enum:__anon24
IBV_OPCODE_COMPARE_SWAP	include\infiniband\opcode.h	/^	IBV_OPCODE_COMPARE_SWAP                      = 0x13,$/;"	e	enum:__anon24
IBV_OPCODE_FETCH_ADD	include\infiniband\opcode.h	/^	IBV_OPCODE_FETCH_ADD                         = 0x14,$/;"	e	enum:__anon24
IBV_OPCODE_RC	include\infiniband\opcode.h	/^	IBV_OPCODE_RC                                = 0x00,$/;"	e	enum:__anon24
IBV_OPCODE_RD	include\infiniband\opcode.h	/^	IBV_OPCODE_RD                                = 0x40,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_READ_REQUEST	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_READ_REQUEST                 = 0x0c,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_READ_RESPONSE_FIRST	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_READ_RESPONSE_FIRST          = 0x0d,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_READ_RESPONSE_LAST	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_READ_RESPONSE_LAST           = 0x0f,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_READ_RESPONSE_MIDDLE	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_READ_RESPONSE_MIDDLE         = 0x0e,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_READ_RESPONSE_ONLY	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_READ_RESPONSE_ONLY           = 0x10,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_WRITE_FIRST	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_WRITE_FIRST                  = 0x06,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_WRITE_LAST	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_WRITE_LAST                   = 0x08,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_WRITE_LAST_WITH_IMMEDIATE	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_WRITE_LAST_WITH_IMMEDIATE    = 0x09,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_WRITE_MIDDLE	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_WRITE_MIDDLE                 = 0x07,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_WRITE_ONLY	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_WRITE_ONLY                   = 0x0a,$/;"	e	enum:__anon24
IBV_OPCODE_RDMA_WRITE_ONLY_WITH_IMMEDIATE	include\infiniband\opcode.h	/^	IBV_OPCODE_RDMA_WRITE_ONLY_WITH_IMMEDIATE    = 0x0b,$/;"	e	enum:__anon24
IBV_OPCODE_SEND_FIRST	include\infiniband\opcode.h	/^	IBV_OPCODE_SEND_FIRST                        = 0x00,$/;"	e	enum:__anon24
IBV_OPCODE_SEND_LAST	include\infiniband\opcode.h	/^	IBV_OPCODE_SEND_LAST                         = 0x02,$/;"	e	enum:__anon24
IBV_OPCODE_SEND_LAST_WITH_IMMEDIATE	include\infiniband\opcode.h	/^	IBV_OPCODE_SEND_LAST_WITH_IMMEDIATE          = 0x03,$/;"	e	enum:__anon24
IBV_OPCODE_SEND_MIDDLE	include\infiniband\opcode.h	/^	IBV_OPCODE_SEND_MIDDLE                       = 0x01,$/;"	e	enum:__anon24
IBV_OPCODE_SEND_ONLY	include\infiniband\opcode.h	/^	IBV_OPCODE_SEND_ONLY                         = 0x04,$/;"	e	enum:__anon24
IBV_OPCODE_SEND_ONLY_WITH_IMMEDIATE	include\infiniband\opcode.h	/^	IBV_OPCODE_SEND_ONLY_WITH_IMMEDIATE          = 0x05,$/;"	e	enum:__anon24
IBV_OPCODE_UC	include\infiniband\opcode.h	/^	IBV_OPCODE_UC                                = 0x20,$/;"	e	enum:__anon24
IBV_OPCODE_UD	include\infiniband\opcode.h	/^	IBV_OPCODE_UD                                = 0x60,$/;"	e	enum:__anon24
INFINIBAND_OPCODE_H	include\infiniband\opcode.h	34;"	d
INFINIBAND_SA_KERN_ABI_H	include\infiniband\sa-kern-abi.h	34;"	d
dgid	include\infiniband\sa-kern-abi.h	/^	__u8  dgid[16];$/;"	m	struct:ibv_kern_path_rec
dlid	include\infiniband\sa-kern-abi.h	/^	__u16 dlid;$/;"	m	struct:ibv_kern_path_rec
flow_label	include\infiniband\sa-kern-abi.h	/^	__u32 flow_label;$/;"	m	struct:ibv_kern_path_rec
hop_limit	include\infiniband\sa-kern-abi.h	/^	__u8  hop_limit;$/;"	m	struct:ibv_kern_path_rec
ib_kern_path_rec	include\infiniband\sa-kern-abi.h	41;"	d
ibv_kern_path_rec	include\infiniband\sa-kern-abi.h	/^struct ibv_kern_path_rec {$/;"	s
mtu	include\infiniband\sa-kern-abi.h	/^	__u32 mtu;$/;"	m	struct:ibv_kern_path_rec
mtu_selector	include\infiniband\sa-kern-abi.h	/^	__u8  mtu_selector;$/;"	m	struct:ibv_kern_path_rec
numb_path	include\infiniband\sa-kern-abi.h	/^	__u8  numb_path;$/;"	m	struct:ibv_kern_path_rec
packet_life_time	include\infiniband\sa-kern-abi.h	/^	__u8  packet_life_time;$/;"	m	struct:ibv_kern_path_rec
packet_life_time_selector	include\infiniband\sa-kern-abi.h	/^	__u8  packet_life_time_selector;$/;"	m	struct:ibv_kern_path_rec
pkey	include\infiniband\sa-kern-abi.h	/^	__u16 pkey;$/;"	m	struct:ibv_kern_path_rec
preference	include\infiniband\sa-kern-abi.h	/^	__u8  preference;$/;"	m	struct:ibv_kern_path_rec
rate	include\infiniband\sa-kern-abi.h	/^	__u8  rate;$/;"	m	struct:ibv_kern_path_rec
rate_selector	include\infiniband\sa-kern-abi.h	/^	__u8  rate_selector;$/;"	m	struct:ibv_kern_path_rec
raw_traffic	include\infiniband\sa-kern-abi.h	/^	__u32 raw_traffic;$/;"	m	struct:ibv_kern_path_rec
reversible	include\infiniband\sa-kern-abi.h	/^	__u32 reversible;$/;"	m	struct:ibv_kern_path_rec
sgid	include\infiniband\sa-kern-abi.h	/^	__u8  sgid[16];$/;"	m	struct:ibv_kern_path_rec
sl	include\infiniband\sa-kern-abi.h	/^	__u8  sl;$/;"	m	struct:ibv_kern_path_rec
slid	include\infiniband\sa-kern-abi.h	/^	__u16 slid;$/;"	m	struct:ibv_kern_path_rec
traffic_class	include\infiniband\sa-kern-abi.h	/^	__u8  traffic_class;$/;"	m	struct:ibv_kern_path_rec
IBV_PATH_FLAG_ALTERNATE	include\infiniband\sa.h	122;"	d
IBV_PATH_FLAG_BIDIRECTIONAL	include\infiniband\sa.h	126;"	d
IBV_PATH_FLAG_GMP	include\infiniband\sa.h	120;"	d
IBV_PATH_FLAG_INBOUND	include\infiniband\sa.h	124;"	d
IBV_PATH_FLAG_INBOUND_REVERSE	include\infiniband\sa.h	125;"	d
IBV_PATH_FLAG_OUTBOUND	include\infiniband\sa.h	123;"	d
IBV_PATH_FLAG_PRIMARY	include\infiniband\sa.h	121;"	d
IBV_PATH_RECORD_REVERSIBLE	include\infiniband\sa.h	100;"	d
INFINIBAND_SA_H	include\infiniband\sa.h	35;"	d
data16	include\infiniband\sa.h	/^	uint16_t      data16[8];$/;"	m	struct:ibv_sa_service_rec
data32	include\infiniband\sa.h	/^	uint32_t      data32[4];$/;"	m	struct:ibv_sa_service_rec
data64	include\infiniband\sa.h	/^	uint64_t      data64[2];$/;"	m	struct:ibv_sa_service_rec
data8	include\infiniband\sa.h	/^	uint8_t       data8[16];$/;"	m	struct:ibv_sa_service_rec
dgid	include\infiniband\sa.h	/^	union ibv_gid	dgid;$/;"	m	struct:ibv_path_record	typeref:union:ibv_path_record::ibv_gid
dgid	include\infiniband\sa.h	/^	union ibv_gid dgid;$/;"	m	struct:ibv_sa_path_rec	typeref:union:ibv_sa_path_rec::ibv_gid
dlid	include\infiniband\sa.h	/^	uint16_t	dlid;$/;"	m	struct:ibv_path_record
dlid	include\infiniband\sa.h	/^	uint16_t      dlid;$/;"	m	struct:ibv_sa_path_rec
flags	include\infiniband\sa.h	/^	uint32_t		flags;$/;"	m	struct:ibv_path_data
flow_label	include\infiniband\sa.h	/^	uint32_t      flow_label;$/;"	m	struct:ibv_sa_mcmember_rec
flow_label	include\infiniband\sa.h	/^	uint32_t      flow_label;$/;"	m	struct:ibv_sa_path_rec
flowlabel_hoplimit	include\infiniband\sa.h	/^	uint32_t	flowlabel_hoplimit; \/* resv-31:28 flow label-27:8 hop limit-7:0*\/$/;"	m	struct:ibv_path_record
gid	include\infiniband\sa.h	/^	union ibv_gid gid;$/;"	m	struct:ibv_sa_service_rec	typeref:union:ibv_sa_service_rec::ibv_gid
hop_limit	include\infiniband\sa.h	/^	uint8_t       hop_limit;$/;"	m	struct:ibv_sa_mcmember_rec
hop_limit	include\infiniband\sa.h	/^	uint8_t       hop_limit;$/;"	m	struct:ibv_sa_path_rec
ibv_path_data	include\infiniband\sa.h	/^struct ibv_path_data {$/;"	s
ibv_path_record	include\infiniband\sa.h	/^struct ibv_path_record {$/;"	s
ibv_sa_mcmember_rec	include\infiniband\sa.h	/^struct ibv_sa_mcmember_rec {$/;"	s
ibv_sa_path_rec	include\infiniband\sa.h	/^struct ibv_sa_path_rec {$/;"	s
ibv_sa_service_rec	include\infiniband\sa.h	/^struct ibv_sa_service_rec {$/;"	s
id	include\infiniband\sa.h	/^	uint64_t      id;$/;"	m	struct:ibv_sa_service_rec
join_state	include\infiniband\sa.h	/^	uint8_t       join_state;$/;"	m	struct:ibv_sa_mcmember_rec
key	include\infiniband\sa.h	/^	uint8_t       key[16];$/;"	m	struct:ibv_sa_service_rec
lease	include\infiniband\sa.h	/^	uint32_t      lease;$/;"	m	struct:ibv_sa_service_rec
mgid	include\infiniband\sa.h	/^	union ibv_gid mgid;$/;"	m	struct:ibv_sa_mcmember_rec	typeref:union:ibv_sa_mcmember_rec::ibv_gid
mlid	include\infiniband\sa.h	/^	uint16_t      mlid;$/;"	m	struct:ibv_sa_mcmember_rec
mtu	include\infiniband\sa.h	/^	uint8_t		mtu;		    \/* mtu selector-7:6 mtu-5:0 *\/$/;"	m	struct:ibv_path_record
mtu	include\infiniband\sa.h	/^	uint8_t	      mtu;$/;"	m	struct:ibv_sa_path_rec
mtu	include\infiniband\sa.h	/^	uint8_t       mtu;$/;"	m	struct:ibv_sa_mcmember_rec
mtu_selector	include\infiniband\sa.h	/^	uint8_t       mtu_selector;$/;"	m	struct:ibv_sa_mcmember_rec
mtu_selector	include\infiniband\sa.h	/^	uint8_t       mtu_selector;$/;"	m	struct:ibv_sa_path_rec
name	include\infiniband\sa.h	/^	uint8_t       name[64];$/;"	m	struct:ibv_sa_service_rec
numb_path	include\infiniband\sa.h	/^	uint8_t       numb_path;$/;"	m	struct:ibv_sa_path_rec
packet_life_time	include\infiniband\sa.h	/^	uint8_t       packet_life_time;$/;"	m	struct:ibv_sa_mcmember_rec
packet_life_time	include\infiniband\sa.h	/^	uint8_t       packet_life_time;$/;"	m	struct:ibv_sa_path_rec
packet_life_time_selector	include\infiniband\sa.h	/^	uint8_t       packet_life_time_selector;$/;"	m	struct:ibv_sa_mcmember_rec
packet_life_time_selector	include\infiniband\sa.h	/^	uint8_t       packet_life_time_selector;$/;"	m	struct:ibv_sa_path_rec
packetlifetime	include\infiniband\sa.h	/^	uint8_t		packetlifetime;	    \/* lifetime selector-7:6 lifetime-5:0 *\/$/;"	m	struct:ibv_path_record
path	include\infiniband\sa.h	/^	struct ibv_path_record	path;$/;"	m	struct:ibv_path_data	typeref:struct:ibv_path_data::ibv_path_record
pkey	include\infiniband\sa.h	/^	uint16_t	pkey;$/;"	m	struct:ibv_path_record
pkey	include\infiniband\sa.h	/^	uint16_t      pkey;$/;"	m	struct:ibv_sa_mcmember_rec
pkey	include\infiniband\sa.h	/^	uint16_t      pkey;$/;"	m	struct:ibv_sa_path_rec
pkey	include\infiniband\sa.h	/^	uint16_t      pkey;$/;"	m	struct:ibv_sa_service_rec
port_gid	include\infiniband\sa.h	/^	union ibv_gid port_gid;$/;"	m	struct:ibv_sa_mcmember_rec	typeref:union:ibv_sa_mcmember_rec::ibv_gid
preference	include\infiniband\sa.h	/^	uint8_t		preference;$/;"	m	struct:ibv_path_record
preference	include\infiniband\sa.h	/^	uint8_t       preference;$/;"	m	struct:ibv_sa_path_rec
proxy_join	include\infiniband\sa.h	/^	int           proxy_join;$/;"	m	struct:ibv_sa_mcmember_rec
qkey	include\infiniband\sa.h	/^	uint32_t      qkey;$/;"	m	struct:ibv_sa_mcmember_rec
qosclass_sl	include\infiniband\sa.h	/^	uint16_t	qosclass_sl;	    \/* qos class-15:4 sl-3:0 *\/$/;"	m	struct:ibv_path_record
rate	include\infiniband\sa.h	/^	uint8_t		rate;		    \/* rate selector-7:6 rate-5:0 *\/$/;"	m	struct:ibv_path_record
rate	include\infiniband\sa.h	/^	uint8_t       rate;$/;"	m	struct:ibv_sa_mcmember_rec
rate	include\infiniband\sa.h	/^	uint8_t       rate;$/;"	m	struct:ibv_sa_path_rec
rate_selector	include\infiniband\sa.h	/^	uint8_t       rate_selector;$/;"	m	struct:ibv_sa_mcmember_rec
rate_selector	include\infiniband\sa.h	/^	uint8_t       rate_selector;$/;"	m	struct:ibv_sa_path_rec
raw_traffic	include\infiniband\sa.h	/^	int           raw_traffic;$/;"	m	struct:ibv_sa_path_rec
reserved	include\infiniband\sa.h	/^	uint32_t		reserved;$/;"	m	struct:ibv_path_data
reserved	include\infiniband\sa.h	/^	uint8_t		reserved[6];$/;"	m	struct:ibv_path_record
reversible	include\infiniband\sa.h	/^	int           reversible;$/;"	m	struct:ibv_sa_path_rec
reversible_numpath	include\infiniband\sa.h	/^	uint8_t		reversible_numpath; \/* reversible-7:7 num path-6:0 *\/$/;"	m	struct:ibv_path_record
scope	include\infiniband\sa.h	/^	uint8_t       scope;$/;"	m	struct:ibv_sa_mcmember_rec
service_id	include\infiniband\sa.h	/^	uint64_t	service_id;$/;"	m	struct:ibv_path_record
sgid	include\infiniband\sa.h	/^	union ibv_gid	sgid;$/;"	m	struct:ibv_path_record	typeref:union:ibv_path_record::ibv_gid
sgid	include\infiniband\sa.h	/^	union ibv_gid sgid;$/;"	m	struct:ibv_sa_path_rec	typeref:union:ibv_sa_path_rec::ibv_gid
sl	include\infiniband\sa.h	/^	uint8_t       sl;$/;"	m	struct:ibv_sa_mcmember_rec
sl	include\infiniband\sa.h	/^	uint8_t       sl;$/;"	m	struct:ibv_sa_path_rec
slid	include\infiniband\sa.h	/^	uint16_t	slid;$/;"	m	struct:ibv_path_record
slid	include\infiniband\sa.h	/^	uint16_t      slid;$/;"	m	struct:ibv_sa_path_rec
tclass	include\infiniband\sa.h	/^	uint8_t		tclass;$/;"	m	struct:ibv_path_record
traffic_class	include\infiniband\sa.h	/^	uint8_t       traffic_class;$/;"	m	struct:ibv_sa_mcmember_rec
traffic_class	include\infiniband\sa.h	/^	uint8_t       traffic_class;$/;"	m	struct:ibv_sa_path_rec
ABI_placeholder1	include\infiniband\verbs.h	/^	void (*ABI_placeholder1) (void); \/* DO NOT COPY THIS GARBAGE *\/$/;"	m	struct:verbs_context
ABI_placeholder2	include\infiniband\verbs.h	/^	void (*ABI_placeholder2) (void); \/* DO NOT COPY THIS GARBAGE *\/$/;"	m	struct:verbs_context
BEGIN_C_DECLS	include\infiniband\verbs.h	46;"	d
BEGIN_C_DECLS	include\infiniband\verbs.h	49;"	d
END_C_DECLS	include\infiniband\verbs.h	47;"	d
END_C_DECLS	include\infiniband\verbs.h	50;"	d
ETHERNET_LL_SIZE	include\infiniband\verbs.h	2358;"	d
IBV_ACCESS_LOCAL_WRITE	include\infiniband\verbs.h	/^	IBV_ACCESS_LOCAL_WRITE		= 1,$/;"	e	enum:ibv_access_flags
IBV_ACCESS_MW_BIND	include\infiniband\verbs.h	/^	IBV_ACCESS_MW_BIND		= (1<<4),$/;"	e	enum:ibv_access_flags
IBV_ACCESS_ON_DEMAND	include\infiniband\verbs.h	/^	IBV_ACCESS_ON_DEMAND		= (1<<6),$/;"	e	enum:ibv_access_flags
IBV_ACCESS_REMOTE_ATOMIC	include\infiniband\verbs.h	/^	IBV_ACCESS_REMOTE_ATOMIC	= (1<<3),$/;"	e	enum:ibv_access_flags
IBV_ACCESS_REMOTE_READ	include\infiniband\verbs.h	/^	IBV_ACCESS_REMOTE_READ		= (1<<2),$/;"	e	enum:ibv_access_flags
IBV_ACCESS_REMOTE_WRITE	include\infiniband\verbs.h	/^	IBV_ACCESS_REMOTE_WRITE		= (1<<1),$/;"	e	enum:ibv_access_flags
IBV_ACCESS_ZERO_BASED	include\infiniband\verbs.h	/^	IBV_ACCESS_ZERO_BASED		= (1<<5),$/;"	e	enum:ibv_access_flags
IBV_ATOMIC_GLOB	include\infiniband\verbs.h	/^	IBV_ATOMIC_GLOB$/;"	e	enum:ibv_atomic_cap
IBV_ATOMIC_HCA	include\infiniband\verbs.h	/^	IBV_ATOMIC_HCA,$/;"	e	enum:ibv_atomic_cap
IBV_ATOMIC_NONE	include\infiniband\verbs.h	/^	IBV_ATOMIC_NONE,$/;"	e	enum:ibv_atomic_cap
IBV_CQ_INIT_ATTR_MASK_FLAGS	include\infiniband\verbs.h	/^	IBV_CQ_INIT_ATTR_MASK_FLAGS	= 1 << 0,$/;"	e	enum:ibv_cq_init_attr_mask
IBV_CQ_INIT_ATTR_MASK_RESERVED	include\infiniband\verbs.h	/^	IBV_CQ_INIT_ATTR_MASK_RESERVED	= 1 << 1$/;"	e	enum:ibv_cq_init_attr_mask
IBV_CREATE_CQ_ATTR_RESERVED	include\infiniband\verbs.h	/^	IBV_CREATE_CQ_ATTR_RESERVED = 1 << 1,$/;"	e	enum:ibv_create_cq_attr_flags
IBV_CREATE_CQ_ATTR_SINGLE_THREADED	include\infiniband\verbs.h	/^	IBV_CREATE_CQ_ATTR_SINGLE_THREADED = 1 << 0,$/;"	e	enum:ibv_create_cq_attr_flags
IBV_CREATE_CQ_SUP_WC_FLAGS	include\infiniband\verbs.h	/^	IBV_CREATE_CQ_SUP_WC_FLAGS = IBV_WC_STANDARD_FLAGS |$/;"	e	enum:__anon31
IBV_CREATE_IND_TABLE_RESERVED	include\infiniband\verbs.h	/^	IBV_CREATE_IND_TABLE_RESERVED = (1 << 0)$/;"	e	enum:ibv_ind_table_init_attr_mask
IBV_DEVICE_AUTO_PATH_MIG	include\infiniband\verbs.h	/^	IBV_DEVICE_AUTO_PATH_MIG	= 1 <<  4,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_BAD_PKEY_CNTR	include\infiniband\verbs.h	/^	IBV_DEVICE_BAD_PKEY_CNTR	= 1 <<  1,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_BAD_QKEY_CNTR	include\infiniband\verbs.h	/^	IBV_DEVICE_BAD_QKEY_CNTR	= 1 <<  2,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_CHANGE_PHY_PORT	include\infiniband\verbs.h	/^	IBV_DEVICE_CHANGE_PHY_PORT	= 1 <<  5,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_CURR_QP_STATE_MOD	include\infiniband\verbs.h	/^	IBV_DEVICE_CURR_QP_STATE_MOD	= 1 <<  7,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_INIT_TYPE	include\infiniband\verbs.h	/^	IBV_DEVICE_INIT_TYPE		= 1 <<  9,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_MANAGED_FLOW_STEERING	include\infiniband\verbs.h	/^	IBV_DEVICE_MANAGED_FLOW_STEERING = 1 << 29$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_MEM_MGT_EXTENSIONS	include\infiniband\verbs.h	/^	IBV_DEVICE_MEM_MGT_EXTENSIONS	= 1 << 21,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_MEM_WINDOW	include\infiniband\verbs.h	/^	IBV_DEVICE_MEM_WINDOW           = 1 << 17,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_MEM_WINDOW_TYPE_2A	include\infiniband\verbs.h	/^	IBV_DEVICE_MEM_WINDOW_TYPE_2A	= 1 << 23,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_MEM_WINDOW_TYPE_2B	include\infiniband\verbs.h	/^	IBV_DEVICE_MEM_WINDOW_TYPE_2B	= 1 << 24,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_N_NOTIFY_CQ	include\infiniband\verbs.h	/^	IBV_DEVICE_N_NOTIFY_CQ		= 1 << 14,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_PORT_ACTIVE_EVENT	include\infiniband\verbs.h	/^	IBV_DEVICE_PORT_ACTIVE_EVENT	= 1 << 10,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_RAW_IP_CSUM	include\infiniband\verbs.h	/^	IBV_DEVICE_RAW_IP_CSUM		= 1 << 26,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_RAW_MULTI	include\infiniband\verbs.h	/^	IBV_DEVICE_RAW_MULTI		= 1 <<  3,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_RAW_SCATTER_FCS	include\infiniband\verbs.h	134;"	d
IBV_DEVICE_RC_IP_CSUM	include\infiniband\verbs.h	/^	IBV_DEVICE_RC_IP_CSUM		= 1 << 25,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_RC_RNR_NAK_GEN	include\infiniband\verbs.h	/^	IBV_DEVICE_RC_RNR_NAK_GEN	= 1 << 12,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_RESIZE_MAX_WR	include\infiniband\verbs.h	/^	IBV_DEVICE_RESIZE_MAX_WR	= 1,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_SHUTDOWN_PORT	include\infiniband\verbs.h	/^	IBV_DEVICE_SHUTDOWN_PORT	= 1 <<  8,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_SRQ_RESIZE	include\infiniband\verbs.h	/^	IBV_DEVICE_SRQ_RESIZE		= 1 << 13,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_SYS_IMAGE_GUID	include\infiniband\verbs.h	/^	IBV_DEVICE_SYS_IMAGE_GUID	= 1 << 11,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_UD_AV_PORT_ENFORCE	include\infiniband\verbs.h	/^	IBV_DEVICE_UD_AV_PORT_ENFORCE	= 1 <<  6,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_UD_IP_CSUM	include\infiniband\verbs.h	/^	IBV_DEVICE_UD_IP_CSUM		= 1 << 18,$/;"	e	enum:ibv_device_cap_flags
IBV_DEVICE_XRC	include\infiniband\verbs.h	/^	IBV_DEVICE_XRC			= 1 << 20,$/;"	e	enum:ibv_device_cap_flags
IBV_EVENT_CLIENT_REREGISTER	include\infiniband\verbs.h	/^	IBV_EVENT_CLIENT_REREGISTER,$/;"	e	enum:ibv_event_type
IBV_EVENT_COMM_EST	include\infiniband\verbs.h	/^	IBV_EVENT_COMM_EST,$/;"	e	enum:ibv_event_type
IBV_EVENT_CQ_ERR	include\infiniband\verbs.h	/^	IBV_EVENT_CQ_ERR,$/;"	e	enum:ibv_event_type
IBV_EVENT_DEVICE_FATAL	include\infiniband\verbs.h	/^	IBV_EVENT_DEVICE_FATAL,$/;"	e	enum:ibv_event_type
IBV_EVENT_GID_CHANGE	include\infiniband\verbs.h	/^	IBV_EVENT_GID_CHANGE,$/;"	e	enum:ibv_event_type
IBV_EVENT_LID_CHANGE	include\infiniband\verbs.h	/^	IBV_EVENT_LID_CHANGE,$/;"	e	enum:ibv_event_type
IBV_EVENT_PATH_MIG	include\infiniband\verbs.h	/^	IBV_EVENT_PATH_MIG,$/;"	e	enum:ibv_event_type
IBV_EVENT_PATH_MIG_ERR	include\infiniband\verbs.h	/^	IBV_EVENT_PATH_MIG_ERR,$/;"	e	enum:ibv_event_type
IBV_EVENT_PKEY_CHANGE	include\infiniband\verbs.h	/^	IBV_EVENT_PKEY_CHANGE,$/;"	e	enum:ibv_event_type
IBV_EVENT_PORT_ACTIVE	include\infiniband\verbs.h	/^	IBV_EVENT_PORT_ACTIVE,$/;"	e	enum:ibv_event_type
IBV_EVENT_PORT_ERR	include\infiniband\verbs.h	/^	IBV_EVENT_PORT_ERR,$/;"	e	enum:ibv_event_type
IBV_EVENT_QP_ACCESS_ERR	include\infiniband\verbs.h	/^	IBV_EVENT_QP_ACCESS_ERR,$/;"	e	enum:ibv_event_type
IBV_EVENT_QP_FATAL	include\infiniband\verbs.h	/^	IBV_EVENT_QP_FATAL,$/;"	e	enum:ibv_event_type
IBV_EVENT_QP_LAST_WQE_REACHED	include\infiniband\verbs.h	/^	IBV_EVENT_QP_LAST_WQE_REACHED,$/;"	e	enum:ibv_event_type
IBV_EVENT_QP_REQ_ERR	include\infiniband\verbs.h	/^	IBV_EVENT_QP_REQ_ERR,$/;"	e	enum:ibv_event_type
IBV_EVENT_SM_CHANGE	include\infiniband\verbs.h	/^	IBV_EVENT_SM_CHANGE,$/;"	e	enum:ibv_event_type
IBV_EVENT_SQ_DRAINED	include\infiniband\verbs.h	/^	IBV_EVENT_SQ_DRAINED,$/;"	e	enum:ibv_event_type
IBV_EVENT_SRQ_ERR	include\infiniband\verbs.h	/^	IBV_EVENT_SRQ_ERR,$/;"	e	enum:ibv_event_type
IBV_EVENT_SRQ_LIMIT_REACHED	include\infiniband\verbs.h	/^	IBV_EVENT_SRQ_LIMIT_REACHED,$/;"	e	enum:ibv_event_type
IBV_EVENT_WQ_FATAL	include\infiniband\verbs.h	/^	IBV_EVENT_WQ_FATAL,$/;"	e	enum:ibv_event_type
IBV_FLOW_ATTR_ALL_DEFAULT	include\infiniband\verbs.h	/^	IBV_FLOW_ATTR_ALL_DEFAULT	= 0x1,$/;"	e	enum:ibv_flow_attr_type
IBV_FLOW_ATTR_FLAGS_ALLOW_LOOP_BACK	include\infiniband\verbs.h	/^	IBV_FLOW_ATTR_FLAGS_ALLOW_LOOP_BACK = 1 << 0,$/;"	e	enum:ibv_flow_flags
IBV_FLOW_ATTR_FLAGS_DONT_TRAP	include\infiniband\verbs.h	/^	IBV_FLOW_ATTR_FLAGS_DONT_TRAP = 1 << 1,$/;"	e	enum:ibv_flow_flags
IBV_FLOW_ATTR_MC_DEFAULT	include\infiniband\verbs.h	/^	IBV_FLOW_ATTR_MC_DEFAULT	= 0x2,$/;"	e	enum:ibv_flow_attr_type
IBV_FLOW_ATTR_NORMAL	include\infiniband\verbs.h	/^	IBV_FLOW_ATTR_NORMAL		= 0x0,$/;"	e	enum:ibv_flow_attr_type
IBV_FLOW_SPEC_ETH	include\infiniband\verbs.h	/^	IBV_FLOW_SPEC_ETH	= 0x20,$/;"	e	enum:ibv_flow_spec_type
IBV_FLOW_SPEC_IPV4	include\infiniband\verbs.h	/^	IBV_FLOW_SPEC_IPV4	= 0x30,$/;"	e	enum:ibv_flow_spec_type
IBV_FLOW_SPEC_TCP	include\infiniband\verbs.h	/^	IBV_FLOW_SPEC_TCP	= 0x40,$/;"	e	enum:ibv_flow_spec_type
IBV_FLOW_SPEC_UDP	include\infiniband\verbs.h	/^	IBV_FLOW_SPEC_UDP	= 0x41,$/;"	e	enum:ibv_flow_spec_type
IBV_LINK_LAYER_ETHERNET	include\infiniband\verbs.h	/^	IBV_LINK_LAYER_ETHERNET,$/;"	e	enum:__anon27
IBV_LINK_LAYER_INFINIBAND	include\infiniband\verbs.h	/^	IBV_LINK_LAYER_INFINIBAND,$/;"	e	enum:__anon27
IBV_LINK_LAYER_UNSPECIFIED	include\infiniband\verbs.h	/^	IBV_LINK_LAYER_UNSPECIFIED,$/;"	e	enum:__anon27
IBV_MIG_ARMED	include\infiniband\verbs.h	/^	IBV_MIG_ARMED$/;"	e	enum:ibv_mig_state
IBV_MIG_MIGRATED	include\infiniband\verbs.h	/^	IBV_MIG_MIGRATED,$/;"	e	enum:ibv_mig_state
IBV_MIG_REARM	include\infiniband\verbs.h	/^	IBV_MIG_REARM,$/;"	e	enum:ibv_mig_state
IBV_MTU_1024	include\infiniband\verbs.h	/^	IBV_MTU_1024 = 3,$/;"	e	enum:ibv_mtu
IBV_MTU_2048	include\infiniband\verbs.h	/^	IBV_MTU_2048 = 4,$/;"	e	enum:ibv_mtu
IBV_MTU_256	include\infiniband\verbs.h	/^	IBV_MTU_256  = 1,$/;"	e	enum:ibv_mtu
IBV_MTU_4096	include\infiniband\verbs.h	/^	IBV_MTU_4096 = 5$/;"	e	enum:ibv_mtu
IBV_MTU_512	include\infiniband\verbs.h	/^	IBV_MTU_512  = 2,$/;"	e	enum:ibv_mtu
IBV_MW_TYPE_1	include\infiniband\verbs.h	/^	IBV_MW_TYPE_1			= 1,$/;"	e	enum:ibv_mw_type
IBV_MW_TYPE_2	include\infiniband\verbs.h	/^	IBV_MW_TYPE_2			= 2$/;"	e	enum:ibv_mw_type
IBV_NODE_CA	include\infiniband\verbs.h	/^	IBV_NODE_CA 		= 1,$/;"	e	enum:ibv_node_type
IBV_NODE_RNIC	include\infiniband\verbs.h	/^	IBV_NODE_RNIC,$/;"	e	enum:ibv_node_type
IBV_NODE_ROUTER	include\infiniband\verbs.h	/^	IBV_NODE_ROUTER,$/;"	e	enum:ibv_node_type
IBV_NODE_SWITCH	include\infiniband\verbs.h	/^	IBV_NODE_SWITCH,$/;"	e	enum:ibv_node_type
IBV_NODE_UNKNOWN	include\infiniband\verbs.h	/^	IBV_NODE_UNKNOWN	= -1,$/;"	e	enum:ibv_node_type
IBV_NODE_USNIC	include\infiniband\verbs.h	/^	IBV_NODE_USNIC,$/;"	e	enum:ibv_node_type
IBV_NODE_USNIC_UDP	include\infiniband\verbs.h	/^	IBV_NODE_USNIC_UDP,$/;"	e	enum:ibv_node_type
IBV_ODP_SUPPORT	include\infiniband\verbs.h	/^	IBV_ODP_SUPPORT = 1 << 0,$/;"	e	enum:ibv_odp_general_caps
IBV_ODP_SUPPORT_ATOMIC	include\infiniband\verbs.h	/^	IBV_ODP_SUPPORT_ATOMIC   = 1 << 4,$/;"	e	enum:ibv_odp_transport_cap_bits
IBV_ODP_SUPPORT_READ	include\infiniband\verbs.h	/^	IBV_ODP_SUPPORT_READ     = 1 << 3,$/;"	e	enum:ibv_odp_transport_cap_bits
IBV_ODP_SUPPORT_RECV	include\infiniband\verbs.h	/^	IBV_ODP_SUPPORT_RECV     = 1 << 1,$/;"	e	enum:ibv_odp_transport_cap_bits
IBV_ODP_SUPPORT_SEND	include\infiniband\verbs.h	/^	IBV_ODP_SUPPORT_SEND     = 1 << 0,$/;"	e	enum:ibv_odp_transport_cap_bits
IBV_ODP_SUPPORT_WRITE	include\infiniband\verbs.h	/^	IBV_ODP_SUPPORT_WRITE    = 1 << 2,$/;"	e	enum:ibv_odp_transport_cap_bits
IBV_PORT_ACTIVE	include\infiniband\verbs.h	/^	IBV_PORT_ACTIVE		= 4,$/;"	e	enum:ibv_port_state
IBV_PORT_ACTIVE_DEFER	include\infiniband\verbs.h	/^	IBV_PORT_ACTIVE_DEFER	= 5$/;"	e	enum:ibv_port_state
IBV_PORT_ARMED	include\infiniband\verbs.h	/^	IBV_PORT_ARMED		= 3,$/;"	e	enum:ibv_port_state
IBV_PORT_AUTO_MIGR_SUP	include\infiniband\verbs.h	/^	IBV_PORT_AUTO_MIGR_SUP			= 1 <<  5,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_BOOT_MGMT_SUP	include\infiniband\verbs.h	/^	IBV_PORT_BOOT_MGMT_SUP			= 1 << 23,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_CAP_MASK_NOTICE_SUP	include\infiniband\verbs.h	/^	IBV_PORT_CAP_MASK_NOTICE_SUP		= 1 << 22,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_CLIENT_REG_SUP	include\infiniband\verbs.h	/^	IBV_PORT_CLIENT_REG_SUP			= 1 << 25,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_CM_SUP	include\infiniband\verbs.h	/^	IBV_PORT_CM_SUP				= 1 << 16,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_DEVICE_MGMT_SUP	include\infiniband\verbs.h	/^	IBV_PORT_DEVICE_MGMT_SUP		= 1 << 19,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_DOWN	include\infiniband\verbs.h	/^	IBV_PORT_DOWN		= 1,$/;"	e	enum:ibv_port_state
IBV_PORT_DR_NOTICE_SUP	include\infiniband\verbs.h	/^	IBV_PORT_DR_NOTICE_SUP			= 1 << 21,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_EXTENDED_SPEEDS_SUP	include\infiniband\verbs.h	/^	IBV_PORT_EXTENDED_SPEEDS_SUP		= 1 << 14,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_INIT	include\infiniband\verbs.h	/^	IBV_PORT_INIT		= 2,$/;"	e	enum:ibv_port_state
IBV_PORT_IP_BASED_GIDS	include\infiniband\verbs.h	/^	IBV_PORT_IP_BASED_GIDS			= 1 << 26$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_LED_INFO_SUP	include\infiniband\verbs.h	/^	IBV_PORT_LED_INFO_SUP			= 1 <<  9,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_LINK_LATENCY_SUP	include\infiniband\verbs.h	/^	IBV_PORT_LINK_LATENCY_SUP		= 1 << 24,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_MKEY_NVRAM	include\infiniband\verbs.h	/^	IBV_PORT_MKEY_NVRAM			= 1 <<  7,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_NOP	include\infiniband\verbs.h	/^	IBV_PORT_NOP		= 0,$/;"	e	enum:ibv_port_state
IBV_PORT_NOTICE_SUP	include\infiniband\verbs.h	/^	IBV_PORT_NOTICE_SUP			= 1 <<  2,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_OPT_IPD_SUP	include\infiniband\verbs.h	/^	IBV_PORT_OPT_IPD_SUP			= 1 <<  4,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_PKEY_NVRAM	include\infiniband\verbs.h	/^	IBV_PORT_PKEY_NVRAM			= 1 <<  8,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_PKEY_SW_EXT_PORT_TRAP_SUP	include\infiniband\verbs.h	/^	IBV_PORT_PKEY_SW_EXT_PORT_TRAP_SUP	= 1 << 12,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_REINIT_SUP	include\infiniband\verbs.h	/^	IBV_PORT_REINIT_SUP			= 1 << 18,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_SL_MAP_SUP	include\infiniband\verbs.h	/^	IBV_PORT_SL_MAP_SUP			= 1 <<  6,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_SM	include\infiniband\verbs.h	/^	IBV_PORT_SM				= 1 <<  1,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_SNMP_TUNNEL_SUP	include\infiniband\verbs.h	/^	IBV_PORT_SNMP_TUNNEL_SUP		= 1 << 17,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_SYS_IMAGE_GUID_SUP	include\infiniband\verbs.h	/^	IBV_PORT_SYS_IMAGE_GUID_SUP		= 1 << 11,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_TRAP_SUP	include\infiniband\verbs.h	/^	IBV_PORT_TRAP_SUP			= 1 <<  3,$/;"	e	enum:ibv_port_cap_flags
IBV_PORT_VENDOR_CLASS_SUP	include\infiniband\verbs.h	/^	IBV_PORT_VENDOR_CLASS_SUP		= 1 << 20,$/;"	e	enum:ibv_port_cap_flags
IBV_QPS_ERR	include\infiniband\verbs.h	/^	IBV_QPS_ERR,$/;"	e	enum:ibv_qp_state
IBV_QPS_INIT	include\infiniband\verbs.h	/^	IBV_QPS_INIT,\/\/ basic information set. ready for posting to receive queue$/;"	e	enum:ibv_qp_state
IBV_QPS_RESET	include\infiniband\verbs.h	/^	IBV_QPS_RESET,\/\/newly created, queues empty$/;"	e	enum:ibv_qp_state
IBV_QPS_RTR	include\infiniband\verbs.h	/^	IBV_QPS_RTR,\/\/ready to receive. remote address info set for connected QPs, QP may now receive packets.$/;"	e	enum:ibv_qp_state
IBV_QPS_RTS	include\infiniband\verbs.h	/^	IBV_QPS_RTS,\/\/ ready to send . timeout and retry parameters set , QP may now send packets.$/;"	e	enum:ibv_qp_state
IBV_QPS_SQD	include\infiniband\verbs.h	/^	IBV_QPS_SQD,$/;"	e	enum:ibv_qp_state
IBV_QPS_SQE	include\infiniband\verbs.h	/^	IBV_QPS_SQE,$/;"	e	enum:ibv_qp_state
IBV_QPS_UNKNOWN	include\infiniband\verbs.h	/^	IBV_QPS_UNKNOWN$/;"	e	enum:ibv_qp_state
IBV_QPT_RAW_PACKET	include\infiniband\verbs.h	/^	IBV_QPT_RAW_PACKET = 8,$/;"	e	enum:ibv_qp_type
IBV_QPT_RC	include\infiniband\verbs.h	/^	IBV_QPT_RC = 2,$/;"	e	enum:ibv_qp_type
IBV_QPT_UC	include\infiniband\verbs.h	/^	IBV_QPT_UC,$/;"	e	enum:ibv_qp_type
IBV_QPT_UD	include\infiniband\verbs.h	/^	IBV_QPT_UD,$/;"	e	enum:ibv_qp_type
IBV_QPT_XRC_RECV	include\infiniband\verbs.h	/^	IBV_QPT_XRC_RECV$/;"	e	enum:ibv_qp_type
IBV_QPT_XRC_SEND	include\infiniband\verbs.h	/^	IBV_QPT_XRC_SEND = 9,$/;"	e	enum:ibv_qp_type
IBV_QP_ACCESS_FLAGS	include\infiniband\verbs.h	/^	IBV_QP_ACCESS_FLAGS		= 1 << 	3,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_ALT_PATH	include\infiniband\verbs.h	/^	IBV_QP_ALT_PATH			= 1 << 14,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_AV	include\infiniband\verbs.h	/^	IBV_QP_AV			= 1 << 	7,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_CAP	include\infiniband\verbs.h	/^	IBV_QP_CAP			= 1 << 19,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_CREATE_BLOCK_SELF_MCAST_LB	include\infiniband\verbs.h	/^	IBV_QP_CREATE_BLOCK_SELF_MCAST_LB	= 1 << 1,$/;"	e	enum:ibv_qp_create_flags
IBV_QP_CREATE_SCATTER_FCS	include\infiniband\verbs.h	/^	IBV_QP_CREATE_SCATTER_FCS		= 1 << 8,$/;"	e	enum:ibv_qp_create_flags
IBV_QP_CUR_STATE	include\infiniband\verbs.h	/^	IBV_QP_CUR_STATE		= 1 << 	1,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_DEST_QPN	include\infiniband\verbs.h	/^	IBV_QP_DEST_QPN			= 1 << 20$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_EN_SQD_ASYNC_NOTIFY	include\infiniband\verbs.h	/^	IBV_QP_EN_SQD_ASYNC_NOTIFY	= 1 << 	2,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_INIT_ATTR_CREATE_FLAGS	include\infiniband\verbs.h	/^	IBV_QP_INIT_ATTR_CREATE_FLAGS	= 1 << 2,$/;"	e	enum:ibv_qp_init_attr_mask
IBV_QP_INIT_ATTR_IND_TABLE	include\infiniband\verbs.h	/^	IBV_QP_INIT_ATTR_IND_TABLE	= 1 << 4,$/;"	e	enum:ibv_qp_init_attr_mask
IBV_QP_INIT_ATTR_MAX_TSO_HEADER	include\infiniband\verbs.h	/^	IBV_QP_INIT_ATTR_MAX_TSO_HEADER = 1 << 3,$/;"	e	enum:ibv_qp_init_attr_mask
IBV_QP_INIT_ATTR_PD	include\infiniband\verbs.h	/^	IBV_QP_INIT_ATTR_PD		= 1 << 0,$/;"	e	enum:ibv_qp_init_attr_mask
IBV_QP_INIT_ATTR_RESERVED	include\infiniband\verbs.h	/^	IBV_QP_INIT_ATTR_RESERVED	= 1 << 6$/;"	e	enum:ibv_qp_init_attr_mask
IBV_QP_INIT_ATTR_RX_HASH	include\infiniband\verbs.h	/^	IBV_QP_INIT_ATTR_RX_HASH	= 1 << 5,$/;"	e	enum:ibv_qp_init_attr_mask
IBV_QP_INIT_ATTR_XRCD	include\infiniband\verbs.h	/^	IBV_QP_INIT_ATTR_XRCD		= 1 << 1,$/;"	e	enum:ibv_qp_init_attr_mask
IBV_QP_MAX_DEST_RD_ATOMIC	include\infiniband\verbs.h	/^	IBV_QP_MAX_DEST_RD_ATOMIC	= 1 << 17,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_MAX_QP_RD_ATOMIC	include\infiniband\verbs.h	/^	IBV_QP_MAX_QP_RD_ATOMIC		= 1 << 13,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_MIN_RNR_TIMER	include\infiniband\verbs.h	/^	IBV_QP_MIN_RNR_TIMER		= 1 << 15,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_OPEN_ATTR_CONTEXT	include\infiniband\verbs.h	/^	IBV_QP_OPEN_ATTR_CONTEXT	= 1 << 2,$/;"	e	enum:ibv_qp_open_attr_mask
IBV_QP_OPEN_ATTR_NUM	include\infiniband\verbs.h	/^	IBV_QP_OPEN_ATTR_NUM		= 1 << 0,$/;"	e	enum:ibv_qp_open_attr_mask
IBV_QP_OPEN_ATTR_RESERVED	include\infiniband\verbs.h	/^	IBV_QP_OPEN_ATTR_RESERVED	= 1 << 4$/;"	e	enum:ibv_qp_open_attr_mask
IBV_QP_OPEN_ATTR_TYPE	include\infiniband\verbs.h	/^	IBV_QP_OPEN_ATTR_TYPE		= 1 << 3,$/;"	e	enum:ibv_qp_open_attr_mask
IBV_QP_OPEN_ATTR_XRCD	include\infiniband\verbs.h	/^	IBV_QP_OPEN_ATTR_XRCD	        = 1 << 1,$/;"	e	enum:ibv_qp_open_attr_mask
IBV_QP_PATH_MIG_STATE	include\infiniband\verbs.h	/^	IBV_QP_PATH_MIG_STATE		= 1 << 18,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_PATH_MTU	include\infiniband\verbs.h	/^	IBV_QP_PATH_MTU			= 1 << 	8,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_PKEY_INDEX	include\infiniband\verbs.h	/^	IBV_QP_PKEY_INDEX		= 1 << 	4,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_PORT	include\infiniband\verbs.h	/^	IBV_QP_PORT			= 1 << 	5,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_QKEY	include\infiniband\verbs.h	/^	IBV_QP_QKEY			= 1 << 	6,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_RETRY_CNT	include\infiniband\verbs.h	/^	IBV_QP_RETRY_CNT		= 1 << 10,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_RNR_RETRY	include\infiniband\verbs.h	/^	IBV_QP_RNR_RETRY		= 1 << 11,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_RQ_PSN	include\infiniband\verbs.h	/^	IBV_QP_RQ_PSN			= 1 << 12,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_SQ_PSN	include\infiniband\verbs.h	/^	IBV_QP_SQ_PSN			= 1 << 16,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_STATE	include\infiniband\verbs.h	/^	IBV_QP_STATE			= 1 << 	0,$/;"	e	enum:ibv_qp_attr_mask
IBV_QP_TIMEOUT	include\infiniband\verbs.h	/^	IBV_QP_TIMEOUT			= 1 << 	9,$/;"	e	enum:ibv_qp_attr_mask
IBV_RATE_100_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_100_GBPS = 16,$/;"	e	enum:ibv_rate
IBV_RATE_10_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_10_GBPS  = 3,$/;"	e	enum:ibv_rate
IBV_RATE_112_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_112_GBPS = 13,$/;"	e	enum:ibv_rate
IBV_RATE_120_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_120_GBPS = 10,$/;"	e	enum:ibv_rate
IBV_RATE_14_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_14_GBPS  = 11,$/;"	e	enum:ibv_rate
IBV_RATE_168_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_168_GBPS = 14,$/;"	e	enum:ibv_rate
IBV_RATE_200_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_200_GBPS = 17,$/;"	e	enum:ibv_rate
IBV_RATE_20_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_20_GBPS  = 6,$/;"	e	enum:ibv_rate
IBV_RATE_25_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_25_GBPS  = 15,$/;"	e	enum:ibv_rate
IBV_RATE_2_5_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_2_5_GBPS = 2,$/;"	e	enum:ibv_rate
IBV_RATE_300_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_300_GBPS = 18$/;"	e	enum:ibv_rate
IBV_RATE_30_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_30_GBPS  = 4,$/;"	e	enum:ibv_rate
IBV_RATE_40_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_40_GBPS  = 7,$/;"	e	enum:ibv_rate
IBV_RATE_56_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_56_GBPS  = 12,$/;"	e	enum:ibv_rate
IBV_RATE_5_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_5_GBPS   = 5,$/;"	e	enum:ibv_rate
IBV_RATE_60_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_60_GBPS  = 8,$/;"	e	enum:ibv_rate
IBV_RATE_80_GBPS	include\infiniband\verbs.h	/^	IBV_RATE_80_GBPS  = 9,$/;"	e	enum:ibv_rate
IBV_RATE_MAX	include\infiniband\verbs.h	/^	IBV_RATE_MAX      = 0,$/;"	e	enum:ibv_rate
IBV_REREG_MR_CHANGE_ACCESS	include\infiniband\verbs.h	/^	IBV_REREG_MR_CHANGE_ACCESS	= (1 << 2),$/;"	e	enum:ibv_rereg_mr_flags
IBV_REREG_MR_CHANGE_PD	include\infiniband\verbs.h	/^	IBV_REREG_MR_CHANGE_PD		= (1 << 1),$/;"	e	enum:ibv_rereg_mr_flags
IBV_REREG_MR_CHANGE_TRANSLATION	include\infiniband\verbs.h	/^	IBV_REREG_MR_CHANGE_TRANSLATION	= (1 << 0),$/;"	e	enum:ibv_rereg_mr_flags
IBV_REREG_MR_ERR_CMD	include\infiniband\verbs.h	/^	IBV_REREG_MR_ERR_CMD = -4,$/;"	e	enum:ibv_rereg_mr_err_code
IBV_REREG_MR_ERR_CMD_AND_DO_FORK_NEW	include\infiniband\verbs.h	/^	IBV_REREG_MR_ERR_CMD_AND_DO_FORK_NEW = -5,$/;"	e	enum:ibv_rereg_mr_err_code
IBV_REREG_MR_ERR_DONT_FORK_NEW	include\infiniband\verbs.h	/^	IBV_REREG_MR_ERR_DONT_FORK_NEW = -2,$/;"	e	enum:ibv_rereg_mr_err_code
IBV_REREG_MR_ERR_DO_FORK_OLD	include\infiniband\verbs.h	/^	IBV_REREG_MR_ERR_DO_FORK_OLD = -3,$/;"	e	enum:ibv_rereg_mr_err_code
IBV_REREG_MR_ERR_INPUT	include\infiniband\verbs.h	/^	IBV_REREG_MR_ERR_INPUT = -1,$/;"	e	enum:ibv_rereg_mr_err_code
IBV_REREG_MR_FLAGS_SUPPORTED	include\infiniband\verbs.h	/^	IBV_REREG_MR_FLAGS_SUPPORTED	= ((IBV_REREG_MR_KEEP_VALID << 1) - 1)$/;"	e	enum:ibv_rereg_mr_flags
IBV_REREG_MR_KEEP_VALID	include\infiniband\verbs.h	/^	IBV_REREG_MR_KEEP_VALID		= (1 << 3),$/;"	e	enum:ibv_rereg_mr_flags
IBV_RX_HASH_DST_IPV4	include\infiniband\verbs.h	/^	IBV_RX_HASH_DST_IPV4	= 1 << 1,$/;"	e	enum:ibv_rx_hash_fields
IBV_RX_HASH_DST_IPV6	include\infiniband\verbs.h	/^	IBV_RX_HASH_DST_IPV6	= 1 << 3,$/;"	e	enum:ibv_rx_hash_fields
IBV_RX_HASH_DST_PORT_TCP	include\infiniband\verbs.h	/^	IBV_RX_HASH_DST_PORT_TCP	= 1 << 5,$/;"	e	enum:ibv_rx_hash_fields
IBV_RX_HASH_DST_PORT_UDP	include\infiniband\verbs.h	/^	IBV_RX_HASH_DST_PORT_UDP	= 1 << 7$/;"	e	enum:ibv_rx_hash_fields
IBV_RX_HASH_FUNC_TOEPLITZ	include\infiniband\verbs.h	/^	IBV_RX_HASH_FUNC_TOEPLITZ	= 1 << 0,$/;"	e	enum:ibv_rx_hash_function_flags
IBV_RX_HASH_SRC_IPV4	include\infiniband\verbs.h	/^	IBV_RX_HASH_SRC_IPV4	= 1 << 0,$/;"	e	enum:ibv_rx_hash_fields
IBV_RX_HASH_SRC_IPV6	include\infiniband\verbs.h	/^	IBV_RX_HASH_SRC_IPV6	= 1 << 2,$/;"	e	enum:ibv_rx_hash_fields
IBV_RX_HASH_SRC_PORT_TCP	include\infiniband\verbs.h	/^	IBV_RX_HASH_SRC_PORT_TCP	= 1 << 4,$/;"	e	enum:ibv_rx_hash_fields
IBV_RX_HASH_SRC_PORT_UDP	include\infiniband\verbs.h	/^	IBV_RX_HASH_SRC_PORT_UDP	= 1 << 6,$/;"	e	enum:ibv_rx_hash_fields
IBV_SEND_FENCE	include\infiniband\verbs.h	/^	IBV_SEND_FENCE		= 1 << 0,$/;"	e	enum:ibv_send_flags
IBV_SEND_INLINE	include\infiniband\verbs.h	/^	IBV_SEND_INLINE		= 1 << 3,$/;"	e	enum:ibv_send_flags
IBV_SEND_IP_CSUM	include\infiniband\verbs.h	/^	IBV_SEND_IP_CSUM	= 1 << 4$/;"	e	enum:ibv_send_flags
IBV_SEND_SIGNALED	include\infiniband\verbs.h	/^	IBV_SEND_SIGNALED	= 1 << 1,$/;"	e	enum:ibv_send_flags
IBV_SEND_SOLICITED	include\infiniband\verbs.h	/^	IBV_SEND_SOLICITED	= 1 << 2,$/;"	e	enum:ibv_send_flags
IBV_SRQT_BASIC	include\infiniband\verbs.h	/^	IBV_SRQT_BASIC,$/;"	e	enum:ibv_srq_type
IBV_SRQT_XRC	include\infiniband\verbs.h	/^	IBV_SRQT_XRC$/;"	e	enum:ibv_srq_type
IBV_SRQ_INIT_ATTR_CQ	include\infiniband\verbs.h	/^	IBV_SRQ_INIT_ATTR_CQ		= 1 << 3,$/;"	e	enum:ibv_srq_init_attr_mask
IBV_SRQ_INIT_ATTR_PD	include\infiniband\verbs.h	/^	IBV_SRQ_INIT_ATTR_PD		= 1 << 1,$/;"	e	enum:ibv_srq_init_attr_mask
IBV_SRQ_INIT_ATTR_RESERVED	include\infiniband\verbs.h	/^	IBV_SRQ_INIT_ATTR_RESERVED	= 1 << 4$/;"	e	enum:ibv_srq_init_attr_mask
IBV_SRQ_INIT_ATTR_TYPE	include\infiniband\verbs.h	/^	IBV_SRQ_INIT_ATTR_TYPE		= 1 << 0,$/;"	e	enum:ibv_srq_init_attr_mask
IBV_SRQ_INIT_ATTR_XRCD	include\infiniband\verbs.h	/^	IBV_SRQ_INIT_ATTR_XRCD		= 1 << 2,$/;"	e	enum:ibv_srq_init_attr_mask
IBV_SRQ_LIMIT	include\infiniband\verbs.h	/^	IBV_SRQ_LIMIT	= 1 << 1$/;"	e	enum:ibv_srq_attr_mask
IBV_SRQ_MAX_WR	include\infiniband\verbs.h	/^	IBV_SRQ_MAX_WR	= 1 << 0,$/;"	e	enum:ibv_srq_attr_mask
IBV_SYSFS_NAME_MAX	include\infiniband\verbs.h	/^	IBV_SYSFS_NAME_MAX	= 64,$/;"	e	enum:__anon43
IBV_SYSFS_PATH_MAX	include\infiniband\verbs.h	/^	IBV_SYSFS_PATH_MAX	= 256$/;"	e	enum:__anon43
IBV_TRANSPORT_IB	include\infiniband\verbs.h	/^	IBV_TRANSPORT_IB	= 0,$/;"	e	enum:ibv_transport_type
IBV_TRANSPORT_IWARP	include\infiniband\verbs.h	/^	IBV_TRANSPORT_IWARP,$/;"	e	enum:ibv_transport_type
IBV_TRANSPORT_UNKNOWN	include\infiniband\verbs.h	/^	IBV_TRANSPORT_UNKNOWN	= -1,$/;"	e	enum:ibv_transport_type
IBV_TRANSPORT_USNIC	include\infiniband\verbs.h	/^	IBV_TRANSPORT_USNIC,$/;"	e	enum:ibv_transport_type
IBV_TRANSPORT_USNIC_UDP	include\infiniband\verbs.h	/^	IBV_TRANSPORT_USNIC_UDP,$/;"	e	enum:ibv_transport_type
IBV_VALUES_MASK_RAW_CLOCK	include\infiniband\verbs.h	/^	IBV_VALUES_MASK_RAW_CLOCK	= 1 << 0,$/;"	e	enum:ibv_values_mask
IBV_VALUES_MASK_RESERVED	include\infiniband\verbs.h	/^	IBV_VALUES_MASK_RESERVED	= 1 << 1$/;"	e	enum:ibv_values_mask
IBV_WC_BAD_RESP_ERR	include\infiniband\verbs.h	/^	IBV_WC_BAD_RESP_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_BIND_MW	include\infiniband\verbs.h	/^	IBV_WC_BIND_MW,$/;"	e	enum:ibv_wc_opcode
IBV_WC_COMP_SWAP	include\infiniband\verbs.h	/^	IBV_WC_COMP_SWAP,$/;"	e	enum:ibv_wc_opcode
IBV_WC_EX_WITH_BYTE_LEN	include\infiniband\verbs.h	/^	IBV_WC_EX_WITH_BYTE_LEN		= 1 << 0,$/;"	e	enum:ibv_create_cq_wc_flags
IBV_WC_EX_WITH_COMPLETION_TIMESTAMP	include\infiniband\verbs.h	/^	IBV_WC_EX_WITH_COMPLETION_TIMESTAMP	= 1 << 7,$/;"	e	enum:ibv_create_cq_wc_flags
IBV_WC_EX_WITH_DLID_PATH_BITS	include\infiniband\verbs.h	/^	IBV_WC_EX_WITH_DLID_PATH_BITS	= 1 << 6,$/;"	e	enum:ibv_create_cq_wc_flags
IBV_WC_EX_WITH_IMM	include\infiniband\verbs.h	/^	IBV_WC_EX_WITH_IMM		= 1 << 1,$/;"	e	enum:ibv_create_cq_wc_flags
IBV_WC_EX_WITH_QP_NUM	include\infiniband\verbs.h	/^	IBV_WC_EX_WITH_QP_NUM		= 1 << 2,$/;"	e	enum:ibv_create_cq_wc_flags
IBV_WC_EX_WITH_SL	include\infiniband\verbs.h	/^	IBV_WC_EX_WITH_SL		= 1 << 5,$/;"	e	enum:ibv_create_cq_wc_flags
IBV_WC_EX_WITH_SLID	include\infiniband\verbs.h	/^	IBV_WC_EX_WITH_SLID		= 1 << 4,$/;"	e	enum:ibv_create_cq_wc_flags
IBV_WC_EX_WITH_SRC_QP	include\infiniband\verbs.h	/^	IBV_WC_EX_WITH_SRC_QP		= 1 << 3,$/;"	e	enum:ibv_create_cq_wc_flags
IBV_WC_FATAL_ERR	include\infiniband\verbs.h	/^	IBV_WC_FATAL_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_FETCH_ADD	include\infiniband\verbs.h	/^	IBV_WC_FETCH_ADD,$/;"	e	enum:ibv_wc_opcode
IBV_WC_GENERAL_ERR	include\infiniband\verbs.h	/^	IBV_WC_GENERAL_ERR$/;"	e	enum:ibv_wc_status
IBV_WC_GRH	include\infiniband\verbs.h	/^	IBV_WC_GRH		= 1 << 0,$/;"	e	enum:ibv_wc_flags
IBV_WC_INV_EECN_ERR	include\infiniband\verbs.h	/^	IBV_WC_INV_EECN_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_INV_EEC_STATE_ERR	include\infiniband\verbs.h	/^	IBV_WC_INV_EEC_STATE_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_IP_CSUM_OK	include\infiniband\verbs.h	/^	IBV_WC_IP_CSUM_OK	= 1 << IBV_WC_IP_CSUM_OK_SHIFT,$/;"	e	enum:ibv_wc_flags
IBV_WC_IP_CSUM_OK_SHIFT	include\infiniband\verbs.h	/^	IBV_WC_IP_CSUM_OK_SHIFT	= 2$/;"	e	enum:__anon29
IBV_WC_LOCAL_INV	include\infiniband\verbs.h	/^	IBV_WC_LOCAL_INV,$/;"	e	enum:ibv_wc_opcode
IBV_WC_LOC_ACCESS_ERR	include\infiniband\verbs.h	/^	IBV_WC_LOC_ACCESS_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_LOC_EEC_OP_ERR	include\infiniband\verbs.h	/^	IBV_WC_LOC_EEC_OP_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_LOC_LEN_ERR	include\infiniband\verbs.h	/^	IBV_WC_LOC_LEN_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_LOC_PROT_ERR	include\infiniband\verbs.h	/^	IBV_WC_LOC_PROT_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_LOC_QP_OP_ERR	include\infiniband\verbs.h	/^	IBV_WC_LOC_QP_OP_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_LOC_RDD_VIOL_ERR	include\infiniband\verbs.h	/^	IBV_WC_LOC_RDD_VIOL_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_MW_BIND_ERR	include\infiniband\verbs.h	/^	IBV_WC_MW_BIND_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_RDMA_READ	include\infiniband\verbs.h	/^	IBV_WC_RDMA_READ,$/;"	e	enum:ibv_wc_opcode
IBV_WC_RDMA_WRITE	include\infiniband\verbs.h	/^	IBV_WC_RDMA_WRITE,$/;"	e	enum:ibv_wc_opcode
IBV_WC_RECV	include\infiniband\verbs.h	/^	IBV_WC_RECV			= 1 << 7,$/;"	e	enum:ibv_wc_opcode
IBV_WC_RECV_RDMA_WITH_IMM	include\infiniband\verbs.h	/^	IBV_WC_RECV_RDMA_WITH_IMM$/;"	e	enum:ibv_wc_opcode
IBV_WC_REM_ABORT_ERR	include\infiniband\verbs.h	/^	IBV_WC_REM_ABORT_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_REM_ACCESS_ERR	include\infiniband\verbs.h	/^	IBV_WC_REM_ACCESS_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_REM_INV_RD_REQ_ERR	include\infiniband\verbs.h	/^	IBV_WC_REM_INV_RD_REQ_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_REM_INV_REQ_ERR	include\infiniband\verbs.h	/^	IBV_WC_REM_INV_REQ_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_REM_OP_ERR	include\infiniband\verbs.h	/^	IBV_WC_REM_OP_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_RESP_TIMEOUT_ERR	include\infiniband\verbs.h	/^	IBV_WC_RESP_TIMEOUT_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_RETRY_EXC_ERR	include\infiniband\verbs.h	/^	IBV_WC_RETRY_EXC_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_RNR_RETRY_EXC_ERR	include\infiniband\verbs.h	/^	IBV_WC_RNR_RETRY_EXC_ERR,$/;"	e	enum:ibv_wc_status
IBV_WC_SEND	include\infiniband\verbs.h	/^	IBV_WC_SEND,$/;"	e	enum:ibv_wc_opcode
IBV_WC_STANDARD_FLAGS	include\infiniband\verbs.h	/^	IBV_WC_STANDARD_FLAGS = IBV_WC_EX_WITH_BYTE_LEN		|$/;"	e	enum:__anon30
IBV_WC_SUCCESS	include\infiniband\verbs.h	/^	IBV_WC_SUCCESS,$/;"	e	enum:ibv_wc_status
IBV_WC_TSO	include\infiniband\verbs.h	/^	IBV_WC_TSO,$/;"	e	enum:ibv_wc_opcode
IBV_WC_WITH_IMM	include\infiniband\verbs.h	/^	IBV_WC_WITH_IMM		= 1 << 1,$/;"	e	enum:ibv_wc_flags
IBV_WC_WITH_INV	include\infiniband\verbs.h	/^	IBV_WC_WITH_INV         = 1 << 3$/;"	e	enum:ibv_wc_flags
IBV_WC_WR_FLUSH_ERR	include\infiniband\verbs.h	/^	IBV_WC_WR_FLUSH_ERR,$/;"	e	enum:ibv_wc_status
IBV_WQS_ERR	include\infiniband\verbs.h	/^	IBV_WQS_ERR,$/;"	e	enum:ibv_wq_state
IBV_WQS_RDY	include\infiniband\verbs.h	/^	IBV_WQS_RDY,$/;"	e	enum:ibv_wq_state
IBV_WQS_RESET	include\infiniband\verbs.h	/^	IBV_WQS_RESET,$/;"	e	enum:ibv_wq_state
IBV_WQS_UNKNOWN	include\infiniband\verbs.h	/^	IBV_WQS_UNKNOWN$/;"	e	enum:ibv_wq_state
IBV_WQT_RQ	include\infiniband\verbs.h	/^	IBV_WQT_RQ$/;"	e	enum:ibv_wq_type
IBV_WQ_ATTR_CURR_STATE	include\infiniband\verbs.h	/^	IBV_WQ_ATTR_CURR_STATE	= 1 << 1,$/;"	e	enum:ibv_wq_attr_mask
IBV_WQ_ATTR_RESERVED	include\infiniband\verbs.h	/^	IBV_WQ_ATTR_RESERVED	= 1 << 2$/;"	e	enum:ibv_wq_attr_mask
IBV_WQ_ATTR_STATE	include\infiniband\verbs.h	/^	IBV_WQ_ATTR_STATE	= 1 << 0,$/;"	e	enum:ibv_wq_attr_mask
IBV_WQ_INIT_ATTR_RESERVED	include\infiniband\verbs.h	/^	IBV_WQ_INIT_ATTR_RESERVED	= 1 << 0,$/;"	e	enum:ibv_wq_init_attr_mask
IBV_WR_ATOMIC_CMP_AND_SWP	include\infiniband\verbs.h	/^	IBV_WR_ATOMIC_CMP_AND_SWP,$/;"	e	enum:ibv_wr_opcode
IBV_WR_ATOMIC_FETCH_AND_ADD	include\infiniband\verbs.h	/^	IBV_WR_ATOMIC_FETCH_AND_ADD,$/;"	e	enum:ibv_wr_opcode
IBV_WR_BIND_MW	include\infiniband\verbs.h	/^	IBV_WR_BIND_MW,$/;"	e	enum:ibv_wr_opcode
IBV_WR_LOCAL_INV	include\infiniband\verbs.h	/^	IBV_WR_LOCAL_INV,$/;"	e	enum:ibv_wr_opcode
IBV_WR_RDMA_READ	include\infiniband\verbs.h	/^	IBV_WR_RDMA_READ,$/;"	e	enum:ibv_wr_opcode
IBV_WR_RDMA_WRITE	include\infiniband\verbs.h	/^	IBV_WR_RDMA_WRITE,$/;"	e	enum:ibv_wr_opcode
IBV_WR_RDMA_WRITE_WITH_IMM	include\infiniband\verbs.h	/^	IBV_WR_RDMA_WRITE_WITH_IMM,$/;"	e	enum:ibv_wr_opcode
IBV_WR_SEND	include\infiniband\verbs.h	/^	IBV_WR_SEND,$/;"	e	enum:ibv_wr_opcode
IBV_WR_SEND_WITH_IMM	include\infiniband\verbs.h	/^	IBV_WR_SEND_WITH_IMM,$/;"	e	enum:ibv_wr_opcode
IBV_WR_SEND_WITH_INV	include\infiniband\verbs.h	/^	IBV_WR_SEND_WITH_INV,$/;"	e	enum:ibv_wr_opcode
IBV_WR_TSO	include\infiniband\verbs.h	/^	IBV_WR_TSO,$/;"	e	enum:ibv_wr_opcode
IBV_XRCD_INIT_ATTR_FD	include\infiniband\verbs.h	/^	IBV_XRCD_INIT_ATTR_FD	    = 1 << 0,$/;"	e	enum:ibv_xrcd_init_attr_mask
IBV_XRCD_INIT_ATTR_OFLAGS	include\infiniband\verbs.h	/^	IBV_XRCD_INIT_ATTR_OFLAGS   = 1 << 1,$/;"	e	enum:ibv_xrcd_init_attr_mask
IBV_XRCD_INIT_ATTR_RESERVED	include\infiniband\verbs.h	/^	IBV_XRCD_INIT_ATTR_RESERVED = 1 << 2$/;"	e	enum:ibv_xrcd_init_attr_mask
INFINIBAND_VERBS_H	include\infiniband\verbs.h	37;"	d
VERBS_CONTEXT_CREATE_FLOW	include\infiniband\verbs.h	/^	VERBS_CONTEXT_CREATE_FLOW = 1 << 3,$/;"	e	enum:verbs_context_mask
VERBS_CONTEXT_DESTROY_FLOW	include\infiniband\verbs.h	/^	VERBS_CONTEXT_DESTROY_FLOW = 1 << 4,$/;"	e	enum:verbs_context_mask
VERBS_CONTEXT_QP	include\infiniband\verbs.h	/^	VERBS_CONTEXT_QP	= 1 << 2,$/;"	e	enum:verbs_context_mask
VERBS_CONTEXT_RESERVED	include\infiniband\verbs.h	/^	VERBS_CONTEXT_RESERVED	= 1 << 5$/;"	e	enum:verbs_context_mask
VERBS_CONTEXT_SRQ	include\infiniband\verbs.h	/^	VERBS_CONTEXT_SRQ	= 1 << 1,$/;"	e	enum:verbs_context_mask
VERBS_CONTEXT_XRCD	include\infiniband\verbs.h	/^	VERBS_CONTEXT_XRCD	= 1 << 0,$/;"	e	enum:verbs_context_mask
__VERBS_ABI_IS_EXTENDED	include\infiniband\verbs.h	/^static void *__VERBS_ABI_IS_EXTENDED = ((uint8_t *) NULL) - 1;$/;"	v
___ibv_query_port	include\infiniband\verbs.h	/^static inline int ___ibv_query_port(struct ibv_context *context,$/;"	f
__attribute_const	include\infiniband\verbs.h	2371;"	d
__attribute_const	include\infiniband\verbs.h	54;"	d
__attribute_const	include\infiniband\verbs.h	56;"	d
abi_compat	include\infiniband\verbs.h	/^	void		       *abi_compat;$/;"	m	struct:ibv_context
active_mtu	include\infiniband\verbs.h	/^	enum ibv_mtu		active_mtu;$/;"	m	struct:ibv_port_attr	typeref:enum:ibv_port_attr::ibv_mtu
active_speed	include\infiniband\verbs.h	/^	uint8_t			active_speed;$/;"	m	struct:ibv_port_attr
active_width	include\infiniband\verbs.h	/^	uint8_t			active_width;$/;"	m	struct:ibv_port_attr
addr	include\infiniband\verbs.h	/^	uint64_t		addr;	\/\/address of the local data buffer thar the data will be gathered form or scattered to $/;"	m	struct:ibv_sge
addr	include\infiniband\verbs.h	/^	uint64_t	 addr;$/;"	m	struct:ibv_mw_bind_info
addr	include\infiniband\verbs.h	/^	void		       *addr;$/;"	m	struct:ibv_mr
ah	include\infiniband\verbs.h	/^			struct ibv_ah  *ah;$/;"	m	struct:ibv_send_wr::__anon32::__anon35	typeref:struct:ibv_send_wr::__anon32::__anon35::ibv_ah
ah_attr	include\infiniband\verbs.h	/^	struct ibv_ah_attr	ah_attr;$/;"	m	struct:ibv_qp_attr	typeref:struct:ibv_qp_attr::ibv_ah_attr
alloc_context	include\infiniband\verbs.h	/^	struct ibv_context *	(*alloc_context)(struct ibv_device *device, int cmd_fd);$/;"	m	struct:ibv_device_ops	typeref:struct:ibv_device_ops::alloc_context
alloc_mw	include\infiniband\verbs.h	/^	struct ibv_mw *		(*alloc_mw)(struct ibv_pd *pd, enum ibv_mw_type type);$/;"	m	struct:ibv_context_ops	typeref:struct:ibv_context_ops::alloc_mw
alloc_pd	include\infiniband\verbs.h	/^	struct ibv_pd *		(*alloc_pd)(struct ibv_context *context);$/;"	m	struct:ibv_context_ops	typeref:struct:ibv_context_ops::alloc_pd
alt_ah_attr	include\infiniband\verbs.h	/^	struct ibv_ah_attr	alt_ah_attr;$/;"	m	struct:ibv_qp_attr	typeref:struct:ibv_qp_attr::ibv_ah_attr
alt_pkey_index	include\infiniband\verbs.h	/^	uint16_t		alt_pkey_index;$/;"	m	struct:ibv_qp_attr
alt_port_num	include\infiniband\verbs.h	/^	uint8_t			alt_port_num;$/;"	m	struct:ibv_qp_attr
alt_timeout	include\infiniband\verbs.h	/^	uint8_t			alt_timeout;$/;"	m	struct:ibv_qp_attr
async_event	include\infiniband\verbs.h	/^	void			(*async_event)(struct ibv_async_event *event);$/;"	m	struct:ibv_context_ops
async_events_completed	include\infiniband\verbs.h	/^	uint32_t		async_events_completed;$/;"	m	struct:ibv_cq
async_events_completed	include\infiniband\verbs.h	/^	uint32_t		async_events_completed;$/;"	m	struct:ibv_cq_ex
async_fd	include\infiniband\verbs.h	/^	int			async_fd;$/;"	m	struct:ibv_context
atomic	include\infiniband\verbs.h	/^		} atomic;$/;"	m	union:ibv_send_wr::__anon32	typeref:struct:ibv_send_wr::__anon32::__anon34
atomic_cap	include\infiniband\verbs.h	/^	enum ibv_atomic_cap	atomic_cap; \/\/ IBV_ATOMIC_NONE-no atomic guarantees;IBV_ATOMIC_HCA-atomic guarantees within this device;IBV_ATOMIC_GLOB-global atomic guarantees$/;"	m	struct:ibv_device_attr	typeref:enum:ibv_device_attr::ibv_atomic_cap
attach_mcast	include\infiniband\verbs.h	/^	int			(*attach_mcast)(struct ibv_qp *qp, const union ibv_gid *gid,$/;"	m	struct:ibv_context_ops
attr	include\infiniband\verbs.h	/^	struct ibv_srq_attr	attr;$/;"	m	struct:ibv_srq_init_attr	typeref:struct:ibv_srq_init_attr::ibv_srq_attr
attr	include\infiniband\verbs.h	/^	struct ibv_srq_attr	attr;$/;"	m	struct:ibv_srq_init_attr_ex	typeref:struct:ibv_srq_init_attr_ex::ibv_srq_attr
attr_mask	include\infiniband\verbs.h	/^	uint32_t		attr_mask;$/;"	m	struct:ibv_wq_attr
bad_pkey_cntr	include\infiniband\verbs.h	/^	uint32_t		bad_pkey_cntr;$/;"	m	struct:ibv_port_attr
bind_info	include\infiniband\verbs.h	/^			struct ibv_mw_bind_info	bind_info;$/;"	m	struct:ibv_send_wr::__anon38::__anon39	typeref:struct:ibv_send_wr::__anon38::__anon39::ibv_mw_bind_info
bind_info	include\infiniband\verbs.h	/^	struct ibv_mw_bind_info bind_info;$/;"	m	struct:ibv_mw_bind	typeref:struct:ibv_mw_bind::ibv_mw_bind_info
bind_mw	include\infiniband\verbs.h	/^		} bind_mw;$/;"	m	union:ibv_send_wr::__anon38	typeref:struct:ibv_send_wr::__anon38::__anon39
bind_mw	include\infiniband\verbs.h	/^	int			(*bind_mw)(struct ibv_qp *qp, struct ibv_mw *mw,$/;"	m	struct:ibv_context_ops
byte_len	include\infiniband\verbs.h	/^	uint32_t		byte_len;$/;"	m	struct:ibv_wc
cap	include\infiniband\verbs.h	/^	struct ibv_qp_cap	cap;$/;"	m	struct:ibv_qp_attr	typeref:struct:ibv_qp_attr::ibv_qp_cap
cap	include\infiniband\verbs.h	/^	struct ibv_qp_cap	cap;$/;"	m	struct:ibv_qp_init_attr	typeref:struct:ibv_qp_init_attr::ibv_qp_cap
cap	include\infiniband\verbs.h	/^	struct ibv_qp_cap	cap;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:struct:ibv_qp_init_attr_ex::ibv_qp_cap
channel	include\infiniband\verbs.h	/^	struct ibv_comp_channel *channel;$/;"	m	struct:ibv_cq	typeref:struct:ibv_cq::ibv_comp_channel
channel	include\infiniband\verbs.h	/^	struct ibv_comp_channel *channel;$/;"	m	struct:ibv_cq_ex	typeref:struct:ibv_cq_ex::ibv_comp_channel
channel	include\infiniband\verbs.h	/^	struct ibv_comp_channel *channel;$/;"	m	struct:ibv_cq_init_attr_ex	typeref:struct:ibv_cq_init_attr_ex::ibv_comp_channel
close_xrcd	include\infiniband\verbs.h	/^	int			(*close_xrcd)(struct ibv_xrcd *xrcd);$/;"	m	struct:verbs_context
cmd_fd	include\infiniband\verbs.h	/^	int			cmd_fd;$/;"	m	struct:ibv_context
comp_events_completed	include\infiniband\verbs.h	/^	uint32_t		comp_events_completed;$/;"	m	struct:ibv_cq
comp_events_completed	include\infiniband\verbs.h	/^	uint32_t		comp_events_completed;$/;"	m	struct:ibv_cq_ex
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_cq_ex
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_cq_init_attr_ex
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_device_attr_ex
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_qp_init_attr_ex
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_qp_open_attr
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_query_device_ex_input
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_srq_init_attr_ex
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_wq
comp_mask	include\infiniband\verbs.h	/^	uint32_t		comp_mask;$/;"	m	struct:ibv_wq_init_attr
comp_mask	include\infiniband\verbs.h	/^	uint32_t	   comp_mask;$/;"	m	struct:ibv_flow
comp_mask	include\infiniband\verbs.h	/^	uint32_t	comp_mask;$/;"	m	struct:ibv_values_ex
comp_mask	include\infiniband\verbs.h	/^	uint32_t comp_mask;$/;"	m	struct:ibv_flow_attr
comp_mask	include\infiniband\verbs.h	/^	uint32_t comp_mask;$/;"	m	struct:ibv_poll_cq_attr
comp_mask	include\infiniband\verbs.h	/^	uint32_t comp_mask;$/;"	m	struct:ibv_rwq_ind_table
comp_mask	include\infiniband\verbs.h	/^	uint32_t comp_mask;$/;"	m	struct:ibv_rwq_ind_table_init_attr
comp_mask	include\infiniband\verbs.h	/^	uint32_t comp_mask;$/;"	m	struct:ibv_xrcd_init_attr
comp_vector	include\infiniband\verbs.h	/^	uint32_t			comp_vector;$/;"	m	struct:ibv_cq_init_attr_ex
compare_add	include\infiniband\verbs.h	/^			uint64_t	compare_add;$/;"	m	struct:ibv_send_wr::__anon32::__anon34
completion_timestamp_mask	include\infiniband\verbs.h	/^	uint64_t		completion_timestamp_mask;$/;"	m	struct:ibv_device_attr_ex
cond	include\infiniband\verbs.h	/^	pthread_cond_t		cond;$/;"	m	struct:ibv_cq
cond	include\infiniband\verbs.h	/^	pthread_cond_t		cond;$/;"	m	struct:ibv_cq_ex
cond	include\infiniband\verbs.h	/^	pthread_cond_t		cond;$/;"	m	struct:ibv_qp
cond	include\infiniband\verbs.h	/^	pthread_cond_t		cond;$/;"	m	struct:ibv_srq
cond	include\infiniband\verbs.h	/^	pthread_cond_t		cond;$/;"	m	struct:ibv_wq
container_of	include\infiniband\verbs.h	77;"	d
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_ah	typeref:struct:ibv_ah::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_comp_channel	typeref:struct:ibv_comp_channel::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_cq	typeref:struct:ibv_cq::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_cq_ex	typeref:struct:ibv_cq_ex::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_mr	typeref:struct:ibv_mr::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_mw	typeref:struct:ibv_mw::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_pd	typeref:struct:ibv_pd::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_qp	typeref:struct:ibv_qp::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_srq	typeref:struct:ibv_srq::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_wq	typeref:struct:ibv_wq::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context     *context;$/;"	m	struct:ibv_xrcd	typeref:struct:ibv_xrcd::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context *context;$/;"	m	struct:ibv_flow	typeref:struct:ibv_flow::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context *context;$/;"	m	struct:ibv_rwq_ind_table	typeref:struct:ibv_rwq_ind_table::ibv_context
context	include\infiniband\verbs.h	/^	struct ibv_context context;	\/* Must be last field in the struct *\/$/;"	m	struct:verbs_context	typeref:struct:verbs_context::ibv_context
cq	include\infiniband\verbs.h	/^		struct ibv_cq  *cq;$/;"	m	union:ibv_async_event::__anon28	typeref:struct:ibv_async_event::__anon28::ibv_cq
cq	include\infiniband\verbs.h	/^	struct	ibv_cq	       *cq;$/;"	m	struct:ibv_wq	typeref:struct:ibv_wq::ibv_cq
cq	include\infiniband\verbs.h	/^	struct	ibv_cq	       *cq;$/;"	m	struct:ibv_wq_init_attr	typeref:struct:ibv_wq_init_attr::ibv_cq
cq	include\infiniband\verbs.h	/^	struct ibv_cq	       *cq;$/;"	m	struct:ibv_srq_init_attr_ex	typeref:struct:ibv_srq_init_attr_ex::ibv_cq
cq_context	include\infiniband\verbs.h	/^	void			*cq_context;$/;"	m	struct:ibv_cq_init_attr_ex
cq_context	include\infiniband\verbs.h	/^	void		       *cq_context;$/;"	m	struct:ibv_cq
cq_context	include\infiniband\verbs.h	/^	void		       *cq_context;$/;"	m	struct:ibv_cq_ex
cq_event	include\infiniband\verbs.h	/^	void			(*cq_event)(struct ibv_cq *cq);$/;"	m	struct:ibv_context_ops
cqe	include\infiniband\verbs.h	/^	int			cqe;$/;"	m	struct:ibv_cq
cqe	include\infiniband\verbs.h	/^	int			cqe;$/;"	m	struct:ibv_cq_ex
cqe	include\infiniband\verbs.h	/^	uint32_t			cqe;$/;"	m	struct:ibv_cq_init_attr_ex
create_ah	include\infiniband\verbs.h	/^	struct ibv_ah *		(*create_ah)(struct ibv_pd *pd, struct ibv_ah_attr *attr);$/;"	m	struct:ibv_context_ops	typeref:struct:ibv_context_ops::create_ah
create_cq	include\infiniband\verbs.h	/^	struct ibv_cq *		(*create_cq)(struct ibv_context *context, int cqe,$/;"	m	struct:ibv_context_ops	typeref:struct:ibv_context_ops::create_cq
create_cq_ex	include\infiniband\verbs.h	/^	struct ibv_cq_ex *(*create_cq_ex)(struct ibv_context *context,$/;"	m	struct:verbs_context	typeref:struct:verbs_context::create_cq_ex
create_flags	include\infiniband\verbs.h	/^	uint32_t                create_flags;$/;"	m	struct:ibv_qp_init_attr_ex
create_qp	include\infiniband\verbs.h	/^	struct ibv_qp *		(*create_qp)(struct ibv_pd *pd, struct ibv_qp_init_attr *attr);$/;"	m	struct:ibv_context_ops	typeref:struct:ibv_context_ops::create_qp
create_qp_ex	include\infiniband\verbs.h	/^	struct ibv_qp *(*create_qp_ex)(struct ibv_context *context,$/;"	m	struct:verbs_context	typeref:struct:verbs_context::create_qp_ex
create_rwq_ind_table	include\infiniband\verbs.h	/^	struct ibv_rwq_ind_table *(*create_rwq_ind_table)(struct ibv_context *context,$/;"	m	struct:verbs_context	typeref:struct:verbs_context::create_rwq_ind_table
create_srq	include\infiniband\verbs.h	/^	struct ibv_srq *	(*create_srq)(struct ibv_pd *pd,$/;"	m	struct:ibv_context_ops	typeref:struct:ibv_context_ops::create_srq
create_srq_ex	include\infiniband\verbs.h	/^	struct ibv_srq *	(*create_srq_ex)(struct ibv_context *context,$/;"	m	struct:verbs_context	typeref:struct:verbs_context::create_srq_ex
create_wq	include\infiniband\verbs.h	/^	struct ibv_wq * (*create_wq)(struct ibv_context *context,$/;"	m	struct:verbs_context	typeref:struct:verbs_context::create_wq
cur_qp_state	include\infiniband\verbs.h	/^	enum ibv_qp_state	cur_qp_state;$/;"	m	struct:ibv_qp_attr	typeref:enum:ibv_qp_attr::ibv_qp_state
curr_wq_state	include\infiniband\verbs.h	/^	enum	ibv_wq_state	curr_wq_state;$/;"	m	struct:ibv_wq_attr	typeref:enum:ibv_wq_attr::ibv_wq_state
dealloc_mw	include\infiniband\verbs.h	/^	int			(*dealloc_mw)(struct ibv_mw *mw);$/;"	m	struct:ibv_context_ops
dealloc_pd	include\infiniband\verbs.h	/^	int			(*dealloc_pd)(struct ibv_pd *pd);$/;"	m	struct:ibv_context_ops
dereg_mr	include\infiniband\verbs.h	/^	int			(*dereg_mr)(struct ibv_mr *mr);$/;"	m	struct:ibv_context_ops
dest_qp_num	include\infiniband\verbs.h	/^	uint32_t		dest_qp_num;$/;"	m	struct:ibv_qp_attr
destroy_ah	include\infiniband\verbs.h	/^	int			(*destroy_ah)(struct ibv_ah *ah);$/;"	m	struct:ibv_context_ops
destroy_cq	include\infiniband\verbs.h	/^	int			(*destroy_cq)(struct ibv_cq *cq);$/;"	m	struct:ibv_context_ops
destroy_qp	include\infiniband\verbs.h	/^	int			(*destroy_qp)(struct ibv_qp *qp);$/;"	m	struct:ibv_context_ops
destroy_rwq_ind_table	include\infiniband\verbs.h	/^	int (*destroy_rwq_ind_table)(struct ibv_rwq_ind_table *rwq_ind_table);$/;"	m	struct:verbs_context
destroy_srq	include\infiniband\verbs.h	/^	int			(*destroy_srq)(struct ibv_srq *srq);$/;"	m	struct:ibv_context_ops
destroy_wq	include\infiniband\verbs.h	/^	int (*destroy_wq)(struct ibv_wq *wq);$/;"	m	struct:verbs_context
detach_mcast	include\infiniband\verbs.h	/^	int			(*detach_mcast)(struct ibv_qp *qp, const union ibv_gid *gid,$/;"	m	struct:ibv_context_ops
dev_name	include\infiniband\verbs.h	/^	char			dev_name[IBV_SYSFS_NAME_MAX];$/;"	m	struct:ibv_device
dev_path	include\infiniband\verbs.h	/^	char			dev_path[IBV_SYSFS_PATH_MAX];$/;"	m	struct:ibv_device
device	include\infiniband\verbs.h	/^	struct ibv_device      *device;$/;"	m	struct:ibv_context	typeref:struct:ibv_context::ibv_device
device	include\infiniband\verbs.h	/^	struct ibv_device device; \/* Must be first *\/$/;"	m	struct:verbs_device	typeref:struct:verbs_device::ibv_device
device_cap_flags	include\infiniband\verbs.h	/^	int			device_cap_flags;$/;"	m	struct:ibv_device_attr
device_cap_flags_ex	include\infiniband\verbs.h	/^	uint64_t		device_cap_flags_ex;$/;"	m	struct:ibv_device_attr_ex
dgid	include\infiniband\verbs.h	/^	union ibv_gid		dgid;$/;"	m	struct:ibv_global_route	typeref:union:ibv_global_route::ibv_gid
dgid	include\infiniband\verbs.h	/^	union ibv_gid		dgid;$/;"	m	struct:ibv_grh	typeref:union:ibv_grh::ibv_gid
dlid	include\infiniband\verbs.h	/^	uint16_t		dlid;$/;"	m	struct:ibv_ah_attr
dlid_path_bits	include\infiniband\verbs.h	/^	uint8_t			dlid_path_bits;$/;"	m	struct:ibv_wc
dst_ip	include\infiniband\verbs.h	/^	uint32_t dst_ip;$/;"	m	struct:ibv_flow_ipv4_filter
dst_mac	include\infiniband\verbs.h	/^	uint8_t		dst_mac[6];$/;"	m	struct:ibv_flow_eth_filter
dst_port	include\infiniband\verbs.h	/^	uint16_t dst_port;$/;"	m	struct:ibv_flow_tcp_udp_filter
element	include\infiniband\verbs.h	/^	} element;$/;"	m	struct:ibv_async_event	typeref:union:ibv_async_event::__anon28
en_sqd_async_notify	include\infiniband\verbs.h	/^	uint8_t			en_sqd_async_notify;$/;"	m	struct:ibv_qp_attr
end_poll	include\infiniband\verbs.h	/^	void (*end_poll)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
eth	include\infiniband\verbs.h	/^		struct ibv_flow_spec_eth eth;$/;"	m	union:ibv_flow_spec::__anon41	typeref:struct:ibv_flow_spec::__anon41::ibv_flow_spec_eth
ether_type	include\infiniband\verbs.h	/^	uint16_t	ether_type;$/;"	m	struct:ibv_flow_eth_filter
event_type	include\infiniband\verbs.h	/^	enum ibv_event_type	event_type;$/;"	m	struct:ibv_async_event	typeref:enum:ibv_async_event::ibv_event_type
events_completed	include\infiniband\verbs.h	/^	uint32_t		events_completed;$/;"	m	struct:ibv_qp
events_completed	include\infiniband\verbs.h	/^	uint32_t		events_completed;$/;"	m	struct:ibv_srq
events_completed	include\infiniband\verbs.h	/^	uint32_t		events_completed;$/;"	m	struct:ibv_wq
fd	include\infiniband\verbs.h	/^	int			fd;$/;"	m	struct:ibv_comp_channel
fd	include\infiniband\verbs.h	/^	int	 fd;$/;"	m	struct:ibv_xrcd_init_attr
flags	include\infiniband\verbs.h	/^	uint32_t		flags;$/;"	m	struct:ibv_cq_init_attr_ex
flags	include\infiniband\verbs.h	/^	uint32_t flags;$/;"	m	struct:ibv_flow_attr
flow_label	include\infiniband\verbs.h	/^	uint32_t		flow_label;$/;"	m	struct:ibv_global_route
free_context	include\infiniband\verbs.h	/^	void			(*free_context)(struct ibv_context *context);$/;"	m	struct:ibv_device_ops
fw_ver	include\infiniband\verbs.h	/^	char			fw_ver[64]; 	\/\/firmware version$/;"	m	struct:ibv_device_attr
general_caps	include\infiniband\verbs.h	/^	uint64_t general_caps;$/;"	m	struct:ibv_odp_caps
get_srq_num	include\infiniband\verbs.h	/^	int (*get_srq_num)(struct ibv_srq *srq, uint32_t *srq_num);$/;"	m	struct:verbs_context
gid_tbl_len	include\infiniband\verbs.h	/^	int			gid_tbl_len;$/;"	m	struct:ibv_port_attr
global	include\infiniband\verbs.h	/^	} global;$/;"	m	union:ibv_gid	typeref:struct:ibv_gid::__anon25
grh	include\infiniband\verbs.h	/^	struct ibv_global_route	grh;$/;"	m	struct:ibv_ah_attr	typeref:struct:ibv_ah_attr::ibv_global_route
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_ah
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_cq
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_cq_ex
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_mr
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_mw
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_pd
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_qp
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_srq
handle	include\infiniband\verbs.h	/^	uint32_t		handle;$/;"	m	struct:ibv_wq
handle	include\infiniband\verbs.h	/^	uint32_t	   handle;$/;"	m	struct:ibv_flow
has_comp_mask	include\infiniband\verbs.h	/^	uint64_t has_comp_mask;$/;"	m	struct:verbs_context
hca_core_clock	include\infiniband\verbs.h	/^	uint64_t		hca_core_clock;$/;"	m	struct:ibv_device_attr_ex
hdr	include\infiniband\verbs.h	/^			void		       *hdr;$/;"	m	struct:ibv_send_wr::__anon38::__anon40
hdr	include\infiniband\verbs.h	/^		} hdr;$/;"	m	union:ibv_flow_spec::__anon41	typeref:struct:ibv_flow_spec::__anon41::__anon42
hdr_sz	include\infiniband\verbs.h	/^			uint16_t		hdr_sz;$/;"	m	struct:ibv_send_wr::__anon38::__anon40
hop_limit	include\infiniband\verbs.h	/^	uint8_t			hop_limit;$/;"	m	struct:ibv_global_route
hop_limit	include\infiniband\verbs.h	/^	uint8_t			hop_limit;$/;"	m	struct:ibv_grh
hw_ver	include\infiniband\verbs.h	/^	uint32_t		hw_ver;\/\/hardware version$/;"	m	struct:ibv_device_attr
ibdev_path	include\infiniband\verbs.h	/^	char			ibdev_path[IBV_SYSFS_PATH_MAX];$/;"	m	struct:ibv_device
ibv_access_flags	include\infiniband\verbs.h	/^enum ibv_access_flags {$/;"	g
ibv_ah	include\infiniband\verbs.h	/^struct ibv_ah {$/;"	s
ibv_ah_attr	include\infiniband\verbs.h	/^struct ibv_ah_attr {$/;"	s
ibv_alloc_mw	include\infiniband\verbs.h	/^static inline struct ibv_mw *ibv_alloc_mw(struct ibv_pd *pd,$/;"	f
ibv_async_event	include\infiniband\verbs.h	/^struct ibv_async_event {$/;"	s
ibv_atomic_cap	include\infiniband\verbs.h	/^enum ibv_atomic_cap {$/;"	g
ibv_bind_mw	include\infiniband\verbs.h	/^static inline int ibv_bind_mw(struct ibv_qp *qp, struct ibv_mw *mw,$/;"	f
ibv_close_xrcd	include\infiniband\verbs.h	/^static inline int ibv_close_xrcd(struct ibv_xrcd *xrcd)$/;"	f
ibv_comp_channel	include\infiniband\verbs.h	/^struct ibv_comp_channel {$/;"	s
ibv_context	include\infiniband\verbs.h	/^struct ibv_context {$/;"	s
ibv_context_ops	include\infiniband\verbs.h	/^struct ibv_context_ops {$/;"	s
ibv_cq	include\infiniband\verbs.h	/^struct ibv_cq {$/;"	s
ibv_cq_ex	include\infiniband\verbs.h	/^struct ibv_cq_ex {$/;"	s
ibv_cq_ex_to_cq	include\infiniband\verbs.h	/^static inline struct ibv_cq *ibv_cq_ex_to_cq(struct ibv_cq_ex *cq)$/;"	f
ibv_cq_init_attr_ex	include\infiniband\verbs.h	/^struct ibv_cq_init_attr_ex {$/;"	s
ibv_cq_init_attr_mask	include\infiniband\verbs.h	/^enum ibv_cq_init_attr_mask {$/;"	g
ibv_create_cq_attr_flags	include\infiniband\verbs.h	/^enum ibv_create_cq_attr_flags {$/;"	g
ibv_create_cq_ex	include\infiniband\verbs.h	/^struct ibv_cq_ex *ibv_create_cq_ex(struct ibv_context *context,$/;"	f
ibv_create_cq_wc_flags	include\infiniband\verbs.h	/^enum ibv_create_cq_wc_flags {$/;"	g
ibv_create_flow	include\infiniband\verbs.h	/^	struct ibv_flow * (*ibv_create_flow) (struct ibv_qp *qp,$/;"	m	struct:verbs_context	typeref:struct:verbs_context::ibv_create_flow
ibv_create_flow	include\infiniband\verbs.h	/^static inline struct ibv_flow *ibv_create_flow(struct ibv_qp *qp,$/;"	f
ibv_create_qp_ex	include\infiniband\verbs.h	/^ibv_create_qp_ex(struct ibv_context *context, struct ibv_qp_init_attr_ex *qp_init_attr_ex)$/;"	f
ibv_create_rwq_ind_table	include\infiniband\verbs.h	/^static inline struct ibv_rwq_ind_table *ibv_create_rwq_ind_table(struct ibv_context *context,$/;"	f
ibv_create_srq_ex	include\infiniband\verbs.h	/^ibv_create_srq_ex(struct ibv_context *context,$/;"	f
ibv_create_wq	include\infiniband\verbs.h	/^static inline struct ibv_wq *ibv_create_wq(struct ibv_context *context,$/;"	f
ibv_dealloc_mw	include\infiniband\verbs.h	/^static inline int ibv_dealloc_mw(struct ibv_mw *mw)$/;"	f
ibv_destroy_flow	include\infiniband\verbs.h	/^	int (*ibv_destroy_flow) (struct ibv_flow *flow);$/;"	m	struct:verbs_context
ibv_destroy_flow	include\infiniband\verbs.h	/^static inline int ibv_destroy_flow(struct ibv_flow *flow_id)$/;"	f
ibv_destroy_rwq_ind_table	include\infiniband\verbs.h	/^static inline int ibv_destroy_rwq_ind_table(struct ibv_rwq_ind_table *rwq_ind_table)$/;"	f
ibv_destroy_wq	include\infiniband\verbs.h	/^static inline int ibv_destroy_wq(struct ibv_wq *wq)$/;"	f
ibv_device	include\infiniband\verbs.h	/^struct ibv_device {$/;"	s
ibv_device_attr	include\infiniband\verbs.h	/^struct ibv_device_attr {$/;"	s
ibv_device_attr_ex	include\infiniband\verbs.h	/^struct ibv_device_attr_ex {$/;"	s
ibv_device_cap_flags	include\infiniband\verbs.h	/^enum ibv_device_cap_flags {$/;"	g
ibv_device_ops	include\infiniband\verbs.h	/^struct ibv_device_ops {$/;"	s
ibv_end_poll	include\infiniband\verbs.h	/^static inline void ibv_end_poll(struct ibv_cq_ex *cq)$/;"	f
ibv_event_type	include\infiniband\verbs.h	/^enum ibv_event_type {$/;"	g
ibv_flow	include\infiniband\verbs.h	/^struct ibv_flow {$/;"	s
ibv_flow_attr	include\infiniband\verbs.h	/^struct ibv_flow_attr {$/;"	s
ibv_flow_attr_type	include\infiniband\verbs.h	/^enum ibv_flow_attr_type {$/;"	g
ibv_flow_eth_filter	include\infiniband\verbs.h	/^struct ibv_flow_eth_filter {$/;"	s
ibv_flow_flags	include\infiniband\verbs.h	/^enum ibv_flow_flags {$/;"	g
ibv_flow_ipv4_filter	include\infiniband\verbs.h	/^struct ibv_flow_ipv4_filter {$/;"	s
ibv_flow_spec	include\infiniband\verbs.h	/^struct ibv_flow_spec {$/;"	s
ibv_flow_spec_eth	include\infiniband\verbs.h	/^struct ibv_flow_spec_eth {$/;"	s
ibv_flow_spec_ipv4	include\infiniband\verbs.h	/^struct ibv_flow_spec_ipv4 {$/;"	s
ibv_flow_spec_tcp_udp	include\infiniband\verbs.h	/^struct ibv_flow_spec_tcp_udp {$/;"	s
ibv_flow_spec_type	include\infiniband\verbs.h	/^enum ibv_flow_spec_type {$/;"	g
ibv_flow_tcp_udp_filter	include\infiniband\verbs.h	/^struct ibv_flow_tcp_udp_filter {$/;"	s
ibv_get_srq_num	include\infiniband\verbs.h	/^static inline int ibv_get_srq_num(struct ibv_srq *srq, uint32_t *srq_num)$/;"	f
ibv_gid	include\infiniband\verbs.h	/^union ibv_gid {$/;"	u
ibv_global_route	include\infiniband\verbs.h	/^struct ibv_global_route {$/;"	s
ibv_grh	include\infiniband\verbs.h	/^struct ibv_grh {$/;"	s
ibv_inc_rkey	include\infiniband\verbs.h	/^static inline uint32_t ibv_inc_rkey(uint32_t rkey)$/;"	f
ibv_ind_table_init_attr_mask	include\infiniband\verbs.h	/^enum ibv_ind_table_init_attr_mask {$/;"	g
ibv_is_qpt_supported	include\infiniband\verbs.h	/^static inline int ibv_is_qpt_supported(uint32_t caps, enum ibv_qp_type qpt)$/;"	f
ibv_mig_state	include\infiniband\verbs.h	/^enum ibv_mig_state {$/;"	g
ibv_modify_wq	include\infiniband\verbs.h	/^static inline int ibv_modify_wq(struct ibv_wq *wq, struct ibv_wq_attr *wq_attr)$/;"	f
ibv_mr	include\infiniband\verbs.h	/^struct ibv_mr {$/;"	s
ibv_mtu	include\infiniband\verbs.h	/^enum ibv_mtu {$/;"	g
ibv_mw	include\infiniband\verbs.h	/^struct ibv_mw {$/;"	s
ibv_mw_bind	include\infiniband\verbs.h	/^struct ibv_mw_bind {$/;"	s
ibv_mw_bind_info	include\infiniband\verbs.h	/^struct ibv_mw_bind_info {$/;"	s
ibv_mw_type	include\infiniband\verbs.h	/^enum ibv_mw_type {$/;"	g
ibv_next_poll	include\infiniband\verbs.h	/^static inline int ibv_next_poll(struct ibv_cq_ex *cq)$/;"	f
ibv_node_type	include\infiniband\verbs.h	/^enum ibv_node_type {$/;"	g
ibv_odp_caps	include\infiniband\verbs.h	/^struct ibv_odp_caps {$/;"	s
ibv_odp_general_caps	include\infiniband\verbs.h	/^enum ibv_odp_general_caps {$/;"	g
ibv_odp_transport_cap_bits	include\infiniband\verbs.h	/^enum ibv_odp_transport_cap_bits {$/;"	g
ibv_open_qp	include\infiniband\verbs.h	/^ibv_open_qp(struct ibv_context *context, struct ibv_qp_open_attr *qp_open_attr)$/;"	f
ibv_open_xrcd	include\infiniband\verbs.h	/^ibv_open_xrcd(struct ibv_context *context, struct ibv_xrcd_init_attr *xrcd_init_attr)$/;"	f
ibv_pd	include\infiniband\verbs.h	/^struct ibv_pd {$/;"	s
ibv_poll_cq	include\infiniband\verbs.h	/^static inline int ibv_poll_cq(struct ibv_cq *cq, int num_entries, struct ibv_wc *wc)$/;"	f
ibv_poll_cq_attr	include\infiniband\verbs.h	/^struct ibv_poll_cq_attr {$/;"	s
ibv_port_attr	include\infiniband\verbs.h	/^struct ibv_port_attr {$/;"	s
ibv_port_cap_flags	include\infiniband\verbs.h	/^enum ibv_port_cap_flags {$/;"	g
ibv_port_state	include\infiniband\verbs.h	/^enum ibv_port_state {$/;"	g
ibv_post_recv	include\infiniband\verbs.h	/^static inline int ibv_post_recv(struct ibv_qp *qp, struct ibv_recv_wr *wr,$/;"	f
ibv_post_send	include\infiniband\verbs.h	/^static inline int ibv_post_send(struct ibv_qp *qp, struct ibv_send_wr *wr,$/;"	f
ibv_post_srq_recv	include\infiniband\verbs.h	/^static inline int ibv_post_srq_recv(struct ibv_srq *srq,$/;"	f
ibv_post_wq_recv	include\infiniband\verbs.h	/^static inline int ibv_post_wq_recv(struct ibv_wq *wq,$/;"	f
ibv_qp	include\infiniband\verbs.h	/^struct ibv_qp {$/;"	s
ibv_qp_attr	include\infiniband\verbs.h	/^struct ibv_qp_attr {$/;"	s
ibv_qp_attr_mask	include\infiniband\verbs.h	/^enum ibv_qp_attr_mask {$/;"	g
ibv_qp_cap	include\infiniband\verbs.h	/^struct ibv_qp_cap {$/;"	s
ibv_qp_create_flags	include\infiniband\verbs.h	/^enum ibv_qp_create_flags {$/;"	g
ibv_qp_init_attr	include\infiniband\verbs.h	/^struct ibv_qp_init_attr {$/;"	s
ibv_qp_init_attr_ex	include\infiniband\verbs.h	/^struct ibv_qp_init_attr_ex {$/;"	s
ibv_qp_init_attr_mask	include\infiniband\verbs.h	/^enum ibv_qp_init_attr_mask {$/;"	g
ibv_qp_open_attr	include\infiniband\verbs.h	/^struct ibv_qp_open_attr {$/;"	s
ibv_qp_open_attr_mask	include\infiniband\verbs.h	/^enum ibv_qp_open_attr_mask {$/;"	g
ibv_qp_state	include\infiniband\verbs.h	/^enum ibv_qp_state {$/;"	g
ibv_qp_type	include\infiniband\verbs.h	/^enum ibv_qp_type {$/;"	g
ibv_query_device_ex	include\infiniband\verbs.h	/^ibv_query_device_ex(struct ibv_context *context,$/;"	f
ibv_query_device_ex_input	include\infiniband\verbs.h	/^struct ibv_query_device_ex_input {$/;"	s
ibv_query_port	include\infiniband\verbs.h	1629;"	d
ibv_query_rt_values_ex	include\infiniband\verbs.h	/^ibv_query_rt_values_ex(struct ibv_context *context,$/;"	f
ibv_rate	include\infiniband\verbs.h	/^enum ibv_rate {$/;"	g
ibv_recv_wr	include\infiniband\verbs.h	/^struct ibv_recv_wr {$/;"	s
ibv_req_notify_cq	include\infiniband\verbs.h	/^static inline int ibv_req_notify_cq(struct ibv_cq *cq, int solicited_only)$/;"	f
ibv_rereg_mr_err_code	include\infiniband\verbs.h	/^enum ibv_rereg_mr_err_code {$/;"	g
ibv_rereg_mr_flags	include\infiniband\verbs.h	/^enum ibv_rereg_mr_flags {$/;"	g
ibv_rss_caps	include\infiniband\verbs.h	/^struct ibv_rss_caps {$/;"	s
ibv_rwq_ind_table	include\infiniband\verbs.h	/^struct ibv_rwq_ind_table {$/;"	s
ibv_rwq_ind_table_init_attr	include\infiniband\verbs.h	/^struct ibv_rwq_ind_table_init_attr {$/;"	s
ibv_rx_hash_conf	include\infiniband\verbs.h	/^struct ibv_rx_hash_conf {$/;"	s
ibv_rx_hash_fields	include\infiniband\verbs.h	/^enum ibv_rx_hash_fields {$/;"	g
ibv_rx_hash_function_flags	include\infiniband\verbs.h	/^enum ibv_rx_hash_function_flags {$/;"	g
ibv_send_flags	include\infiniband\verbs.h	/^enum ibv_send_flags {$/;"	g
ibv_send_wr	include\infiniband\verbs.h	/^struct ibv_send_wr {$/;"	s
ibv_sge	include\infiniband\verbs.h	/^struct ibv_sge {$/;"	s
ibv_srq	include\infiniband\verbs.h	/^struct ibv_srq {$/;"	s
ibv_srq_attr	include\infiniband\verbs.h	/^struct ibv_srq_attr {$/;"	s
ibv_srq_attr_mask	include\infiniband\verbs.h	/^enum ibv_srq_attr_mask {$/;"	g
ibv_srq_init_attr	include\infiniband\verbs.h	/^struct ibv_srq_init_attr {$/;"	s
ibv_srq_init_attr_ex	include\infiniband\verbs.h	/^struct ibv_srq_init_attr_ex {$/;"	s
ibv_srq_init_attr_mask	include\infiniband\verbs.h	/^enum ibv_srq_init_attr_mask {$/;"	g
ibv_srq_type	include\infiniband\verbs.h	/^enum ibv_srq_type {$/;"	g
ibv_start_poll	include\infiniband\verbs.h	/^static inline int ibv_start_poll(struct ibv_cq_ex *cq,$/;"	f
ibv_transport_type	include\infiniband\verbs.h	/^enum ibv_transport_type {$/;"	g
ibv_tso_caps	include\infiniband\verbs.h	/^struct ibv_tso_caps {$/;"	s
ibv_values_ex	include\infiniband\verbs.h	/^struct ibv_values_ex {$/;"	s
ibv_values_mask	include\infiniband\verbs.h	/^enum ibv_values_mask {$/;"	g
ibv_wc	include\infiniband\verbs.h	/^struct ibv_wc {$/;"	s
ibv_wc_flags	include\infiniband\verbs.h	/^enum ibv_wc_flags {$/;"	g
ibv_wc_opcode	include\infiniband\verbs.h	/^enum ibv_wc_opcode {$/;"	g
ibv_wc_read_byte_len	include\infiniband\verbs.h	/^static inline uint32_t ibv_wc_read_byte_len(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_completion_ts	include\infiniband\verbs.h	/^static inline uint64_t ibv_wc_read_completion_ts(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_dlid_path_bits	include\infiniband\verbs.h	/^static inline uint8_t ibv_wc_read_dlid_path_bits(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_imm_data	include\infiniband\verbs.h	/^static inline uint32_t ibv_wc_read_imm_data(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_opcode	include\infiniband\verbs.h	/^static inline enum ibv_wc_opcode ibv_wc_read_opcode(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_qp_num	include\infiniband\verbs.h	/^static inline uint32_t ibv_wc_read_qp_num(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_sl	include\infiniband\verbs.h	/^static inline uint8_t ibv_wc_read_sl(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_slid	include\infiniband\verbs.h	/^static inline uint32_t ibv_wc_read_slid(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_src_qp	include\infiniband\verbs.h	/^static inline uint32_t ibv_wc_read_src_qp(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_vendor_err	include\infiniband\verbs.h	/^static inline uint32_t ibv_wc_read_vendor_err(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_read_wc_flags	include\infiniband\verbs.h	/^static inline int ibv_wc_read_wc_flags(struct ibv_cq_ex *cq)$/;"	f
ibv_wc_status	include\infiniband\verbs.h	/^enum ibv_wc_status {$/;"	g
ibv_wq	include\infiniband\verbs.h	/^struct ibv_wq {$/;"	s
ibv_wq_attr	include\infiniband\verbs.h	/^struct ibv_wq_attr {$/;"	s
ibv_wq_attr_mask	include\infiniband\verbs.h	/^enum ibv_wq_attr_mask {$/;"	g
ibv_wq_init_attr	include\infiniband\verbs.h	/^struct ibv_wq_init_attr {$/;"	s
ibv_wq_init_attr_mask	include\infiniband\verbs.h	/^enum ibv_wq_init_attr_mask {$/;"	g
ibv_wq_state	include\infiniband\verbs.h	/^enum ibv_wq_state {$/;"	g
ibv_wq_type	include\infiniband\verbs.h	/^enum ibv_wq_type {$/;"	g
ibv_wr_opcode	include\infiniband\verbs.h	/^enum ibv_wr_opcode {$/;"	g
ibv_xrcd	include\infiniband\verbs.h	/^struct ibv_xrcd {$/;"	s
ibv_xrcd_init_attr	include\infiniband\verbs.h	/^struct ibv_xrcd_init_attr {$/;"	s
ibv_xrcd_init_attr_mask	include\infiniband\verbs.h	/^enum ibv_xrcd_init_attr_mask {$/;"	g
imm_data	include\infiniband\verbs.h	/^	uint32_t		imm_data;	\/* in network byte order *\/$/;"	m	struct:ibv_send_wr
imm_data	include\infiniband\verbs.h	/^	uint32_t		imm_data;$/;"	m	struct:ibv_wc
ind_tbl	include\infiniband\verbs.h	/^	struct ibv_wq **ind_tbl;$/;"	m	struct:ibv_rwq_ind_table_init_attr	typeref:struct:ibv_rwq_ind_table_init_attr::ibv_wq
ind_tbl_handle	include\infiniband\verbs.h	/^	int ind_tbl_handle;$/;"	m	struct:ibv_rwq_ind_table
ind_tbl_num	include\infiniband\verbs.h	/^	int ind_tbl_num;$/;"	m	struct:ibv_rwq_ind_table
init_context	include\infiniband\verbs.h	/^	int	(*init_context)(struct verbs_device *device,$/;"	m	struct:verbs_device
init_type_reply	include\infiniband\verbs.h	/^	uint8_t			init_type_reply;$/;"	m	struct:ibv_port_attr
interface_id	include\infiniband\verbs.h	/^		uint64_t	interface_id;$/;"	m	struct:ibv_gid::__anon25
ipv4	include\infiniband\verbs.h	/^		struct ibv_flow_spec_ipv4 ipv4;$/;"	m	union:ibv_flow_spec::__anon41	typeref:struct:ibv_flow_spec::__anon41::ibv_flow_spec_ipv4
is_global	include\infiniband\verbs.h	/^	uint8_t			is_global;$/;"	m	struct:ibv_ah_attr
length	include\infiniband\verbs.h	/^	size_t			length;$/;"	m	struct:ibv_mr
length	include\infiniband\verbs.h	/^	uint32_t		length; \/\/ the length of the data thar will be read from \/ written to this address$/;"	m	struct:ibv_sge
length	include\infiniband\verbs.h	/^	uint64_t	 length;$/;"	m	struct:ibv_mw_bind_info
lid	include\infiniband\verbs.h	/^	uint16_t		lid;$/;"	m	struct:ibv_port_attr
link_layer	include\infiniband\verbs.h	/^	uint8_t			link_layer;$/;"	m	struct:ibv_port_attr
lkey	include\infiniband\verbs.h	/^	uint32_t		lkey; 	\/\/ the local key of the MR that was registered to this buffer$/;"	m	struct:ibv_sge
lkey	include\infiniband\verbs.h	/^	uint32_t		lkey;$/;"	m	struct:ibv_mr
lmc	include\infiniband\verbs.h	/^	uint8_t			lmc;$/;"	m	struct:ibv_port_attr
local_ca_ack_delay	include\infiniband\verbs.h	/^	uint8_t			local_ca_ack_delay;\/\/local ca ack delay$/;"	m	struct:ibv_device_attr
log_ind_tbl_size	include\infiniband\verbs.h	/^	uint32_t log_ind_tbl_size;$/;"	m	struct:ibv_rwq_ind_table_init_attr
mask	include\infiniband\verbs.h	/^	struct ibv_flow_eth_filter mask;$/;"	m	struct:ibv_flow_spec_eth	typeref:struct:ibv_flow_spec_eth::ibv_flow_eth_filter
mask	include\infiniband\verbs.h	/^	struct ibv_flow_ipv4_filter mask;$/;"	m	struct:ibv_flow_spec_ipv4	typeref:struct:ibv_flow_spec_ipv4::ibv_flow_ipv4_filter
mask	include\infiniband\verbs.h	/^	struct ibv_flow_tcp_udp_filter mask;$/;"	m	struct:ibv_flow_spec_tcp_udp	typeref:struct:ibv_flow_spec_tcp_udp::ibv_flow_tcp_udp_filter
max_ah	include\infiniband\verbs.h	/^	int			max_ah;\/\/ maximum supported address handles$/;"	m	struct:ibv_device_attr
max_cq	include\infiniband\verbs.h	/^	int			max_cq;\/\/ maximum supported completion queue$/;"	m	struct:ibv_device_attr
max_cqe	include\infiniband\verbs.h	/^	int			max_cqe;\/\/ maximum commpletion queue entries per CQ$/;"	m	struct:ibv_device_attr
max_dest_rd_atomic	include\infiniband\verbs.h	/^	uint8_t			max_dest_rd_atomic;$/;"	m	struct:ibv_qp_attr
max_ee	include\infiniband\verbs.h	/^	int			max_ee;\/\/ maximum supported EE contexts$/;"	m	struct:ibv_device_attr
max_ee_init_rd_atom	include\infiniband\verbs.h	/^	int			max_ee_init_rd_atom;\/\/maximum RDMA read and atomic operation thar may be initiated per EE$/;"	m	struct:ibv_device_attr
max_ee_rd_atom	include\infiniband\verbs.h	/^	int			max_ee_rd_atom;\/\/ maximum outstanding RDMA read and atomic operation per End to End(ee) context(RD connections)$/;"	m	struct:ibv_device_attr
max_fmr	include\infiniband\verbs.h	/^	int			max_fmr;\/\/maximum supported fast memory regions$/;"	m	struct:ibv_device_attr
max_inline_data	include\infiniband\verbs.h	/^	uint32_t		max_inline_data;$/;"	m	struct:ibv_qp_cap
max_map_per_fmr	include\infiniband\verbs.h	/^	int			max_map_per_fmr;\/\/ maximum number of remaps per FMR before an unmap operation si required$/;"	m	struct:ibv_device_attr
max_mcast_grp	include\infiniband\verbs.h	/^	int			max_mcast_grp;\/\/ maximum supported multicast groups$/;"	m	struct:ibv_device_attr
max_mcast_qp_attach	include\infiniband\verbs.h	/^	int			max_mcast_qp_attach;\/\/ maximum QPs per multicast group that can be attached$/;"	m	struct:ibv_device_attr
max_mr	include\infiniband\verbs.h	/^	int			max_mr;\/\/ maximum suppoered memory regions$/;"	m	struct:ibv_device_attr
max_mr_size	include\infiniband\verbs.h	/^	uint64_t		max_mr_size;\/\/largest contiguous block that can be registered$/;"	m	struct:ibv_device_attr
max_msg_sz	include\infiniband\verbs.h	/^	uint32_t		max_msg_sz;$/;"	m	struct:ibv_port_attr
max_mtu	include\infiniband\verbs.h	/^	enum ibv_mtu		max_mtu;$/;"	m	struct:ibv_port_attr	typeref:enum:ibv_port_attr::ibv_mtu
max_mw	include\infiniband\verbs.h	/^	int			max_mw;\/\/ maximum supported memory windows$/;"	m	struct:ibv_device_attr
max_pd	include\infiniband\verbs.h	/^	int			max_pd;\/\/ maximum supported protection domains$/;"	m	struct:ibv_device_attr
max_pkeys	include\infiniband\verbs.h	/^	uint16_t		max_pkeys;\/\/maximum number of partitions$/;"	m	struct:ibv_device_attr
max_qp	include\infiniband\verbs.h	/^	int			max_qp; \/\/ maximum number of queue pairs(QP)$/;"	m	struct:ibv_device_attr
max_qp_init_rd_atom	include\infiniband\verbs.h	/^	int			max_qp_init_rd_atom;\/\/maximum RDMA read and atomic operation thar may be initiated per QP$/;"	m	struct:ibv_device_attr
max_qp_rd_atom	include\infiniband\verbs.h	/^	int			max_qp_rd_atom;\/\/ maximum outstanding RDMA read and atomic operation per QP$/;"	m	struct:ibv_device_attr
max_qp_wr	include\infiniband\verbs.h	/^	int			max_qp_wr;\/\/maximum outstanding work requests on any queue$/;"	m	struct:ibv_device_attr
max_raw_ethy_qp	include\infiniband\verbs.h	/^	int			max_raw_ethy_qp;\/\/ maximum supported ethertype datagram QPs$/;"	m	struct:ibv_device_attr
max_raw_ipv6_qp	include\infiniband\verbs.h	/^	int			max_raw_ipv6_qp;\/\/ maximum supported raw IPv6 datagram QPs$/;"	m	struct:ibv_device_attr
max_rd_atomic	include\infiniband\verbs.h	/^	uint8_t			max_rd_atomic;$/;"	m	struct:ibv_qp_attr
max_rdd	include\infiniband\verbs.h	/^	int			max_rdd;\/\/ maximum supported RD domains$/;"	m	struct:ibv_device_attr
max_recv_sge	include\infiniband\verbs.h	/^	uint32_t		max_recv_sge;$/;"	m	struct:ibv_qp_cap
max_recv_wr	include\infiniband\verbs.h	/^	uint32_t		max_recv_wr;$/;"	m	struct:ibv_qp_cap
max_res_rd_atom	include\infiniband\verbs.h	/^	int			max_res_rd_atom;\/\/maximum resources used for incoming RDMA read and atomic operations$/;"	m	struct:ibv_device_attr
max_rwq_indirection_table_size	include\infiniband\verbs.h	/^	uint32_t max_rwq_indirection_table_size;$/;"	m	struct:ibv_rss_caps
max_rwq_indirection_tables	include\infiniband\verbs.h	/^	uint32_t max_rwq_indirection_tables;$/;"	m	struct:ibv_rss_caps
max_send_sge	include\infiniband\verbs.h	/^	uint32_t		max_send_sge;$/;"	m	struct:ibv_qp_cap
max_send_wr	include\infiniband\verbs.h	/^	uint32_t		max_send_wr;$/;"	m	struct:ibv_qp_cap
max_sge	include\infiniband\verbs.h	/^	int			max_sge; \/\/ maximum scatter\/gather entries(SGE) per WR for non-RD QPs$/;"	m	struct:ibv_device_attr
max_sge	include\infiniband\verbs.h	/^	uint32_t		max_sge;$/;"	m	struct:ibv_srq_attr
max_sge	include\infiniband\verbs.h	/^	uint32_t		max_sge;$/;"	m	struct:ibv_wq_init_attr
max_sge_rd	include\infiniband\verbs.h	/^	int			max_sge_rd;\/\/ maximum SGEs per WR for RD QPs$/;"	m	struct:ibv_device_attr
max_srq	include\infiniband\verbs.h	/^	int			max_srq; \/\/ maximum supported shared receive queues$/;"	m	struct:ibv_device_attr
max_srq_sge	include\infiniband\verbs.h	/^	int			max_srq_sge;\/\/ maximum SGEs per SRQ$/;"	m	struct:ibv_device_attr
max_srq_wr	include\infiniband\verbs.h	/^	int			max_srq_wr; \/\/maximum work requests per SRQ$/;"	m	struct:ibv_device_attr
max_total_mcast_qp_attach	include\infiniband\verbs.h	/^	int			max_total_mcast_qp_attach;\/\/ maximum total QPs that can be attached to multicast groups$/;"	m	struct:ibv_device_attr
max_tso	include\infiniband\verbs.h	/^	uint32_t max_tso;$/;"	m	struct:ibv_tso_caps
max_tso_header	include\infiniband\verbs.h	/^	uint16_t		max_tso_header;$/;"	m	struct:ibv_qp_init_attr_ex
max_vl_num	include\infiniband\verbs.h	/^	uint8_t			max_vl_num;$/;"	m	struct:ibv_port_attr
max_wq_type_rq	include\infiniband\verbs.h	/^	uint32_t		max_wq_type_rq;$/;"	m	struct:ibv_device_attr_ex
max_wr	include\infiniband\verbs.h	/^	uint32_t		max_wr;$/;"	m	struct:ibv_srq_attr
max_wr	include\infiniband\verbs.h	/^	uint32_t		max_wr;$/;"	m	struct:ibv_wq_init_attr
min_rnr_timer	include\infiniband\verbs.h	/^	uint8_t			min_rnr_timer;$/;"	m	struct:ibv_qp_attr
modify_qp	include\infiniband\verbs.h	/^	int			(*modify_qp)(struct ibv_qp *qp, struct ibv_qp_attr *attr,$/;"	m	struct:ibv_context_ops
modify_srq	include\infiniband\verbs.h	/^	int			(*modify_srq)(struct ibv_srq *srq,$/;"	m	struct:ibv_context_ops
modify_wq	include\infiniband\verbs.h	/^	int (*modify_wq)(struct ibv_wq *wq, struct ibv_wq_attr *wq_attr);$/;"	m	struct:verbs_context
mr	include\infiniband\verbs.h	/^	struct ibv_mr	*mr;$/;"	m	struct:ibv_mw_bind_info	typeref:struct:ibv_mw_bind_info::ibv_mr
mss	include\infiniband\verbs.h	/^			uint16_t		mss;$/;"	m	struct:ibv_send_wr::__anon38::__anon40
mutex	include\infiniband\verbs.h	/^	pthread_mutex_t		mutex;$/;"	m	struct:ibv_context
mutex	include\infiniband\verbs.h	/^	pthread_mutex_t		mutex;$/;"	m	struct:ibv_cq
mutex	include\infiniband\verbs.h	/^	pthread_mutex_t		mutex;$/;"	m	struct:ibv_cq_ex
mutex	include\infiniband\verbs.h	/^	pthread_mutex_t		mutex;$/;"	m	struct:ibv_qp
mutex	include\infiniband\verbs.h	/^	pthread_mutex_t		mutex;$/;"	m	struct:ibv_srq
mutex	include\infiniband\verbs.h	/^	pthread_mutex_t		mutex;$/;"	m	struct:ibv_wq
mw	include\infiniband\verbs.h	/^			struct ibv_mw	*mw;$/;"	m	struct:ibv_send_wr::__anon38::__anon39	typeref:struct:ibv_send_wr::__anon38::__anon39::ibv_mw
mw_access_flags	include\infiniband\verbs.h	/^	int		 mw_access_flags; \/* use ibv_access_flags *\/$/;"	m	struct:ibv_mw_bind_info
name	include\infiniband\verbs.h	/^	char			name[IBV_SYSFS_NAME_MAX];$/;"	m	struct:ibv_device
next	include\infiniband\verbs.h	/^	struct ibv_recv_wr     *next;$/;"	m	struct:ibv_recv_wr	typeref:struct:ibv_recv_wr::ibv_recv_wr
next	include\infiniband\verbs.h	/^	struct ibv_send_wr     *next;$/;"	m	struct:ibv_send_wr	typeref:struct:ibv_send_wr::ibv_send_wr
next_hdr	include\infiniband\verbs.h	/^	uint8_t			next_hdr;$/;"	m	struct:ibv_grh
next_poll	include\infiniband\verbs.h	/^	int (*next_poll)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
node_guid	include\infiniband\verbs.h	/^	uint64_t		node_guid; \/\/ node global unique identifier(guid)$/;"	m	struct:ibv_device_attr
node_type	include\infiniband\verbs.h	/^	enum ibv_node_type	node_type;	\/\/	IBV_NODE_UNKOWN, IBV_NODE_CA, IBV_NODE_SWITCH, IBV_NODE_ROUTER, IBV_NODE_RNIC$/;"	m	struct:ibv_device	typeref:enum:ibv_device::ibv_node_type
num_comp_vectors	include\infiniband\verbs.h	/^	int			num_comp_vectors;$/;"	m	struct:ibv_context
num_of_specs	include\infiniband\verbs.h	/^	uint8_t num_of_specs;$/;"	m	struct:ibv_flow_attr
num_sge	include\infiniband\verbs.h	/^	int			num_sge;$/;"	m	struct:ibv_recv_wr
num_sge	include\infiniband\verbs.h	/^	int			num_sge;$/;"	m	struct:ibv_send_wr
odp_caps	include\infiniband\verbs.h	/^	struct ibv_odp_caps	odp_caps;$/;"	m	struct:ibv_device_attr_ex	typeref:struct:ibv_device_attr_ex::ibv_odp_caps
oflags	include\infiniband\verbs.h	/^	int	 oflags;$/;"	m	struct:ibv_xrcd_init_attr
opcode	include\infiniband\verbs.h	/^	enum ibv_wc_opcode	opcode;$/;"	m	struct:ibv_wc	typeref:enum:ibv_wc::ibv_wc_opcode
opcode	include\infiniband\verbs.h	/^	enum ibv_wr_opcode	opcode;$/;"	m	struct:ibv_send_wr	typeref:enum:ibv_send_wr::ibv_wr_opcode
open_qp	include\infiniband\verbs.h	/^	struct ibv_qp *(*open_qp)(struct ibv_context *context,$/;"	m	struct:verbs_context	typeref:struct:verbs_context::open_qp
open_xrcd	include\infiniband\verbs.h	/^	struct ibv_xrcd *	(*open_xrcd)(struct ibv_context *context,$/;"	m	struct:verbs_context	typeref:struct:verbs_context::open_xrcd
ops	include\infiniband\verbs.h	/^	struct ibv_context_ops	ops;$/;"	m	struct:ibv_context	typeref:struct:ibv_context::ibv_context_ops
ops	include\infiniband\verbs.h	/^	struct ibv_device_ops	ops; 	\/\/ pointers to alloc and free functions$/;"	m	struct:ibv_device	typeref:struct:ibv_device::ibv_device_ops
orig_attr	include\infiniband\verbs.h	/^	struct ibv_device_attr	orig_attr;$/;"	m	struct:ibv_device_attr_ex	typeref:struct:ibv_device_attr_ex::ibv_device_attr
page_size_cap	include\infiniband\verbs.h	/^	uint64_t		page_size_cap;\/\/supported page size $/;"	m	struct:ibv_device_attr
path_mig_state	include\infiniband\verbs.h	/^	enum ibv_mig_state	path_mig_state;$/;"	m	struct:ibv_qp_attr	typeref:enum:ibv_qp_attr::ibv_mig_state
path_mtu	include\infiniband\verbs.h	/^	enum ibv_mtu		path_mtu;$/;"	m	struct:ibv_qp_attr	typeref:enum:ibv_qp_attr::ibv_mtu
paylen	include\infiniband\verbs.h	/^	uint16_t		paylen;$/;"	m	struct:ibv_grh
pd	include\infiniband\verbs.h	/^	struct	ibv_pd	       *pd;$/;"	m	struct:ibv_wq	typeref:struct:ibv_wq::ibv_pd
pd	include\infiniband\verbs.h	/^	struct	ibv_pd	       *pd;$/;"	m	struct:ibv_wq_init_attr	typeref:struct:ibv_wq_init_attr::ibv_pd
pd	include\infiniband\verbs.h	/^	struct ibv_pd	       *pd;$/;"	m	struct:ibv_ah	typeref:struct:ibv_ah::ibv_pd
pd	include\infiniband\verbs.h	/^	struct ibv_pd	       *pd;$/;"	m	struct:ibv_mr	typeref:struct:ibv_mr::ibv_pd
pd	include\infiniband\verbs.h	/^	struct ibv_pd	       *pd;$/;"	m	struct:ibv_mw	typeref:struct:ibv_mw::ibv_pd
pd	include\infiniband\verbs.h	/^	struct ibv_pd	       *pd;$/;"	m	struct:ibv_qp	typeref:struct:ibv_qp::ibv_pd
pd	include\infiniband\verbs.h	/^	struct ibv_pd	       *pd;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:struct:ibv_qp_init_attr_ex::ibv_pd
pd	include\infiniband\verbs.h	/^	struct ibv_pd	       *pd;$/;"	m	struct:ibv_srq	typeref:struct:ibv_srq::ibv_pd
pd	include\infiniband\verbs.h	/^	struct ibv_pd	       *pd;$/;"	m	struct:ibv_srq_init_attr_ex	typeref:struct:ibv_srq_init_attr_ex::ibv_pd
per_transport_caps	include\infiniband\verbs.h	/^	} per_transport_caps;$/;"	m	struct:ibv_odp_caps	typeref:struct:ibv_odp_caps::__anon26
phys_port_cnt	include\infiniband\verbs.h	/^	uint8_t			phys_port_cnt;\/\/ number of physical ports$/;"	m	struct:ibv_device_attr
phys_state	include\infiniband\verbs.h	/^	uint8_t			phys_state;$/;"	m	struct:ibv_port_attr
pkey_index	include\infiniband\verbs.h	/^	uint16_t		pkey_index;$/;"	m	struct:ibv_qp_attr
pkey_index	include\infiniband\verbs.h	/^	uint16_t		pkey_index;$/;"	m	struct:ibv_wc
pkey_tbl_len	include\infiniband\verbs.h	/^	uint16_t		pkey_tbl_len;$/;"	m	struct:ibv_port_attr
poll_cq	include\infiniband\verbs.h	/^	int			(*poll_cq)(struct ibv_cq *cq, int num_entries, struct ibv_wc *wc);$/;"	m	struct:ibv_context_ops
port	include\infiniband\verbs.h	/^	uint8_t port;$/;"	m	struct:ibv_flow_attr
port_cap_flags	include\infiniband\verbs.h	/^	uint32_t		port_cap_flags;$/;"	m	struct:ibv_port_attr
port_num	include\infiniband\verbs.h	/^		int		port_num;$/;"	m	union:ibv_async_event::__anon28
port_num	include\infiniband\verbs.h	/^	uint8_t			port_num;$/;"	m	struct:ibv_ah_attr
port_num	include\infiniband\verbs.h	/^	uint8_t			port_num;$/;"	m	struct:ibv_qp_attr
post_recv	include\infiniband\verbs.h	/^	int			(*post_recv)(struct ibv_qp *qp, struct ibv_recv_wr *wr,$/;"	m	struct:ibv_context_ops
post_recv	include\infiniband\verbs.h	/^	int (*post_recv)(struct ibv_wq *current,$/;"	m	struct:ibv_wq
post_send	include\infiniband\verbs.h	/^	int			(*post_send)(struct ibv_qp *qp, struct ibv_send_wr *wr,$/;"	m	struct:ibv_context_ops
post_srq_recv	include\infiniband\verbs.h	/^	int			(*post_srq_recv)(struct ibv_srq *srq,$/;"	m	struct:ibv_context_ops
priority	include\infiniband\verbs.h	/^	uint16_t priority;$/;"	m	struct:ibv_flow_attr
priv	include\infiniband\verbs.h	/^	struct verbs_ex_private *priv;$/;"	m	struct:verbs_context	typeref:struct:verbs_context::verbs_ex_private
qkey	include\infiniband\verbs.h	/^	uint32_t		qkey;$/;"	m	struct:ibv_qp_attr
qkey_viol_cntr	include\infiniband\verbs.h	/^	uint32_t		qkey_viol_cntr;$/;"	m	struct:ibv_port_attr
qp	include\infiniband\verbs.h	/^		struct ibv_qp  *qp;$/;"	m	union:ibv_async_event::__anon28	typeref:struct:ibv_async_event::__anon28::ibv_qp
qp_access_flags	include\infiniband\verbs.h	/^	int			qp_access_flags;$/;"	m	struct:ibv_qp_attr
qp_context	include\infiniband\verbs.h	/^	void		       *qp_context;$/;"	m	struct:ibv_qp
qp_context	include\infiniband\verbs.h	/^	void		       *qp_context;$/;"	m	struct:ibv_qp_init_attr_ex
qp_context	include\infiniband\verbs.h	/^	void		       *qp_context;$/;"	m	struct:ibv_qp_open_attr
qp_context	include\infiniband\verbs.h	/^	void		       *qp_context;\/\/(optional) user defined value associated with QP$/;"	m	struct:ibv_qp_init_attr
qp_num	include\infiniband\verbs.h	/^	uint32_t		qp_num;$/;"	m	struct:ibv_qp
qp_num	include\infiniband\verbs.h	/^	uint32_t		qp_num;$/;"	m	struct:ibv_qp_open_attr
qp_num	include\infiniband\verbs.h	/^	uint32_t		qp_num;$/;"	m	struct:ibv_wc
qp_state	include\infiniband\verbs.h	/^	enum ibv_qp_state	qp_state;$/;"	m	struct:ibv_qp_attr	typeref:enum:ibv_qp_attr::ibv_qp_state
qp_type	include\infiniband\verbs.h	/^	enum ibv_qp_type	qp_type;$/;"	m	struct:ibv_qp	typeref:enum:ibv_qp::ibv_qp_type
qp_type	include\infiniband\verbs.h	/^	enum ibv_qp_type	qp_type;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:enum:ibv_qp_init_attr_ex::ibv_qp_type
qp_type	include\infiniband\verbs.h	/^	enum ibv_qp_type	qp_type;$/;"	m	struct:ibv_qp_open_attr	typeref:enum:ibv_qp_open_attr::ibv_qp_type
qp_type	include\infiniband\verbs.h	/^	enum ibv_qp_type	qp_type;\/\/$/;"	m	struct:ibv_qp_init_attr	typeref:enum:ibv_qp_init_attr::ibv_qp_type
qp_type	include\infiniband\verbs.h	/^	} qp_type;$/;"	m	struct:ibv_send_wr	typeref:union:ibv_send_wr::__anon36
query_device	include\infiniband\verbs.h	/^	int			(*query_device)(struct ibv_context *context,$/;"	m	struct:ibv_context_ops
query_device_ex	include\infiniband\verbs.h	/^	int (*query_device_ex)(struct ibv_context *context,$/;"	m	struct:verbs_context
query_port	include\infiniband\verbs.h	/^	int			(*query_port)(struct ibv_context *context, uint8_t port_num,$/;"	m	struct:ibv_context_ops
query_qp	include\infiniband\verbs.h	/^	int			(*query_qp)(struct ibv_qp *qp, struct ibv_qp_attr *attr,$/;"	m	struct:ibv_context_ops
query_rt_values	include\infiniband\verbs.h	/^	int (*query_rt_values)(struct ibv_context *context,$/;"	m	struct:verbs_context
query_srq	include\infiniband\verbs.h	/^	int			(*query_srq)(struct ibv_srq *srq,$/;"	m	struct:ibv_context_ops
raw	include\infiniband\verbs.h	/^	uint8_t			raw[16];$/;"	m	union:ibv_gid
raw_clock	include\infiniband\verbs.h	/^	struct timespec raw_clock;$/;"	m	struct:ibv_values_ex	typeref:struct:ibv_values_ex::timespec
rc_odp_caps	include\infiniband\verbs.h	/^		uint32_t rc_odp_caps;$/;"	m	struct:ibv_odp_caps::__anon26
rdma	include\infiniband\verbs.h	/^		} rdma;$/;"	m	union:ibv_send_wr::__anon32	typeref:struct:ibv_send_wr::__anon32::__anon33
read_byte_len	include\infiniband\verbs.h	/^	uint32_t (*read_byte_len)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_completion_ts	include\infiniband\verbs.h	/^	uint64_t (*read_completion_ts)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_dlid_path_bits	include\infiniband\verbs.h	/^	uint8_t (*read_dlid_path_bits)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_imm_data	include\infiniband\verbs.h	/^	uint32_t (*read_imm_data)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_opcode	include\infiniband\verbs.h	/^	enum ibv_wc_opcode (*read_opcode)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex	typeref:enum:ibv_cq_ex::read_opcode
read_qp_num	include\infiniband\verbs.h	/^	uint32_t (*read_qp_num)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_sl	include\infiniband\verbs.h	/^	uint8_t (*read_sl)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_slid	include\infiniband\verbs.h	/^	uint32_t (*read_slid)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_src_qp	include\infiniband\verbs.h	/^	uint32_t (*read_src_qp)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_vendor_err	include\infiniband\verbs.h	/^	uint32_t (*read_vendor_err)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
read_wc_flags	include\infiniband\verbs.h	/^	int (*read_wc_flags)(struct ibv_cq_ex *current);$/;"	m	struct:ibv_cq_ex
recv_cq	include\infiniband\verbs.h	/^	struct ibv_cq	       *recv_cq;$/;"	m	struct:ibv_qp	typeref:struct:ibv_qp::ibv_cq
recv_cq	include\infiniband\verbs.h	/^	struct ibv_cq	       *recv_cq;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:struct:ibv_qp_init_attr_ex::ibv_cq
recv_cq	include\infiniband\verbs.h	/^	struct ibv_cq	       *recv_cq;\/\/ receive CQ. this must be create by the user prior to call ib_create_qp. $/;"	m	struct:ibv_qp_init_attr	typeref:struct:ibv_qp_init_attr::ibv_cq
refcnt	include\infiniband\verbs.h	/^	int			refcnt;$/;"	m	struct:ibv_comp_channel
reg_mr	include\infiniband\verbs.h	/^	struct ibv_mr *		(*reg_mr)(struct ibv_pd *pd, void *addr, size_t length,$/;"	m	struct:ibv_context_ops	typeref:struct:ibv_context_ops::reg_mr
remote_addr	include\infiniband\verbs.h	/^			uint64_t	remote_addr;$/;"	m	struct:ibv_send_wr::__anon32::__anon33
remote_addr	include\infiniband\verbs.h	/^			uint64_t	remote_addr;$/;"	m	struct:ibv_send_wr::__anon32::__anon34
remote_qkey	include\infiniband\verbs.h	/^			uint32_t	remote_qkey;$/;"	m	struct:ibv_send_wr::__anon32::__anon35
remote_qpn	include\infiniband\verbs.h	/^			uint32_t	remote_qpn;$/;"	m	struct:ibv_send_wr::__anon32::__anon35
remote_srqn	include\infiniband\verbs.h	/^			uint32_t    remote_srqn;$/;"	m	struct:ibv_send_wr::__anon36::__anon37
req_notify_cq	include\infiniband\verbs.h	/^	int			(*req_notify_cq)(struct ibv_cq *cq, int solicited_only);$/;"	m	struct:ibv_context_ops
rereg_mr	include\infiniband\verbs.h	/^	int			(*rereg_mr)(struct ibv_mr *mr,$/;"	m	struct:ibv_context_ops
reserved	include\infiniband\verbs.h	/^	uint8_t			reserved;$/;"	m	struct:ibv_port_attr
resize_cq	include\infiniband\verbs.h	/^	int			(*resize_cq)(struct ibv_cq *cq, int cqe);$/;"	m	struct:ibv_context_ops
retry_cnt	include\infiniband\verbs.h	/^	uint8_t			retry_cnt;$/;"	m	struct:ibv_qp_attr
rkey	include\infiniband\verbs.h	/^			uint32_t		rkey;$/;"	m	struct:ibv_send_wr::__anon38::__anon39
rkey	include\infiniband\verbs.h	/^			uint32_t	rkey;$/;"	m	struct:ibv_send_wr::__anon32::__anon33
rkey	include\infiniband\verbs.h	/^			uint32_t	rkey;$/;"	m	struct:ibv_send_wr::__anon32::__anon34
rkey	include\infiniband\verbs.h	/^	uint32_t		rkey;$/;"	m	struct:ibv_mr
rkey	include\infiniband\verbs.h	/^	uint32_t		rkey;$/;"	m	struct:ibv_mw
rnr_retry	include\infiniband\verbs.h	/^	uint8_t			rnr_retry;$/;"	m	struct:ibv_qp_attr
rq_psn	include\infiniband\verbs.h	/^	uint32_t		rq_psn;$/;"	m	struct:ibv_qp_attr
rss_caps	include\infiniband\verbs.h	/^	struct ibv_rss_caps     rss_caps;$/;"	m	struct:ibv_device_attr_ex	typeref:struct:ibv_device_attr_ex::ibv_rss_caps
rwq_ind_tbl	include\infiniband\verbs.h	/^	struct ibv_rwq_ind_table       *rwq_ind_tbl;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:struct:ibv_qp_init_attr_ex::ibv_rwq_ind_table
rx_hash_conf	include\infiniband\verbs.h	/^	struct ibv_rx_hash_conf	rx_hash_conf;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:struct:ibv_qp_init_attr_ex::ibv_rx_hash_conf
rx_hash_fields_mask	include\infiniband\verbs.h	/^	uint64_t	rx_hash_fields_mask;$/;"	m	struct:ibv_rx_hash_conf
rx_hash_fields_mask	include\infiniband\verbs.h	/^	uint64_t rx_hash_fields_mask; \/* enum ibv_rx_hash_fields *\/$/;"	m	struct:ibv_rss_caps
rx_hash_function	include\infiniband\verbs.h	/^	uint8_t	rx_hash_function;$/;"	m	struct:ibv_rx_hash_conf
rx_hash_function	include\infiniband\verbs.h	/^	uint8_t  rx_hash_function; \/* enum ibv_rx_hash_function_flags *\/$/;"	m	struct:ibv_rss_caps
rx_hash_key	include\infiniband\verbs.h	/^	uint8_t	*rx_hash_key;$/;"	m	struct:ibv_rx_hash_conf
rx_hash_key_len	include\infiniband\verbs.h	/^	uint8_t	rx_hash_key_len;$/;"	m	struct:ibv_rx_hash_conf
send_cq	include\infiniband\verbs.h	/^	struct ibv_cq	       *send_cq;$/;"	m	struct:ibv_qp	typeref:struct:ibv_qp::ibv_cq
send_cq	include\infiniband\verbs.h	/^	struct ibv_cq	       *send_cq;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:struct:ibv_qp_init_attr_ex::ibv_cq
send_cq	include\infiniband\verbs.h	/^	struct ibv_cq	       *send_cq;\/\/ send CQ. this must be created by the user prior to calling ibv_create_qp$/;"	m	struct:ibv_qp_init_attr	typeref:struct:ibv_qp_init_attr::ibv_cq
send_flags	include\infiniband\verbs.h	/^	int			send_flags;$/;"	m	struct:ibv_mw_bind
send_flags	include\infiniband\verbs.h	/^	int			send_flags;$/;"	m	struct:ibv_send_wr
sg_list	include\infiniband\verbs.h	/^	struct ibv_sge	       *sg_list;$/;"	m	struct:ibv_recv_wr	typeref:struct:ibv_recv_wr::ibv_sge
sg_list	include\infiniband\verbs.h	/^	struct ibv_sge	       *sg_list;$/;"	m	struct:ibv_send_wr	typeref:struct:ibv_send_wr::ibv_sge
sgid	include\infiniband\verbs.h	/^	union ibv_gid		sgid;$/;"	m	struct:ibv_grh	typeref:union:ibv_grh::ibv_gid
sgid_index	include\infiniband\verbs.h	/^	uint8_t			sgid_index;$/;"	m	struct:ibv_global_route
size	include\infiniband\verbs.h	/^			uint16_t		size;$/;"	m	struct:ibv_flow_spec::__anon41::__anon42
size	include\infiniband\verbs.h	/^	uint16_t  size;$/;"	m	struct:ibv_flow_spec_eth
size	include\infiniband\verbs.h	/^	uint16_t  size;$/;"	m	struct:ibv_flow_spec_ipv4
size	include\infiniband\verbs.h	/^	uint16_t  size;$/;"	m	struct:ibv_flow_spec_tcp_udp
size	include\infiniband\verbs.h	/^	uint16_t size;$/;"	m	struct:ibv_flow_attr
size_of_context	include\infiniband\verbs.h	/^	size_t	size_of_context;$/;"	m	struct:verbs_device
sl	include\infiniband\verbs.h	/^	uint8_t			sl;$/;"	m	struct:ibv_ah_attr
sl	include\infiniband\verbs.h	/^	uint8_t			sl;$/;"	m	struct:ibv_wc
slid	include\infiniband\verbs.h	/^	uint16_t		slid;$/;"	m	struct:ibv_wc
sm_lid	include\infiniband\verbs.h	/^	uint16_t		sm_lid;$/;"	m	struct:ibv_port_attr
sm_sl	include\infiniband\verbs.h	/^	uint8_t			sm_sl;$/;"	m	struct:ibv_port_attr
sq_draining	include\infiniband\verbs.h	/^	uint8_t			sq_draining;$/;"	m	struct:ibv_qp_attr
sq_psn	include\infiniband\verbs.h	/^	uint32_t		sq_psn;$/;"	m	struct:ibv_qp_attr
sq_sig_all	include\infiniband\verbs.h	/^	int			sq_sig_all;$/;"	m	struct:ibv_qp_init_attr_ex
sq_sig_all	include\infiniband\verbs.h	/^	int			sq_sig_all;\/\/if this value is set to 1, all send requests will generate completion queue events. $/;"	m	struct:ibv_qp_init_attr
src_ip	include\infiniband\verbs.h	/^	uint32_t src_ip;$/;"	m	struct:ibv_flow_ipv4_filter
src_mac	include\infiniband\verbs.h	/^	uint8_t		src_mac[6];$/;"	m	struct:ibv_flow_eth_filter
src_path_bits	include\infiniband\verbs.h	/^	uint8_t			src_path_bits;$/;"	m	struct:ibv_ah_attr
src_port	include\infiniband\verbs.h	/^	uint16_t src_port;$/;"	m	struct:ibv_flow_tcp_udp_filter
src_qp	include\infiniband\verbs.h	/^	uint32_t		src_qp;$/;"	m	struct:ibv_wc
srq	include\infiniband\verbs.h	/^		struct ibv_srq *srq;$/;"	m	union:ibv_async_event::__anon28	typeref:struct:ibv_async_event::__anon28::ibv_srq
srq	include\infiniband\verbs.h	/^	struct ibv_srq	       *srq;$/;"	m	struct:ibv_qp	typeref:struct:ibv_qp::ibv_srq
srq	include\infiniband\verbs.h	/^	struct ibv_srq	       *srq;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:struct:ibv_qp_init_attr_ex::ibv_srq
srq	include\infiniband\verbs.h	/^	struct ibv_srq	       *srq;\/\/ (optional) shated receive queue. only used for SRQ QP's$/;"	m	struct:ibv_qp_init_attr	typeref:struct:ibv_qp_init_attr::ibv_srq
srq_context	include\infiniband\verbs.h	/^	void		       *srq_context;$/;"	m	struct:ibv_srq
srq_context	include\infiniband\verbs.h	/^	void		       *srq_context;$/;"	m	struct:ibv_srq_init_attr
srq_context	include\infiniband\verbs.h	/^	void		       *srq_context;$/;"	m	struct:ibv_srq_init_attr_ex
srq_limit	include\infiniband\verbs.h	/^	uint32_t		srq_limit;$/;"	m	struct:ibv_srq_attr
srq_type	include\infiniband\verbs.h	/^	enum ibv_srq_type	srq_type;$/;"	m	struct:ibv_srq_init_attr_ex	typeref:enum:ibv_srq_init_attr_ex::ibv_srq_type
start_poll	include\infiniband\verbs.h	/^	int (*start_poll)(struct ibv_cq_ex *current,$/;"	m	struct:ibv_cq_ex
state	include\infiniband\verbs.h	/^	enum ibv_port_state	state;$/;"	m	struct:ibv_port_attr	typeref:enum:ibv_port_attr::ibv_port_state
state	include\infiniband\verbs.h	/^	enum ibv_qp_state       state;$/;"	m	struct:ibv_qp	typeref:enum:ibv_qp::ibv_qp_state
state	include\infiniband\verbs.h	/^	enum ibv_wq_state       state;$/;"	m	struct:ibv_wq	typeref:enum:ibv_wq::ibv_wq_state
static_rate	include\infiniband\verbs.h	/^	uint8_t			static_rate;$/;"	m	struct:ibv_ah_attr
status	include\infiniband\verbs.h	/^	enum ibv_wc_status	status;$/;"	m	struct:ibv_wc	typeref:enum:ibv_wc::ibv_wc_status
status	include\infiniband\verbs.h	/^	enum ibv_wc_status status;$/;"	m	struct:ibv_cq_ex	typeref:enum:ibv_cq_ex::ibv_wc_status
subnet_prefix	include\infiniband\verbs.h	/^		uint64_t	subnet_prefix;$/;"	m	struct:ibv_gid::__anon25
subnet_timeout	include\infiniband\verbs.h	/^	uint8_t			subnet_timeout;$/;"	m	struct:ibv_port_attr
supported_qpts	include\infiniband\verbs.h	/^	uint32_t supported_qpts;$/;"	m	struct:ibv_rss_caps
supported_qpts	include\infiniband\verbs.h	/^	uint32_t supported_qpts;$/;"	m	struct:ibv_tso_caps
swap	include\infiniband\verbs.h	/^			uint64_t	swap;$/;"	m	struct:ibv_send_wr::__anon32::__anon34
sys_image_guid	include\infiniband\verbs.h	/^	uint64_t		sys_image_guid;\/\/system image guid$/;"	m	struct:ibv_device_attr
sz	include\infiniband\verbs.h	/^	size_t	sz;$/;"	m	struct:verbs_device
sz	include\infiniband\verbs.h	/^	size_t   sz;			\/* Must be immediately before struct ibv_context *\/$/;"	m	struct:verbs_context
tcp_udp	include\infiniband\verbs.h	/^		struct ibv_flow_spec_tcp_udp tcp_udp;$/;"	m	union:ibv_flow_spec::__anon41	typeref:struct:ibv_flow_spec::__anon41::ibv_flow_spec_tcp_udp
timeout	include\infiniband\verbs.h	/^	uint8_t			timeout;$/;"	m	struct:ibv_qp_attr
traffic_class	include\infiniband\verbs.h	/^	uint8_t			traffic_class;$/;"	m	struct:ibv_global_route
transport_type	include\infiniband\verbs.h	/^	enum ibv_transport_type	transport_type; \/\/ IBV_TRANSPORT_UNKNOWN, IBV_TRANSPORT_IB, IBV_TRANSPORT_IWARP$/;"	m	struct:ibv_device	typeref:enum:ibv_device::ibv_transport_type
tso	include\infiniband\verbs.h	/^		} tso;$/;"	m	union:ibv_send_wr::__anon38	typeref:struct:ibv_send_wr::__anon38::__anon40
tso_caps	include\infiniband\verbs.h	/^	struct ibv_tso_caps	tso_caps;$/;"	m	struct:ibv_device_attr_ex	typeref:struct:ibv_device_attr_ex::ibv_tso_caps
type	include\infiniband\verbs.h	/^			enum ibv_flow_spec_type	type;$/;"	m	struct:ibv_flow_spec::__anon41::__anon42	typeref:enum:ibv_flow_spec::__anon41::__anon42::ibv_flow_spec_type
type	include\infiniband\verbs.h	/^	enum ibv_flow_attr_type type;$/;"	m	struct:ibv_flow_attr	typeref:enum:ibv_flow_attr::ibv_flow_attr_type
type	include\infiniband\verbs.h	/^	enum ibv_flow_spec_type  type;$/;"	m	struct:ibv_flow_spec_eth	typeref:enum:ibv_flow_spec_eth::ibv_flow_spec_type
type	include\infiniband\verbs.h	/^	enum ibv_flow_spec_type  type;$/;"	m	struct:ibv_flow_spec_ipv4	typeref:enum:ibv_flow_spec_ipv4::ibv_flow_spec_type
type	include\infiniband\verbs.h	/^	enum ibv_flow_spec_type  type;$/;"	m	struct:ibv_flow_spec_tcp_udp	typeref:enum:ibv_flow_spec_tcp_udp::ibv_flow_spec_type
type	include\infiniband\verbs.h	/^	enum ibv_mw_type	type;$/;"	m	struct:ibv_mw	typeref:enum:ibv_mw::ibv_mw_type
uc_odp_caps	include\infiniband\verbs.h	/^		uint32_t uc_odp_caps;$/;"	m	struct:ibv_odp_caps::__anon26
ud	include\infiniband\verbs.h	/^		} ud;$/;"	m	union:ibv_send_wr::__anon32	typeref:struct:ibv_send_wr::__anon32::__anon35
ud_odp_caps	include\infiniband\verbs.h	/^		uint32_t ud_odp_caps;$/;"	m	struct:ibv_odp_caps::__anon26
uninit_context	include\infiniband\verbs.h	/^	void	(*uninit_context)(struct verbs_device *device,$/;"	m	struct:verbs_device
val	include\infiniband\verbs.h	/^	struct ibv_flow_eth_filter val;$/;"	m	struct:ibv_flow_spec_eth	typeref:struct:ibv_flow_spec_eth::ibv_flow_eth_filter
val	include\infiniband\verbs.h	/^	struct ibv_flow_ipv4_filter val;$/;"	m	struct:ibv_flow_spec_ipv4	typeref:struct:ibv_flow_spec_ipv4::ibv_flow_ipv4_filter
val	include\infiniband\verbs.h	/^	struct ibv_flow_tcp_udp_filter val;$/;"	m	struct:ibv_flow_spec_tcp_udp	typeref:struct:ibv_flow_spec_tcp_udp::ibv_flow_tcp_udp_filter
vendor_err	include\infiniband\verbs.h	/^	uint32_t		vendor_err;$/;"	m	struct:ibv_wc
vendor_id	include\infiniband\verbs.h	/^	uint32_t		vendor_id;\/\/ vendor id ,per ieee$/;"	m	struct:ibv_device_attr
vendor_part_id	include\infiniband\verbs.h	/^	uint32_t		vendor_part_id;\/\/vendor supplied part id$/;"	m	struct:ibv_device_attr
verbs_context	include\infiniband\verbs.h	/^struct verbs_context {$/;"	s
verbs_context_mask	include\infiniband\verbs.h	/^enum verbs_context_mask {$/;"	g
verbs_device	include\infiniband\verbs.h	/^struct verbs_device {$/;"	s
verbs_get_ctx	include\infiniband\verbs.h	/^static inline struct verbs_context *verbs_get_ctx(struct ibv_context *ctx)$/;"	f
verbs_get_ctx_op	include\infiniband\verbs.h	1462;"	d
verbs_get_device	include\infiniband\verbs.h	/^static inline struct verbs_device *verbs_get_device($/;"	f
verbs_set_ctx_op	include\infiniband\verbs.h	1467;"	d
version_tclass_flow	include\infiniband\verbs.h	/^	uint32_t		version_tclass_flow;$/;"	m	struct:ibv_grh
vext_field_avail	include\infiniband\verbs.h	81;"	d
vlan_tag	include\infiniband\verbs.h	/^	uint16_t	vlan_tag;$/;"	m	struct:ibv_flow_eth_filter
wc_flags	include\infiniband\verbs.h	/^	int			wc_flags;$/;"	m	struct:ibv_wc
wc_flags	include\infiniband\verbs.h	/^	uint64_t		wc_flags;$/;"	m	struct:ibv_cq_init_attr_ex
wq	include\infiniband\verbs.h	/^		struct ibv_wq  *wq;$/;"	m	union:ibv_async_event::__anon28	typeref:struct:ibv_async_event::__anon28::ibv_wq
wq_context	include\infiniband\verbs.h	/^	void		       *wq_context;$/;"	m	struct:ibv_wq
wq_context	include\infiniband\verbs.h	/^	void		       *wq_context;$/;"	m	struct:ibv_wq_init_attr
wq_num	include\infiniband\verbs.h	/^	uint32_t		wq_num;$/;"	m	struct:ibv_wq
wq_state	include\infiniband\verbs.h	/^	enum	ibv_wq_state	wq_state;$/;"	m	struct:ibv_wq_attr	typeref:enum:ibv_wq_attr::ibv_wq_state
wq_type	include\infiniband\verbs.h	/^	enum ibv_wq_type	wq_type;$/;"	m	struct:ibv_wq	typeref:enum:ibv_wq::ibv_wq_type
wq_type	include\infiniband\verbs.h	/^	enum ibv_wq_type	wq_type;$/;"	m	struct:ibv_wq_init_attr	typeref:enum:ibv_wq_init_attr::ibv_wq_type
wr	include\infiniband\verbs.h	/^	} wr;$/;"	m	struct:ibv_send_wr	typeref:union:ibv_send_wr::__anon32
wr_id	include\infiniband\verbs.h	/^	uint64_t		wr_id;$/;"	m	struct:ibv_mw_bind
wr_id	include\infiniband\verbs.h	/^	uint64_t		wr_id;$/;"	m	struct:ibv_recv_wr
wr_id	include\infiniband\verbs.h	/^	uint64_t		wr_id;$/;"	m	struct:ibv_send_wr
wr_id	include\infiniband\verbs.h	/^	uint64_t		wr_id;$/;"	m	struct:ibv_wc
wr_id	include\infiniband\verbs.h	/^	uint64_t wr_id;$/;"	m	struct:ibv_cq_ex
xrc	include\infiniband\verbs.h	/^		} xrc;$/;"	m	union:ibv_send_wr::__anon36	typeref:struct:ibv_send_wr::__anon36::__anon37
xrcd	include\infiniband\verbs.h	/^	struct ibv_xrcd	       *xrcd;$/;"	m	struct:ibv_qp_init_attr_ex	typeref:struct:ibv_qp_init_attr_ex::ibv_xrcd
xrcd	include\infiniband\verbs.h	/^	struct ibv_xrcd	       *xrcd;$/;"	m	struct:ibv_srq_init_attr_ex	typeref:struct:ibv_srq_init_attr_ex::ibv_xrcd
xrcd	include\infiniband\verbs.h	/^	struct ibv_xrcd        *xrcd;$/;"	m	struct:ibv_qp_open_attr	typeref:struct:ibv_qp_open_attr::ibv_xrcd
RAI_FAMILY	include\rdma\rdma_cma.h	282;"	d
RAI_NOROUTE	include\rdma\rdma_cma.h	281;"	d
RAI_NUMERICHOST	include\rdma\rdma_cma.h	280;"	d
RAI_PASSIVE	include\rdma\rdma_cma.h	279;"	d
RDMA_CMA_H	include\rdma\rdma_cma.h	35;"	d
RDMA_CM_EVENT_ADDR_CHANGE	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_ADDR_CHANGE,$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_ADDR_ERROR	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_ADDR_ERROR, \/\/Address resolution (rdma_resolve_addr) failed.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_ADDR_RESOLVED	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_ADDR_RESOLVED, \/\/Address resolution (rdma_resolve_addr) completed successfully.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_CONNECT_ERROR	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_CONNECT_ERROR,\/\/Indicates that an error has occurred trying to establish or a connection. May be generated on the$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_CONNECT_REQUEST	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_CONNECT_REQUEST,\/\/Generated on the passive side to notify the user of a new connection request.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_CONNECT_RESPONSE	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_CONNECT_RESPONSE,\/\/Generated on the active side to notify the user of a successful response to a connection request. It$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_DEVICE_REMOVAL	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_DEVICE_REMOVAL,\/\/The local RDMA device associated with the rdma_cm_id has been removed. Upon receiving this$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_DISCONNECTED	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_DISCONNECTED,\/\/The connection has been disconnected.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_ESTABLISHED	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_ESTABLISHED,\/\/Indicates that a connection has been established with the remote end point.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_MULTICAST_ERROR	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_MULTICAST_ERROR,$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_MULTICAST_JOIN	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_MULTICAST_JOIN,\/\/The multicast join operation (rdma_join_multicast) completed successfully.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_REJECTED	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_REJECTED,\/\/Indicates that a connection request or response was rejected by the remote end point.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_ROUTE_ERROR	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_ROUTE_ERROR,\/\/Route resolution (rdma_resolve_route) failed.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_ROUTE_RESOLVED	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_ROUTE_RESOLVED,\/\/Route resolution (rdma_resolve_route) completed successfully.$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_TIMEWAIT_EXIT	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_TIMEWAIT_EXIT$/;"	e	enum:rdma_cm_event_type
RDMA_CM_EVENT_UNREACHABLE	include\rdma\rdma_cma.h	/^	RDMA_CM_EVENT_UNREACHABLE,\/\/Generated on the active side to notify the user that the remote server is not reachable or unable to$/;"	e	enum:rdma_cm_event_type
RDMA_IB_IP_PORT_MASK	include\rdma\rdma_cma.h	93;"	d
RDMA_IB_IP_PS_MASK	include\rdma\rdma_cma.h	92;"	d
RDMA_IB_IP_PS_TCP	include\rdma\rdma_cma.h	94;"	d
RDMA_IB_IP_PS_UDP	include\rdma\rdma_cma.h	95;"	d
RDMA_IB_PS_IB	include\rdma\rdma_cma.h	96;"	d
RDMA_MAX_INIT_DEPTH	include\rdma\rdma_cma.h	/^	RDMA_MAX_INIT_DEPTH = 0xFF$/;"	e	enum:__anon47
RDMA_MAX_RESP_RES	include\rdma\rdma_cma.h	/^	RDMA_MAX_RESP_RES = 0xFF,$/;"	e	enum:__anon47
RDMA_OPTION_IB	include\rdma\rdma_cma.h	/^	RDMA_OPTION_IB		= 1$/;"	e	enum:__anon49
RDMA_OPTION_IB_PATH	include\rdma\rdma_cma.h	/^	RDMA_OPTION_IB_PATH	 = 1	\/* struct ibv_path_data[] *\/$/;"	e	enum:__anon50
RDMA_OPTION_ID	include\rdma\rdma_cma.h	/^	RDMA_OPTION_ID		= 0,$/;"	e	enum:__anon49
RDMA_OPTION_ID_AFONLY	include\rdma\rdma_cma.h	/^	RDMA_OPTION_ID_AFONLY	 = 2,   \/* int: ~IPV6_V6ONLY *\/$/;"	e	enum:__anon50
RDMA_OPTION_ID_REUSEADDR	include\rdma\rdma_cma.h	/^	RDMA_OPTION_ID_REUSEADDR = 1,   \/* int: ~SO_REUSEADDR *\/$/;"	e	enum:__anon50
RDMA_OPTION_ID_TOS	include\rdma\rdma_cma.h	/^	RDMA_OPTION_ID_TOS	 = 0,	\/* uint8_t: RFC 2474 *\/$/;"	e	enum:__anon50
RDMA_PS_IB	include\rdma\rdma_cma.h	/^	RDMA_PS_IB    = 0x013F,$/;"	e	enum:rdma_port_space
RDMA_PS_IPOIB	include\rdma\rdma_cma.h	/^	RDMA_PS_IPOIB = 0x0002,$/;"	e	enum:rdma_port_space
RDMA_PS_TCP	include\rdma\rdma_cma.h	/^	RDMA_PS_TCP   = 0x0106,$/;"	e	enum:rdma_port_space
RDMA_PS_UDP	include\rdma\rdma_cma.h	/^	RDMA_PS_UDP   = 0x0111,$/;"	e	enum:rdma_port_space
RDMA_UDP_QKEY	include\rdma\rdma_cma.h	102;"	d
addr	include\rdma\rdma_cma.h	/^	struct rdma_addr	 addr;$/;"	m	struct:rdma_route	typeref:struct:rdma_route::rdma_addr
addr	include\rdma\rdma_cma.h	/^	} addr;$/;"	m	struct:rdma_addr	typeref:union:rdma_addr::__anon46
ah_attr	include\rdma\rdma_cma.h	/^	struct ibv_ah_attr ah_attr;$/;"	m	struct:rdma_ud_param	typeref:struct:rdma_ud_param::ibv_ah_attr
ai_connect	include\rdma\rdma_cma.h	/^	void			*ai_connect; \/\/ Data exchanged as part of the connection establishment process$/;"	m	struct:rdma_addrinfo
ai_connect_len	include\rdma\rdma_cma.h	/^	size_t			ai_connect_len;\/\/ Size of connection information referenced by ai_connect$/;"	m	struct:rdma_addrinfo
ai_dst_addr	include\rdma\rdma_cma.h	/^	struct sockaddr		*ai_dst_addr; \/\/ Address of destination RDMA device, if provided$/;"	m	struct:rdma_addrinfo	typeref:struct:rdma_addrinfo::sockaddr
ai_dst_canonname	include\rdma\rdma_cma.h	/^	char			*ai_dst_canonname; \/\/ The canonical for the destination$/;"	m	struct:rdma_addrinfo
ai_dst_len	include\rdma\rdma_cma.h	/^	socklen_t		ai_dst_len; \/\/ Length of the destination address referenced by ai_dst_addr$/;"	m	struct:rdma_addrinfo
ai_family	include\rdma\rdma_cma.h	/^	int			ai_family; \/\/ Address family for the source and destination address (AF_INET, AF_INET6, AF_IB)$/;"	m	struct:rdma_addrinfo
ai_flags	include\rdma\rdma_cma.h	/^	int			ai_flags; \/\/ Hint flags which control the operation. Supported flags are: RAI_PASSIVE, RAI_NUMERICHOST and RAI_NOROUTE$/;"	m	struct:rdma_addrinfo
ai_next	include\rdma\rdma_cma.h	/^	struct rdma_addrinfo	*ai_next;\/\/ Pointer to the next rdma_addrinfo structure in the list$/;"	m	struct:rdma_addrinfo	typeref:struct:rdma_addrinfo::rdma_addrinfo
ai_port_space	include\rdma\rdma_cma.h	/^	int			ai_port_space; \/\/ RDMA port space used (RDMA_PS_UDP or RDMA_PS_TCP)$/;"	m	struct:rdma_addrinfo
ai_qp_type	include\rdma\rdma_cma.h	/^	int			ai_qp_type; \/\/ The type of RDMA QP used$/;"	m	struct:rdma_addrinfo
ai_route	include\rdma\rdma_cma.h	/^	void			*ai_route; \/\/ Routing information for RDMA transports that require routing data as part of connection establishment$/;"	m	struct:rdma_addrinfo
ai_route_len	include\rdma\rdma_cma.h	/^	size_t			ai_route_len; \/\/ Size of the routing information buffer referenced by ai_route.$/;"	m	struct:rdma_addrinfo
ai_src_addr	include\rdma\rdma_cma.h	/^	struct sockaddr		*ai_src_addr; \/\/ Address of local RDMA device, if provided$/;"	m	struct:rdma_addrinfo	typeref:struct:rdma_addrinfo::sockaddr
ai_src_canonname	include\rdma\rdma_cma.h	/^	char			*ai_src_canonname; \/\/ The canonical for the source$/;"	m	struct:rdma_addrinfo
ai_src_len	include\rdma\rdma_cma.h	/^	socklen_t		ai_src_len; \/\/ Length of the source address referenced by ai_src_addr$/;"	m	struct:rdma_addrinfo
channel	include\rdma\rdma_cma.h	/^	struct rdma_event_channel *channel;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::rdma_event_channel
conn	include\rdma\rdma_cma.h	/^		struct rdma_conn_param conn;$/;"	m	union:rdma_cm_event::__anon48	typeref:struct:rdma_cm_event::__anon48::rdma_conn_param
context	include\rdma\rdma_cma.h	/^	void			*context;$/;"	m	struct:rdma_cm_id
dgid	include\rdma\rdma_cma.h	/^	union ibv_gid	dgid;$/;"	m	struct:rdma_ib_addr	typeref:union:rdma_ib_addr::ibv_gid
dst_addr	include\rdma\rdma_cma.h	/^		struct sockaddr		dst_addr;$/;"	m	union:rdma_addr::__anon45	typeref:struct:rdma_addr::__anon45::sockaddr
dst_sin	include\rdma\rdma_cma.h	/^		struct sockaddr_in	dst_sin;$/;"	m	union:rdma_addr::__anon45	typeref:struct:rdma_addr::__anon45::sockaddr_in
dst_sin6	include\rdma\rdma_cma.h	/^		struct sockaddr_in6	dst_sin6;$/;"	m	union:rdma_addr::__anon45	typeref:struct:rdma_addr::__anon45::sockaddr_in6
dst_storage	include\rdma\rdma_cma.h	/^		struct sockaddr_storage dst_storage;$/;"	m	union:rdma_addr::__anon45	typeref:struct:rdma_addr::__anon45::sockaddr_storage
event	include\rdma\rdma_cma.h	/^	enum rdma_cm_event_type	 event;$/;"	m	struct:rdma_cm_event	typeref:enum:rdma_cm_event::rdma_cm_event_type
event	include\rdma\rdma_cma.h	/^	struct rdma_cm_event	*event;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::rdma_cm_event
fd	include\rdma\rdma_cma.h	/^	int			fd;$/;"	m	struct:rdma_event_channel
flow_control	include\rdma\rdma_cma.h	/^	uint8_t flow_control;$/;"	m	struct:rdma_conn_param
ibaddr	include\rdma\rdma_cma.h	/^		struct rdma_ib_addr	ibaddr;$/;"	m	union:rdma_addr::__anon46	typeref:struct:rdma_addr::__anon46::rdma_ib_addr
id	include\rdma\rdma_cma.h	/^	struct rdma_cm_id	*id; $/;"	m	struct:rdma_cm_event	typeref:struct:rdma_cm_event::rdma_cm_id
initiator_depth	include\rdma\rdma_cma.h	/^	uint8_t initiator_depth;$/;"	m	struct:rdma_conn_param
listen_id	include\rdma\rdma_cma.h	/^	struct rdma_cm_id	*listen_id;$/;"	m	struct:rdma_cm_event	typeref:struct:rdma_cm_event::rdma_cm_id
num_paths	include\rdma\rdma_cma.h	/^	int			 num_paths;$/;"	m	struct:rdma_route
param	include\rdma\rdma_cma.h	/^	} param;$/;"	m	struct:rdma_cm_event	typeref:union:rdma_cm_event::__anon48
path_rec	include\rdma\rdma_cma.h	/^	struct ibv_sa_path_rec	*path_rec;$/;"	m	struct:rdma_route	typeref:struct:rdma_route::ibv_sa_path_rec
pd	include\rdma\rdma_cma.h	/^	struct ibv_pd		*pd;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::ibv_pd
pkey	include\rdma\rdma_cma.h	/^	uint16_t	pkey;$/;"	m	struct:rdma_ib_addr
port_num	include\rdma\rdma_cma.h	/^	uint8_t			 port_num;$/;"	m	struct:rdma_cm_id
private_data	include\rdma\rdma_cma.h	/^	const void *private_data;$/;"	m	struct:rdma_conn_param
private_data	include\rdma\rdma_cma.h	/^	const void *private_data;$/;"	m	struct:rdma_ud_param
private_data_len	include\rdma\rdma_cma.h	/^	uint8_t private_data_len;$/;"	m	struct:rdma_conn_param
private_data_len	include\rdma\rdma_cma.h	/^	uint8_t private_data_len;$/;"	m	struct:rdma_ud_param
ps	include\rdma\rdma_cma.h	/^	enum rdma_port_space	 ps;$/;"	m	struct:rdma_cm_id	typeref:enum:rdma_cm_id::rdma_port_space
qkey	include\rdma\rdma_cma.h	/^	uint32_t qkey;$/;"	m	struct:rdma_ud_param
qp	include\rdma\rdma_cma.h	/^	struct ibv_qp		*qp;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::ibv_qp
qp_num	include\rdma\rdma_cma.h	/^	uint32_t qp_num;$/;"	m	struct:rdma_ud_param
qp_num	include\rdma\rdma_cma.h	/^	uint32_t qp_num;\/\/ignored if QP created on the rdma_cm_id$/;"	m	struct:rdma_conn_param
qp_type	include\rdma\rdma_cma.h	/^	enum ibv_qp_type	qp_type;$/;"	m	struct:rdma_cm_id	typeref:enum:rdma_cm_id::ibv_qp_type
rdma_addr	include\rdma\rdma_cma.h	/^struct rdma_addr {$/;"	s
rdma_addrinfo	include\rdma\rdma_cma.h	/^struct rdma_addrinfo {$/;"	s
rdma_cm_event	include\rdma\rdma_cma.h	/^struct rdma_cm_event {$/;"	s
rdma_cm_event_type	include\rdma\rdma_cma.h	/^enum rdma_cm_event_type {$/;"	g
rdma_cm_id	include\rdma\rdma_cma.h	/^struct rdma_cm_id {$/;"	s
rdma_conn_param	include\rdma\rdma_cma.h	/^struct rdma_conn_param {$/;"	s
rdma_event_channel	include\rdma\rdma_cma.h	/^struct rdma_event_channel {$/;"	s
rdma_get_local_addr	include\rdma\rdma_cma.h	/^static inline struct sockaddr *rdma_get_local_addr(struct rdma_cm_id *id)$/;"	f
rdma_get_peer_addr	include\rdma\rdma_cma.h	/^static inline struct sockaddr *rdma_get_peer_addr(struct rdma_cm_id *id)$/;"	f
rdma_ib_addr	include\rdma\rdma_cma.h	/^struct rdma_ib_addr {$/;"	s
rdma_port_space	include\rdma\rdma_cma.h	/^enum rdma_port_space {$/;"	g
rdma_route	include\rdma\rdma_cma.h	/^struct rdma_route {$/;"	s
rdma_ud_param	include\rdma\rdma_cma.h	/^struct rdma_ud_param {$/;"	s
recv_cq	include\rdma\rdma_cma.h	/^	struct ibv_cq		*recv_cq;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::ibv_cq
recv_cq_channel	include\rdma\rdma_cma.h	/^	struct ibv_comp_channel *recv_cq_channel;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::ibv_comp_channel
responder_resources	include\rdma\rdma_cma.h	/^	uint8_t responder_resources;$/;"	m	struct:rdma_conn_param
retry_count	include\rdma\rdma_cma.h	/^	uint8_t retry_count;		\/* ignored when accepting *\/$/;"	m	struct:rdma_conn_param
rnr_retry_count	include\rdma\rdma_cma.h	/^	uint8_t rnr_retry_count;$/;"	m	struct:rdma_conn_param
route	include\rdma\rdma_cma.h	/^	struct rdma_route	 route;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::rdma_route
send_cq	include\rdma\rdma_cma.h	/^	struct ibv_cq		*send_cq;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::ibv_cq
send_cq_channel	include\rdma\rdma_cma.h	/^	struct ibv_comp_channel *send_cq_channel;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::ibv_comp_channel
sgid	include\rdma\rdma_cma.h	/^	union ibv_gid	sgid;$/;"	m	struct:rdma_ib_addr	typeref:union:rdma_ib_addr::ibv_gid
src_addr	include\rdma\rdma_cma.h	/^		struct sockaddr		src_addr;$/;"	m	union:rdma_addr::__anon44	typeref:struct:rdma_addr::__anon44::sockaddr
src_sin	include\rdma\rdma_cma.h	/^		struct sockaddr_in	src_sin;$/;"	m	union:rdma_addr::__anon44	typeref:struct:rdma_addr::__anon44::sockaddr_in
src_sin6	include\rdma\rdma_cma.h	/^		struct sockaddr_in6	src_sin6;$/;"	m	union:rdma_addr::__anon44	typeref:struct:rdma_addr::__anon44::sockaddr_in6
src_storage	include\rdma\rdma_cma.h	/^		struct sockaddr_storage src_storage;$/;"	m	union:rdma_addr::__anon44	typeref:struct:rdma_addr::__anon44::sockaddr_storage
srq	include\rdma\rdma_cma.h	/^	struct ibv_srq		*srq;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::ibv_srq
srq	include\rdma\rdma_cma.h	/^	uint8_t srq; \/\/shared receive queue , ignored if QP created on the rdma_cm_id$/;"	m	struct:rdma_conn_param
status	include\rdma\rdma_cma.h	/^	int			 status;$/;"	m	struct:rdma_cm_event
ud	include\rdma\rdma_cma.h	/^		struct rdma_ud_param   ud;$/;"	m	union:rdma_cm_event::__anon48	typeref:struct:rdma_cm_event::__anon48::rdma_ud_param
verbs	include\rdma\rdma_cma.h	/^	struct ibv_context	*verbs;$/;"	m	struct:rdma_cm_id	typeref:struct:rdma_cm_id::ibv_context
RDMA_CMA_ABI_H	include\rdma\rdma_cma_abi.h	34;"	d
RDMA_MAX_PRIVATE_DATA	include\rdma\rdma_cma_abi.h	47;"	d
RDMA_USER_CM_MAX_ABI_VERSION	include\rdma\rdma_cma_abi.h	45;"	d
RDMA_USER_CM_MIN_ABI_VERSION	include\rdma\rdma_cma_abi.h	44;"	d
UCMA_CMD_ACCEPT	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_ACCEPT,$/;"	e	enum:__anon51
UCMA_CMD_BIND	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_BIND,$/;"	e	enum:__anon51
UCMA_CMD_BIND_IP	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_BIND_IP,$/;"	e	enum:__anon51
UCMA_CMD_CONNECT	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_CONNECT,$/;"	e	enum:__anon51
UCMA_CMD_CREATE_ID	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_CREATE_ID,$/;"	e	enum:__anon51
UCMA_CMD_DESTROY_ID	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_DESTROY_ID,$/;"	e	enum:__anon51
UCMA_CMD_DISCONNECT	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_DISCONNECT,$/;"	e	enum:__anon51
UCMA_CMD_GET_EVENT	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_GET_EVENT,$/;"	e	enum:__anon51
UCMA_CMD_GET_OPTION	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_GET_OPTION,$/;"	e	enum:__anon51
UCMA_CMD_INIT_QP_ATTR	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_INIT_QP_ATTR,$/;"	e	enum:__anon51
UCMA_CMD_JOIN_IP_MCAST	include\rdma\rdma_cma_abi.h	/^ 	UCMA_CMD_JOIN_IP_MCAST,$/;"	e	enum:__anon51
UCMA_CMD_JOIN_MCAST	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_JOIN_MCAST$/;"	e	enum:__anon51
UCMA_CMD_LEAVE_MCAST	include\rdma\rdma_cma_abi.h	/^ 	UCMA_CMD_LEAVE_MCAST,$/;"	e	enum:__anon51
UCMA_CMD_LISTEN	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_LISTEN,$/;"	e	enum:__anon51
UCMA_CMD_MIGRATE_ID	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_MIGRATE_ID,$/;"	e	enum:__anon51
UCMA_CMD_NOTIFY	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_NOTIFY,$/;"	e	enum:__anon51
UCMA_CMD_QUERY	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_QUERY,$/;"	e	enum:__anon51
UCMA_CMD_QUERY_ROUTE	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_QUERY_ROUTE,$/;"	e	enum:__anon51
UCMA_CMD_REJECT	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_REJECT,$/;"	e	enum:__anon51
UCMA_CMD_RESOLVE_ADDR	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_RESOLVE_ADDR,$/;"	e	enum:__anon51
UCMA_CMD_RESOLVE_IP	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_RESOLVE_IP,$/;"	e	enum:__anon51
UCMA_CMD_RESOLVE_ROUTE	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_RESOLVE_ROUTE,$/;"	e	enum:__anon51
UCMA_CMD_SET_OPTION	include\rdma\rdma_cma_abi.h	/^	UCMA_CMD_SET_OPTION,$/;"	e	enum:__anon51
UCMA_QUERY_ADDR	include\rdma\rdma_cma_abi.h	/^	UCMA_QUERY_ADDR,$/;"	e	enum:__anon52
UCMA_QUERY_GID	include\rdma\rdma_cma_abi.h	/^	UCMA_QUERY_GID$/;"	e	enum:__anon52
UCMA_QUERY_PATH	include\rdma\rdma_cma_abi.h	/^	UCMA_QUERY_PATH,$/;"	e	enum:__anon52
addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_in6 addr;$/;"	m	struct:ucma_abi_bind_ip	typeref:struct:ucma_abi_bind_ip::sockaddr_in6
addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_in6 addr;$/;"	m	struct:ucma_abi_join_ip_mcast	typeref:struct:ucma_abi_join_ip_mcast::sockaddr_in6
addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_storage addr;$/;"	m	struct:ucma_abi_bind	typeref:struct:ucma_abi_bind::sockaddr_storage
addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_storage addr;$/;"	m	struct:ucma_abi_join_mcast	typeref:struct:ucma_abi_join_mcast::sockaddr_storage
addr_size	include\rdma\rdma_cma_abi.h	/^	__u16 addr_size;$/;"	m	struct:ucma_abi_bind
addr_size	include\rdma\rdma_cma_abi.h	/^	__u16 addr_size;$/;"	m	struct:ucma_abi_join_mcast
ah_attr	include\rdma\rdma_cma_abi.h	/^	struct ibv_kern_ah_attr ah_attr;$/;"	m	struct:ucma_abi_ud_param	typeref:struct:ucma_abi_ud_param::ibv_kern_ah_attr
backlog	include\rdma\rdma_cma_abi.h	/^	__u32 backlog;$/;"	m	struct:ucma_abi_listen
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_accept
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_bind
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_bind_ip
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_cmd_hdr
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_connect
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_create_id
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_destroy_id
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_disconnect
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_get_event
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_init_qp_attr
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_join_ip_mcast
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_join_mcast
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_listen
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_migrate_id
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_notify
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_query
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_reject
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_resolve_addr
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_resolve_ip
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_resolve_route
cmd	include\rdma\rdma_cma_abi.h	/^	__u32 cmd;$/;"	m	struct:ucma_abi_set_option
conn	include\rdma\rdma_cma_abi.h	/^		struct ucma_abi_conn_param conn;$/;"	m	union:ucma_abi_event_resp::__anon53	typeref:struct:ucma_abi_event_resp::__anon53::ucma_abi_conn_param
conn_param	include\rdma\rdma_cma_abi.h	/^	struct ucma_abi_conn_param conn_param;$/;"	m	struct:ucma_abi_accept	typeref:struct:ucma_abi_accept::ucma_abi_conn_param
conn_param	include\rdma\rdma_cma_abi.h	/^	struct ucma_abi_conn_param conn_param;$/;"	m	struct:ucma_abi_connect	typeref:struct:ucma_abi_connect::ucma_abi_conn_param
dst_addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_in6 dst_addr;$/;"	m	struct:ucma_abi_query_route_resp	typeref:struct:ucma_abi_query_route_resp::sockaddr_in6
dst_addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_in6 dst_addr;$/;"	m	struct:ucma_abi_resolve_ip	typeref:struct:ucma_abi_resolve_ip::sockaddr_in6
dst_addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_storage dst_addr;$/;"	m	struct:ucma_abi_query_addr_resp	typeref:struct:ucma_abi_query_addr_resp::sockaddr_storage
dst_addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_storage dst_addr;$/;"	m	struct:ucma_abi_resolve_addr	typeref:struct:ucma_abi_resolve_addr::sockaddr_storage
dst_size	include\rdma\rdma_cma_abi.h	/^	__u16 dst_size;$/;"	m	struct:ucma_abi_query_addr_resp
dst_size	include\rdma\rdma_cma_abi.h	/^	__u16 dst_size;$/;"	m	struct:ucma_abi_resolve_addr
event	include\rdma\rdma_cma_abi.h	/^	__u32 event;$/;"	m	struct:ucma_abi_event_resp
event	include\rdma\rdma_cma_abi.h	/^	__u32 event;$/;"	m	struct:ucma_abi_notify
events_reported	include\rdma\rdma_cma_abi.h	/^	__u32 events_reported;$/;"	m	struct:ucma_abi_destroy_id_resp
events_reported	include\rdma\rdma_cma_abi.h	/^	__u32 events_reported;$/;"	m	struct:ucma_abi_migrate_resp
fd	include\rdma\rdma_cma_abi.h	/^	__u32 fd;$/;"	m	struct:ucma_abi_migrate_id
flow_control	include\rdma\rdma_cma_abi.h	/^	__u8  flow_control;$/;"	m	struct:ucma_abi_conn_param
ib_route	include\rdma\rdma_cma_abi.h	/^	struct ibv_kern_path_rec ib_route[2];$/;"	m	struct:ucma_abi_query_route_resp	typeref:struct:ucma_abi_query_route_resp::ibv_kern_path_rec
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_accept
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_bind
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_bind_ip
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_connect
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_create_id_resp
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_destroy_id
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_disconnect
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_event_resp
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_init_qp_attr
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_join_ip_mcast
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_join_mcast
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_listen
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_migrate_id
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_notify
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_query
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_reject
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_resolve_addr
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_resolve_ip
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_resolve_route
id	include\rdma\rdma_cma_abi.h	/^	__u32 id;$/;"	m	struct:ucma_abi_set_option
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_accept
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_bind
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_bind_ip
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_cmd_hdr
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_connect
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_create_id
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_destroy_id
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_disconnect
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_get_event
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_init_qp_attr
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_join_ip_mcast
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_join_mcast
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_listen
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_migrate_id
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_notify
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_query
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_reject
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_resolve_addr
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_resolve_ip
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_resolve_route
in	include\rdma\rdma_cma_abi.h	/^	__u16 in;$/;"	m	struct:ucma_abi_set_option
initiator_depth	include\rdma\rdma_cma_abi.h	/^	__u8  initiator_depth;$/;"	m	struct:ucma_abi_conn_param
level	include\rdma\rdma_cma_abi.h	/^	__u32 level;$/;"	m	struct:ucma_abi_set_option
node_guid	include\rdma\rdma_cma_abi.h	/^	__u64 node_guid;$/;"	m	struct:ucma_abi_query_addr_resp
node_guid	include\rdma\rdma_cma_abi.h	/^	__u64 node_guid;$/;"	m	struct:ucma_abi_query_route_resp
num_paths	include\rdma\rdma_cma_abi.h	/^	__u32 num_paths;$/;"	m	struct:ucma_abi_query_path_resp
num_paths	include\rdma\rdma_cma_abi.h	/^	__u32 num_paths;$/;"	m	struct:ucma_abi_query_route_resp
option	include\rdma\rdma_cma_abi.h	/^	__u32 option;$/;"	m	struct:ucma_abi_query
optlen	include\rdma\rdma_cma_abi.h	/^	__u32 optlen;$/;"	m	struct:ucma_abi_set_option
optname	include\rdma\rdma_cma_abi.h	/^	__u32 optname;$/;"	m	struct:ucma_abi_set_option
optval	include\rdma\rdma_cma_abi.h	/^	__u64 optval;$/;"	m	struct:ucma_abi_set_option
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_accept
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_bind
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_bind_ip
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_cmd_hdr
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_connect
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_create_id
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_destroy_id
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_disconnect
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_get_event
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_init_qp_attr
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_join_ip_mcast
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_join_mcast
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_listen
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_migrate_id
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_notify
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_query
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_reject
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_resolve_addr
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_resolve_ip
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_resolve_route
out	include\rdma\rdma_cma_abi.h	/^	__u16 out;$/;"	m	struct:ucma_abi_set_option
param	include\rdma\rdma_cma_abi.h	/^	} param;$/;"	m	struct:ucma_abi_event_resp	typeref:union:ucma_abi_event_resp::__anon53
path_data	include\rdma\rdma_cma_abi.h	/^	struct ibv_path_data path_data[0];$/;"	m	struct:ucma_abi_query_path_resp	typeref:struct:ucma_abi_query_path_resp::ibv_path_data
pkey	include\rdma\rdma_cma_abi.h	/^	__u16 pkey;$/;"	m	struct:ucma_abi_query_addr_resp
port_num	include\rdma\rdma_cma_abi.h	/^	__u8  port_num;$/;"	m	struct:ucma_abi_query_addr_resp
port_num	include\rdma\rdma_cma_abi.h	/^	__u8 port_num;$/;"	m	struct:ucma_abi_query_route_resp
private_data	include\rdma\rdma_cma_abi.h	/^	__u8  private_data[RDMA_MAX_PRIVATE_DATA];$/;"	m	struct:ucma_abi_conn_param
private_data	include\rdma\rdma_cma_abi.h	/^	__u8  private_data[RDMA_MAX_PRIVATE_DATA];$/;"	m	struct:ucma_abi_reject
private_data	include\rdma\rdma_cma_abi.h	/^	__u8 private_data[RDMA_MAX_PRIVATE_DATA];$/;"	m	struct:ucma_abi_ud_param
private_data_len	include\rdma\rdma_cma_abi.h	/^	__u8  private_data_len;$/;"	m	struct:ucma_abi_conn_param
private_data_len	include\rdma\rdma_cma_abi.h	/^	__u8  private_data_len;$/;"	m	struct:ucma_abi_reject
private_data_len	include\rdma\rdma_cma_abi.h	/^	__u8 private_data_len;$/;"	m	struct:ucma_abi_ud_param
ps	include\rdma\rdma_cma_abi.h	/^	__u16 ps;$/;"	m	struct:ucma_abi_create_id
qkey	include\rdma\rdma_cma_abi.h	/^	__u32 qkey;$/;"	m	struct:ucma_abi_ud_param
qp_num	include\rdma\rdma_cma_abi.h	/^	__u32 qp_num;$/;"	m	struct:ucma_abi_conn_param
qp_num	include\rdma\rdma_cma_abi.h	/^	__u32 qp_num;$/;"	m	struct:ucma_abi_ud_param
qp_state	include\rdma\rdma_cma_abi.h	/^	__u32 qp_state;$/;"	m	struct:ucma_abi_init_qp_attr
qp_type	include\rdma\rdma_cma_abi.h	/^	__u8  qp_type;$/;"	m	struct:ucma_abi_create_id
reserved	include\rdma\rdma_cma_abi.h	/^	__u16 reserved;$/;"	m	struct:ucma_abi_bind
reserved	include\rdma\rdma_cma_abi.h	/^	__u16 reserved;$/;"	m	struct:ucma_abi_join_mcast
reserved	include\rdma\rdma_cma_abi.h	/^	__u32 reserved;$/;"	m	struct:ucma_abi_accept
reserved	include\rdma\rdma_cma_abi.h	/^	__u32 reserved;$/;"	m	struct:ucma_abi_conn_param
reserved	include\rdma\rdma_cma_abi.h	/^	__u32 reserved;$/;"	m	struct:ucma_abi_connect
reserved	include\rdma\rdma_cma_abi.h	/^	__u32 reserved;$/;"	m	struct:ucma_abi_destroy_id
reserved	include\rdma\rdma_cma_abi.h	/^	__u32 reserved;$/;"	m	struct:ucma_abi_query_path_resp
reserved	include\rdma\rdma_cma_abi.h	/^	__u32 reserved;$/;"	m	struct:ucma_abi_resolve_addr
reserved	include\rdma\rdma_cma_abi.h	/^	__u8  reserved;$/;"	m	struct:ucma_abi_query_addr_resp
reserved	include\rdma\rdma_cma_abi.h	/^	__u8  reserved[3];$/;"	m	struct:ucma_abi_reject
reserved	include\rdma\rdma_cma_abi.h	/^	__u8  reserved[5];$/;"	m	struct:ucma_abi_create_id
reserved	include\rdma\rdma_cma_abi.h	/^	__u8 reserved[3];$/;"	m	struct:ucma_abi_query_route_resp
reserved	include\rdma\rdma_cma_abi.h	/^	__u8 reserved[7];$/;"	m	struct:ucma_abi_ud_param
reserved2	include\rdma\rdma_cma_abi.h	/^	__u8 reserved2[4];  \/* Round to 8-byte boundary to support 32\/64 *\/$/;"	m	struct:ucma_abi_ud_param
responder_resources	include\rdma\rdma_cma_abi.h	/^	__u8  responder_resources;$/;"	m	struct:ucma_abi_conn_param
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;		\/* rdma_ucma_create_id_resp *\/$/;"	m	struct:ucma_abi_join_mcast
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;		\/* ucma_abi_create_id_resp *\/$/;"	m	struct:ucma_abi_join_ip_mcast
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;$/;"	m	struct:ucma_abi_bind_ip
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;$/;"	m	struct:ucma_abi_create_id
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;$/;"	m	struct:ucma_abi_destroy_id
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;$/;"	m	struct:ucma_abi_get_event
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;$/;"	m	struct:ucma_abi_init_qp_attr
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;$/;"	m	struct:ucma_abi_migrate_id
response	include\rdma\rdma_cma_abi.h	/^	__u64 response;$/;"	m	struct:ucma_abi_query
retry_count	include\rdma\rdma_cma_abi.h	/^	__u8  retry_count;$/;"	m	struct:ucma_abi_conn_param
rnr_retry_count	include\rdma\rdma_cma_abi.h	/^	__u8  rnr_retry_count;$/;"	m	struct:ucma_abi_conn_param
src_addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_in6 src_addr;$/;"	m	struct:ucma_abi_query_route_resp	typeref:struct:ucma_abi_query_route_resp::sockaddr_in6
src_addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_in6 src_addr;$/;"	m	struct:ucma_abi_resolve_ip	typeref:struct:ucma_abi_resolve_ip::sockaddr_in6
src_addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_storage src_addr;$/;"	m	struct:ucma_abi_query_addr_resp	typeref:struct:ucma_abi_query_addr_resp::sockaddr_storage
src_addr	include\rdma\rdma_cma_abi.h	/^	struct sockaddr_storage src_addr;$/;"	m	struct:ucma_abi_resolve_addr	typeref:struct:ucma_abi_resolve_addr::sockaddr_storage
src_size	include\rdma\rdma_cma_abi.h	/^	__u16 src_size;$/;"	m	struct:ucma_abi_query_addr_resp
src_size	include\rdma\rdma_cma_abi.h	/^	__u16 src_size;$/;"	m	struct:ucma_abi_resolve_addr
srq	include\rdma\rdma_cma_abi.h	/^	__u8  srq;$/;"	m	struct:ucma_abi_conn_param
status	include\rdma\rdma_cma_abi.h	/^	__u32 status;$/;"	m	struct:ucma_abi_event_resp
timeout_ms	include\rdma\rdma_cma_abi.h	/^	__u32 timeout_ms;$/;"	m	struct:ucma_abi_resolve_addr
timeout_ms	include\rdma\rdma_cma_abi.h	/^	__u32 timeout_ms;$/;"	m	struct:ucma_abi_resolve_ip
timeout_ms	include\rdma\rdma_cma_abi.h	/^	__u32 timeout_ms;$/;"	m	struct:ucma_abi_resolve_route
ucma_abi_accept	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_accept {$/;"	s
ucma_abi_bind	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_bind {$/;"	s
ucma_abi_bind_ip	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_bind_ip {$/;"	s
ucma_abi_cmd_hdr	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_cmd_hdr {$/;"	s
ucma_abi_conn_param	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_conn_param {$/;"	s
ucma_abi_connect	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_connect {$/;"	s
ucma_abi_create_id	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_create_id {$/;"	s
ucma_abi_create_id_resp	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_create_id_resp {$/;"	s
ucma_abi_destroy_id	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_destroy_id {$/;"	s
ucma_abi_destroy_id_resp	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_destroy_id_resp {$/;"	s
ucma_abi_disconnect	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_disconnect {$/;"	s
ucma_abi_event_resp	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_event_resp {$/;"	s
ucma_abi_get_event	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_get_event {$/;"	s
ucma_abi_init_qp_attr	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_init_qp_attr {$/;"	s
ucma_abi_join_ip_mcast	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_join_ip_mcast {$/;"	s
ucma_abi_join_mcast	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_join_mcast {$/;"	s
ucma_abi_listen	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_listen {$/;"	s
ucma_abi_migrate_id	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_migrate_id {$/;"	s
ucma_abi_migrate_resp	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_migrate_resp {$/;"	s
ucma_abi_notify	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_notify {$/;"	s
ucma_abi_query	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_query {$/;"	s
ucma_abi_query_addr_resp	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_query_addr_resp {$/;"	s
ucma_abi_query_path_resp	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_query_path_resp {$/;"	s
ucma_abi_query_route_resp	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_query_route_resp {$/;"	s
ucma_abi_reject	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_reject {$/;"	s
ucma_abi_resolve_addr	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_resolve_addr {$/;"	s
ucma_abi_resolve_ip	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_resolve_ip {$/;"	s
ucma_abi_resolve_route	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_resolve_route {$/;"	s
ucma_abi_set_option	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_set_option {$/;"	s
ucma_abi_ud_param	include\rdma\rdma_cma_abi.h	/^struct ucma_abi_ud_param {$/;"	s
ud	include\rdma\rdma_cma_abi.h	/^		struct ucma_abi_ud_param   ud;$/;"	m	union:ucma_abi_event_resp::__anon53	typeref:struct:ucma_abi_event_resp::__anon53::ucma_abi_ud_param
uid	include\rdma\rdma_cma_abi.h	/^	__u64 uid;$/;"	m	struct:ucma_abi_accept
uid	include\rdma\rdma_cma_abi.h	/^	__u64 uid;$/;"	m	struct:ucma_abi_create_id
uid	include\rdma\rdma_cma_abi.h	/^	__u64 uid;$/;"	m	struct:ucma_abi_event_resp
uid	include\rdma\rdma_cma_abi.h	/^	__u64 uid;$/;"	m	struct:ucma_abi_join_ip_mcast
uid	include\rdma\rdma_cma_abi.h	/^	__u64 uid;$/;"	m	struct:ucma_abi_join_mcast
valid	include\rdma\rdma_cma_abi.h	/^	__u8  valid;$/;"	m	struct:ucma_abi_conn_param
RDMA_VERBS_H	include\rdma\rdma_verbs.h	34;"	d
rdma_dereg_mr	include\rdma\rdma_verbs.h	/^static inline int rdma_dereg_mr(struct ibv_mr *mr)$/;"	f
rdma_get_recv_comp	include\rdma\rdma_verbs.h	/^static inline int rdma_get_recv_comp(struct rdma_cm_id *id, struct ibv_wc *wc)$/;"	f
rdma_get_send_comp	include\rdma\rdma_verbs.h	/^static inline int rdma_get_send_comp(struct rdma_cm_id *id, struct ibv_wc *wc)$/;"	f
rdma_post_read	include\rdma\rdma_verbs.h	/^static inline int rdma_post_read(struct rdma_cm_id *id, void *context, void *addr,$/;"	f
rdma_post_readv	include\rdma\rdma_verbs.h	/^static inline int rdma_post_readv(struct rdma_cm_id *id, void *context, struct ibv_sge *sgl,$/;"	f
rdma_post_recv	include\rdma\rdma_verbs.h	/^static inline int rdma_post_recv(struct rdma_cm_id *id, void *context, void *addr,$/;"	f
rdma_post_recvv	include\rdma\rdma_verbs.h	/^static inline int rdma_post_recvv(struct rdma_cm_id *id, void *context, struct ibv_sge *sgl,$/;"	f
rdma_post_send	include\rdma\rdma_verbs.h	/^static inline int rdma_post_send(struct rdma_cm_id *id, void *context, void *addr,$/;"	f
rdma_post_sendv	include\rdma\rdma_verbs.h	/^static inline int rdma_post_sendv(struct rdma_cm_id *id, void *context, struct ibv_sge *sgl,$/;"	f
rdma_post_ud_send	include\rdma\rdma_verbs.h	/^static inline int rdma_post_ud_send(struct rdma_cm_id *id, void *context, void *addr,$/;"	f
rdma_post_write	include\rdma\rdma_verbs.h	/^static inline int rdma_post_write(struct rdma_cm_id *id, void *context, void *addr,$/;"	f
rdma_post_writev	include\rdma\rdma_verbs.h	/^static inline int rdma_post_writev(struct rdma_cm_id *id, void *context, struct ibv_sge *sgl,$/;"	f
rdma_reg_msgs	include\rdma\rdma_verbs.h	/^static inline struct ibv_mr* rdma_reg_msgs(struct rdma_cm_id *id, void *addr, size_t length)$/;"	f
rdma_reg_read	include\rdma\rdma_verbs.h	/^static inline struct ibv_mr* rdma_reg_read(struct rdma_cm_id *id, void *addr, size_t length)$/;"	f
rdma_reg_write	include\rdma\rdma_verbs.h	/^static inline struct ibv_mr* rdma_reg_write(struct rdma_cm_id *id, void *addr, size_t length)$/;"	f
rdma_seterrno	include\rdma\rdma_verbs.h	/^static inline int rdma_seterrno(int ret)$/;"	f
RDMA_INLINE	include\rdma\rsocket.h	/^	RDMA_INLINE,$/;"	e	enum:__anon54
RDMA_IOMAPSIZE	include\rdma\rsocket.h	/^	RDMA_IOMAPSIZE,$/;"	e	enum:__anon54
RDMA_ROUTE	include\rdma\rsocket.h	/^	RDMA_ROUTE$/;"	e	enum:__anon54
RDMA_RQSIZE	include\rdma\rsocket.h	/^	RDMA_RQSIZE,$/;"	e	enum:__anon54
RDMA_SQSIZE	include\rdma\rsocket.h	/^	RDMA_SQSIZE,$/;"	e	enum:__anon54
RSOCKET_H	include\rdma\rsocket.h	34;"	d
SOL_RDMA	include\rdma\rsocket.h	76;"	d
ACM_EP_FLAG_DEST	src\acm.c	93;"	d	file:
ACM_EP_FLAG_SOURCE	src\acm.c	92;"	d	file:
ACM_EP_INFO_ADDRESS_IP	src\acm.c	82;"	d	file:
ACM_EP_INFO_ADDRESS_IP6	src\acm.c	83;"	d	file:
ACM_EP_INFO_NAME	src\acm.c	81;"	d	file:
ACM_EP_INFO_PATH	src\acm.c	84;"	d	file:
ACM_FLAGS_NODELAY	src\acm.c	65;"	d	file:
ACM_MAX_ADDRESS	src\acm.c	68;"	d	file:
ACM_MSG_DATA_LENGTH	src\acm.c	70;"	d	file:
ACM_MSG_EP_LENGTH	src\acm.c	69;"	d	file:
ACM_MSG_HDR_LENGTH	src\acm.c	67;"	d	file:
ACM_OP_ACK	src\acm.c	52;"	d	file:
ACM_OP_RESOLVE	src\acm.c	51;"	d	file:
ACM_STATUS_EDESTADDR	src\acm.c	62;"	d	file:
ACM_STATUS_EDESTTYPE	src\acm.c	63;"	d	file:
ACM_STATUS_EINVAL	src\acm.c	56;"	d	file:
ACM_STATUS_ENODATA	src\acm.c	57;"	d	file:
ACM_STATUS_ENOMEM	src\acm.c	55;"	d	file:
ACM_STATUS_ENOTCONN	src\acm.c	58;"	d	file:
ACM_STATUS_ESRCADDR	src\acm.c	60;"	d	file:
ACM_STATUS_ESRCTYPE	src\acm.c	61;"	d	file:
ACM_STATUS_ETIMEDOUT	src\acm.c	59;"	d	file:
ACM_STATUS_SUCCESS	src\acm.c	54;"	d	file:
ACM_VERSION	src\acm.c	49;"	d	file:
acm_ep_addr_data	src\acm.c	/^struct acm_ep_addr_data {$/;"	s	file:
acm_ep_info	src\acm.c	/^union acm_ep_info {$/;"	u	file:
acm_hdr	src\acm.c	/^struct acm_hdr {$/;"	s	file:
acm_lock	src\acm.c	/^static pthread_mutex_t acm_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
acm_msg	src\acm.c	/^struct acm_msg {$/;"	s	file:
acm_resolve_msg	src\acm.c	/^struct acm_resolve_msg {$/;"	s	file:
addr	src\acm.c	/^	uint8_t                 addr[ACM_MAX_ADDRESS];$/;"	m	union:acm_ep_info	file:
data	src\acm.c	/^		uint8_t                 data[ACM_MSG_DATA_LENGTH];$/;"	m	union:acm_msg::__anon55	file:
data	src\acm.c	/^	struct acm_ep_addr_data data[0];$/;"	m	struct:acm_resolve_msg	typeref:struct:acm_resolve_msg::acm_ep_addr_data	file:
data	src\acm.c	/^	uint8_t		        data[3];$/;"	m	struct:acm_hdr	file:
flags	src\acm.c	/^	uint32_t                flags;$/;"	m	struct:acm_ep_addr_data	file:
hdr	src\acm.c	/^	struct acm_hdr                  hdr;$/;"	m	struct:acm_msg	typeref:struct:acm_msg::acm_hdr	file:
hdr	src\acm.c	/^	struct acm_hdr          hdr;$/;"	m	struct:acm_resolve_msg	typeref:struct:acm_resolve_msg::acm_hdr	file:
info	src\acm.c	/^	union acm_ep_info       info;$/;"	m	struct:acm_ep_addr_data	typeref:union:acm_ep_addr_data::acm_ep_info	file:
length	src\acm.c	/^	uint16_t                length;$/;"	m	struct:acm_hdr	file:
name	src\acm.c	/^	uint8_t                 name[ACM_MAX_ADDRESS];$/;"	m	union:acm_ep_info	file:
opcode	src\acm.c	/^	uint8_t                 opcode;$/;"	m	struct:acm_hdr	file:
path	src\acm.c	/^	struct ibv_path_record  path;$/;"	m	union:acm_ep_info	typeref:struct:acm_ep_info::ibv_path_record	file:
reserved	src\acm.c	/^	uint16_t                reserved;$/;"	m	struct:acm_ep_addr_data	file:
resolve_data	src\acm.c	/^		struct acm_ep_addr_data resolve_data[0];$/;"	m	union:acm_msg::__anon55	typeref:struct:acm_msg::__anon55::acm_ep_addr_data	file:
server_port	src\acm.c	/^static uint16_t server_port;$/;"	v	file:
sock	src\acm.c	/^static int sock = -1;$/;"	v	file:
status	src\acm.c	/^	uint8_t                 status;$/;"	m	struct:acm_hdr	file:
tid	src\acm.c	/^	uint64_t                tid;$/;"	m	struct:acm_hdr	file:
type	src\acm.c	/^	uint16_t                type;$/;"	m	struct:acm_ep_addr_data	file:
ucma_ib_addr	src\acm.c	/^static int ucma_ib_addr(struct sockaddr *addr, socklen_t len)$/;"	f	file:
ucma_ib_cleanup	src\acm.c	/^void ucma_ib_cleanup(void)$/;"	f
ucma_ib_init	src\acm.c	/^void ucma_ib_init(void)$/;"	f
ucma_ib_resolve	src\acm.c	/^void ucma_ib_resolve(struct rdma_addrinfo **rai, struct rdma_addrinfo *hints)$/;"	f
ucma_ib_save_resp	src\acm.c	/^static void ucma_ib_save_resp(struct rdma_addrinfo *rai, struct acm_msg *msg)$/;"	f	file:
ucma_ib_set_addr	src\acm.c	/^static int ucma_ib_set_addr(struct rdma_addrinfo *ib_rai,$/;"	f	file:
ucma_ib_set_connect	src\acm.c	/^static int ucma_ib_set_connect(struct rdma_addrinfo *ib_rai,$/;"	f	file:
ucma_inet_addr	src\acm.c	/^static int ucma_inet_addr(struct sockaddr *addr, socklen_t len)$/;"	f	file:
ucma_resolve_af_ib	src\acm.c	/^static void ucma_resolve_af_ib(struct rdma_addrinfo **rai)$/;"	f	file:
ucma_set_ep_addr	src\acm.c	/^static void ucma_set_ep_addr(struct acm_ep_addr_data *data, struct sockaddr *addr)$/;"	f	file:
ucma_set_server_port	src\acm.c	/^static int ucma_set_server_port(void)$/;"	f	file:
version	src\acm.c	/^	uint8_t                 version;$/;"	m	struct:acm_hdr	file:
nohints	src\addrinfo.c	/^struct rdma_addrinfo nohints;$/;"	v	typeref:struct:rdma_addrinfo
rdma_freeaddrinfo	src\addrinfo.c	/^void rdma_freeaddrinfo(struct rdma_addrinfo *res)$/;"	f
rdma_getaddrinfo	src\addrinfo.c	/^int rdma_getaddrinfo(char *node, char *service,$/;"	f
ucma_convert_in6	src\addrinfo.c	/^static int ucma_convert_in6(int ps, struct sockaddr_ib **dst, socklen_t *dst_len,$/;"	f	file:
ucma_convert_to_ai	src\addrinfo.c	/^static void ucma_convert_to_ai(struct addrinfo *ai, struct rdma_addrinfo *rai)$/;"	f	file:
ucma_convert_to_rai	src\addrinfo.c	/^static int ucma_convert_to_rai(struct rdma_addrinfo *rai,$/;"	f	file:
ucma_copy_addr	src\addrinfo.c	/^static int ucma_copy_addr(struct sockaddr **dst, socklen_t *dst_len,$/;"	f	file:
ucma_getaddrinfo	src\addrinfo.c	/^static int ucma_getaddrinfo(char *node, char *service,$/;"	f	file:
ucma_set_sid	src\addrinfo.c	/^void ucma_set_sid(enum rdma_port_space ps, struct sockaddr *addr,$/;"	f
CMA_INIT_CMD	src\cma.c	63;"	d	file:
CMA_INIT_CMD_RESP	src\cma.c	70;"	d	file:
abi_ver	src\cma.c	/^static int abi_ver = RDMA_USER_CM_MAX_ABI_VERSION;$/;"	v	file:
addr	src\cma.c	/^	struct sockaddr_storage addr;$/;"	m	struct:cma_multicast	typeref:struct:cma_multicast::sockaddr_storage	file:
af_ib_support	src\cma.c	/^int af_ib_support;$/;"	v
check_abi_version	src\cma.c	/^static int check_abi_version(void)$/;"	f	file:
cma_dev	src\cma.c	/^	struct cma_device	*cma_dev;$/;"	m	struct:cma_id_private	typeref:struct:cma_id_private::cma_device	file:
cma_dev_array	src\cma.c	/^static struct cma_device *cma_dev_array;$/;"	v	typeref:struct:cma_device	file:
cma_dev_cnt	src\cma.c	/^static int cma_dev_cnt;$/;"	v	file:
cma_device	src\cma.c	/^struct cma_device {$/;"	s	file:
cma_event	src\cma.c	/^struct cma_event {$/;"	s	file:
cma_id_private	src\cma.c	/^struct cma_id_private {$/;"	s	file:
cma_init_cnt	src\cma.c	/^static int cma_init_cnt;$/;"	v	file:
cma_multicast	src\cma.c	/^struct cma_multicast {$/;"	s	file:
cma_port	src\cma.c	/^struct cma_port {$/;"	s	file:
cond	src\cma.c	/^	pthread_cond_t		cond;$/;"	m	struct:cma_id_private	file:
cond	src\cma.c	/^	pthread_cond_t	cond;$/;"	m	struct:cma_multicast	file:
connect	src\cma.c	/^	void			*connect;$/;"	m	struct:cma_id_private	file:
connect_error	src\cma.c	/^	int			connect_error;$/;"	m	struct:cma_id_private	file:
connect_len	src\cma.c	/^	size_t			connect_len;$/;"	m	struct:cma_id_private	file:
context	src\cma.c	/^	void		*context;$/;"	m	struct:cma_multicast	file:
event	src\cma.c	/^	struct rdma_cm_event	event;$/;"	m	struct:cma_event	typeref:struct:cma_event::rdma_cm_event	file:
events_completed	src\cma.c	/^	int			events_completed;$/;"	m	struct:cma_id_private	file:
events_completed	src\cma.c	/^	int		events_completed;$/;"	m	struct:cma_multicast	file:
guid	src\cma.c	/^	uint64_t	    guid;$/;"	m	struct:cma_device	file:
handle	src\cma.c	/^	uint32_t		handle;$/;"	m	struct:cma_id_private	file:
handle	src\cma.c	/^	uint32_t	handle;$/;"	m	struct:cma_multicast	file:
id	src\cma.c	/^	struct rdma_cm_id	id;$/;"	m	struct:cma_id_private	typeref:struct:cma_id_private::rdma_cm_id	file:
id_priv	src\cma.c	/^	struct cma_id_private	*id_priv;$/;"	m	struct:cma_event	typeref:struct:cma_event::cma_id_private	file:
id_priv	src\cma.c	/^	struct cma_id_private *id_priv;$/;"	m	struct:cma_multicast	typeref:struct:cma_multicast::cma_id_private	file:
idm_lock	src\cma.c	/^static fastlock_t idm_lock;$/;"	v	file:
initiator_depth	src\cma.c	/^	uint8_t			initiator_depth;$/;"	m	struct:cma_id_private	file:
link_layer	src\cma.c	/^	uint8_t			link_layer;$/;"	m	struct:cma_port	file:
max_initiator_depth	src\cma.c	/^	uint8_t		    max_initiator_depth;$/;"	m	struct:cma_device	file:
max_qpsize	src\cma.c	/^	int		    max_qpsize;$/;"	m	struct:cma_device	file:
max_responder_resources	src\cma.c	/^	uint8_t		    max_responder_resources;$/;"	m	struct:cma_device	file:
mc	src\cma.c	/^	struct cma_multicast	*mc;$/;"	m	struct:cma_event	typeref:struct:cma_event::cma_multicast	file:
mc_list	src\cma.c	/^	struct cma_multicast	*mc_list;$/;"	m	struct:cma_id_private	typeref:struct:cma_id_private::cma_multicast	file:
mgid	src\cma.c	/^	union ibv_gid	mgid;$/;"	m	struct:cma_multicast	typeref:union:cma_multicast::ibv_gid	file:
mlid	src\cma.c	/^	uint16_t	mlid;$/;"	m	struct:cma_multicast	file:
mut	src\cma.c	/^	pthread_mutex_t		mut;$/;"	m	struct:cma_id_private	file:
mut	src\cma.c	/^static pthread_mutex_t mut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
next	src\cma.c	/^	struct cma_multicast  *next;$/;"	m	struct:cma_multicast	typeref:struct:cma_multicast::cma_multicast	file:
pd	src\cma.c	/^	struct ibv_pd	   *pd;$/;"	m	struct:cma_device	typeref:struct:cma_device::ibv_pd	file:
port	src\cma.c	/^	struct cma_port    *port;$/;"	m	struct:cma_device	typeref:struct:cma_device::cma_port	file:
port_cnt	src\cma.c	/^	int		    port_cnt;$/;"	m	struct:cma_device	file:
private_data	src\cma.c	/^	uint8_t			private_data[RDMA_MAX_PRIVATE_DATA];$/;"	m	struct:cma_event	file:
qp_init_attr	src\cma.c	/^	struct ibv_qp_init_attr	*qp_init_attr;$/;"	m	struct:cma_id_private	typeref:struct:cma_id_private::ibv_qp_init_attr	file:
rdma_accept	src\cma.c	/^int rdma_accept(struct rdma_cm_id *id, struct rdma_conn_param *conn_param)$/;"	f
rdma_ack_cm_event	src\cma.c	/^int rdma_ack_cm_event(struct rdma_cm_event *event)$/;"	f
rdma_bind_addr	src\cma.c	/^int rdma_bind_addr(struct rdma_cm_id *id, struct sockaddr *addr)$/;"	f
rdma_bind_addr2	src\cma.c	/^static int rdma_bind_addr2(struct rdma_cm_id *id, struct sockaddr *addr,$/;"	f	file:
rdma_cma_fini	src\cma.c	/^static void __attribute__((destructor)) rdma_cma_fini(void)$/;"	f	file:
rdma_connect	src\cma.c	/^int rdma_connect(struct rdma_cm_id *id, struct rdma_conn_param *conn_param)$/;"	f
rdma_create_ep	src\cma.c	/^int rdma_create_ep(struct rdma_cm_id **id, struct rdma_addrinfo *res,$/;"	f
rdma_create_event_channel	src\cma.c	/^struct rdma_event_channel *rdma_create_event_channel(void)$/;"	f
rdma_create_id	src\cma.c	/^int rdma_create_id(struct rdma_event_channel *channel,$/;"	f
rdma_create_id2	src\cma.c	/^static int rdma_create_id2(struct rdma_event_channel *channel,$/;"	f	file:
rdma_create_qp	src\cma.c	/^int rdma_create_qp(struct rdma_cm_id *id, struct ibv_pd *pd,$/;"	f
rdma_create_qp_ex	src\cma.c	/^int rdma_create_qp_ex(struct rdma_cm_id *id,$/;"	f
rdma_create_srq	src\cma.c	/^int rdma_create_srq(struct rdma_cm_id *id, struct ibv_pd *pd,$/;"	f
rdma_create_srq_ex	src\cma.c	/^int rdma_create_srq_ex(struct rdma_cm_id *id, struct ibv_srq_init_attr_ex *attr)$/;"	f
rdma_destroy_ep	src\cma.c	/^void rdma_destroy_ep(struct rdma_cm_id *id)$/;"	f
rdma_destroy_event_channel	src\cma.c	/^void rdma_destroy_event_channel(struct rdma_event_channel *channel)$/;"	f
rdma_destroy_id	src\cma.c	/^int rdma_destroy_id(struct rdma_cm_id *id)$/;"	f
rdma_destroy_qp	src\cma.c	/^void rdma_destroy_qp(struct rdma_cm_id *id)$/;"	f
rdma_destroy_srq	src\cma.c	/^void rdma_destroy_srq(struct rdma_cm_id *id)$/;"	f
rdma_disconnect	src\cma.c	/^int rdma_disconnect(struct rdma_cm_id *id)$/;"	f
rdma_event_str	src\cma.c	/^const char *rdma_event_str(enum rdma_cm_event_type event)$/;"	f
rdma_free_devices	src\cma.c	/^void rdma_free_devices(struct ibv_context **list)$/;"	f
rdma_get_cm_event	src\cma.c	/^int rdma_get_cm_event(struct rdma_event_channel *channel,$/;"	f
rdma_get_devices	src\cma.c	/^struct ibv_context **rdma_get_devices(int *num_devices)$/;"	f
rdma_get_dst_port	src\cma.c	/^uint16_t rdma_get_dst_port(struct rdma_cm_id *id)$/;"	f
rdma_get_request	src\cma.c	/^int rdma_get_request(struct rdma_cm_id *listen, struct rdma_cm_id **id)$/;"	f
rdma_get_src_port	src\cma.c	/^uint16_t rdma_get_src_port(struct rdma_cm_id *id)$/;"	f
rdma_init_qp_attr	src\cma.c	/^static int rdma_init_qp_attr(struct rdma_cm_id *id, struct ibv_qp_attr *qp_attr,$/;"	f	file:
rdma_join_multicast	src\cma.c	/^int rdma_join_multicast(struct rdma_cm_id *id, struct sockaddr *addr,$/;"	f
rdma_join_multicast2	src\cma.c	/^static int rdma_join_multicast2(struct rdma_cm_id *id, struct sockaddr *addr,$/;"	f	file:
rdma_leave_multicast	src\cma.c	/^int rdma_leave_multicast(struct rdma_cm_id *id, struct sockaddr *addr)$/;"	f
rdma_listen	src\cma.c	/^int rdma_listen(struct rdma_cm_id *id, int backlog)$/;"	f
rdma_migrate_id	src\cma.c	/^int rdma_migrate_id(struct rdma_cm_id *id, struct rdma_event_channel *channel)$/;"	f
rdma_notify	src\cma.c	/^int rdma_notify(struct rdma_cm_id *id, enum ibv_event_type event)$/;"	f
rdma_reject	src\cma.c	/^int rdma_reject(struct rdma_cm_id *id, const void *private_data,$/;"	f
rdma_resolve_addr	src\cma.c	/^int rdma_resolve_addr(struct rdma_cm_id *id, struct sockaddr *src_addr,$/;"	f
rdma_resolve_addr2	src\cma.c	/^static int rdma_resolve_addr2(struct rdma_cm_id *id, struct sockaddr *src_addr,$/;"	f	file:
rdma_resolve_route	src\cma.c	/^int rdma_resolve_route(struct rdma_cm_id *id, int timeout_ms)$/;"	f
rdma_set_option	src\cma.c	/^int rdma_set_option(struct rdma_cm_id *id, int level, int optname,$/;"	f
refcnt	src\cma.c	/^	int		    refcnt;$/;"	m	struct:cma_device	file:
responder_resources	src\cma.c	/^	uint8_t			responder_resources;$/;"	m	struct:cma_id_private	file:
sync	src\cma.c	/^	int			sync;$/;"	m	struct:cma_id_private	file:
ucma_addrlen	src\cma.c	/^int ucma_addrlen(struct sockaddr *addr)$/;"	f
ucma_alloc_id	src\cma.c	/^static struct cma_id_private *ucma_alloc_id(struct rdma_event_channel *channel,$/;"	f	file:
ucma_cleanup	src\cma.c	/^static void ucma_cleanup(void)$/;"	f	file:
ucma_complete	src\cma.c	/^int ucma_complete(struct rdma_cm_id *id)$/;"	f
ucma_complete_event	src\cma.c	/^static void ucma_complete_event(struct cma_id_private *id_priv)$/;"	f	file:
ucma_complete_mc_event	src\cma.c	/^static void ucma_complete_mc_event(struct cma_multicast *mc)$/;"	f	file:
ucma_convert_path	src\cma.c	/^static void ucma_convert_path(struct ibv_path_data *path_data,$/;"	f	file:
ucma_copy_conn_event	src\cma.c	/^static void ucma_copy_conn_event(struct cma_event *event,$/;"	f	file:
ucma_copy_conn_param_to_kern	src\cma.c	/^static void ucma_copy_conn_param_to_kern(struct cma_id_private *id_priv,$/;"	f	file:
ucma_copy_ud_event	src\cma.c	/^static void ucma_copy_ud_event(struct cma_event *event,$/;"	f	file:
ucma_create_cqs	src\cma.c	/^static int ucma_create_cqs(struct rdma_cm_id *id, uint32_t send_size, uint32_t recv_size)$/;"	f	file:
ucma_destroy_cqs	src\cma.c	/^static void ucma_destroy_cqs(struct rdma_cm_id *id)$/;"	f	file:
ucma_destroy_kern_id	src\cma.c	/^static int ucma_destroy_kern_id(int fd, uint32_t handle)$/;"	f	file:
ucma_find_pkey	src\cma.c	/^static int ucma_find_pkey(struct cma_device *cma_dev, uint8_t port_num,$/;"	f	file:
ucma_free_id	src\cma.c	/^static void ucma_free_id(struct cma_id_private *id_priv)$/;"	f	file:
ucma_get_device	src\cma.c	/^static int ucma_get_device(struct cma_id_private *id_priv, uint64_t guid)$/;"	f	file:
ucma_get_port	src\cma.c	/^uint16_t ucma_get_port(struct sockaddr *addr)$/;"	f
ucma_get_xrcd	src\cma.c	/^static struct ibv_xrcd *ucma_get_xrcd(struct cma_device *cma_dev)$/;"	f	file:
ucma_idm	src\cma.c	/^static struct index_map ucma_idm;$/;"	v	typeref:struct:index_map	file:
ucma_init	src\cma.c	/^int ucma_init(void)$/;"	f
ucma_init_all	src\cma.c	/^static int ucma_init_all(void)$/;"	f	file:
ucma_init_conn_qp	src\cma.c	/^static int ucma_init_conn_qp(struct cma_id_private *id_priv, struct ibv_qp *qp)$/;"	f	file:
ucma_init_conn_qp3	src\cma.c	/^static int ucma_init_conn_qp3(struct cma_id_private *id_priv, struct ibv_qp *qp)$/;"	f	file:
ucma_init_device	src\cma.c	/^static int ucma_init_device(struct cma_device *cma_dev)$/;"	f	file:
ucma_init_ud_qp	src\cma.c	/^static int ucma_init_ud_qp(struct cma_id_private *id_priv, struct ibv_qp *qp)$/;"	f	file:
ucma_init_ud_qp3	src\cma.c	/^static int ucma_init_ud_qp3(struct cma_id_private *id_priv, struct ibv_qp *qp)$/;"	f	file:
ucma_insert_id	src\cma.c	/^static void ucma_insert_id(struct cma_id_private *id_priv)$/;"	f	file:
ucma_is_ud_qp	src\cma.c	/^static int ucma_is_ud_qp(enum ibv_qp_type qp_type)$/;"	f	file:
ucma_lookup_id	src\cma.c	/^static struct cma_id_private *ucma_lookup_id(int handle)$/;"	f	file:
ucma_max_qpsize	src\cma.c	/^int ucma_max_qpsize(struct rdma_cm_id *id)$/;"	f
ucma_modify_qp_err	src\cma.c	/^static int ucma_modify_qp_err(struct rdma_cm_id *id)$/;"	f	file:
ucma_modify_qp_rtr	src\cma.c	/^static int ucma_modify_qp_rtr(struct rdma_cm_id *id, uint8_t resp_res)$/;"	f	file:
ucma_modify_qp_rts	src\cma.c	/^static int ucma_modify_qp_rts(struct rdma_cm_id *id, uint8_t init_depth)$/;"	f	file:
ucma_modify_qp_sqd	src\cma.c	/^static int ucma_modify_qp_sqd(struct rdma_cm_id *id)$/;"	f	file:
ucma_open_device	src\cma.c	/^static struct ibv_context *ucma_open_device(uint64_t guid)$/;"	f	file:
ucma_passive_ep	src\cma.c	/^static int ucma_passive_ep(struct rdma_cm_id *id, struct rdma_addrinfo *res,$/;"	f	file:
ucma_process_addr_resolved	src\cma.c	/^static void ucma_process_addr_resolved(struct cma_event *evt)$/;"	f	file:
ucma_process_conn_req	src\cma.c	/^static int ucma_process_conn_req(struct cma_event *evt,$/;"	f	file:
ucma_process_conn_resp	src\cma.c	/^static int ucma_process_conn_resp(struct cma_id_private *id_priv)$/;"	f	file:
ucma_process_join	src\cma.c	/^static int ucma_process_join(struct cma_event *evt)$/;"	f	file:
ucma_process_route_resolved	src\cma.c	/^static void ucma_process_route_resolved(struct cma_event *evt)$/;"	f	file:
ucma_put_device	src\cma.c	/^static void ucma_put_device(struct cma_device *cma_dev)$/;"	f	file:
ucma_query_addr	src\cma.c	/^static int ucma_query_addr(struct rdma_cm_id *id)$/;"	f	file:
ucma_query_gid	src\cma.c	/^static int ucma_query_gid(struct rdma_cm_id *id)$/;"	f	file:
ucma_query_path	src\cma.c	/^static int ucma_query_path(struct rdma_cm_id *id)$/;"	f	file:
ucma_query_req_info	src\cma.c	/^static int ucma_query_req_info(struct rdma_cm_id *id)$/;"	f	file:
ucma_query_route	src\cma.c	/^static int ucma_query_route(struct rdma_cm_id *id)$/;"	f	file:
ucma_remove_id	src\cma.c	/^static void ucma_remove_id(struct cma_id_private *id_priv)$/;"	f	file:
ucma_set_af_ib_support	src\cma.c	/^static void ucma_set_af_ib_support(void)$/;"	f	file:
ucma_set_ib_route	src\cma.c	/^static int ucma_set_ib_route(struct rdma_cm_id *id)$/;"	f	file:
ucma_shutdown	src\cma.c	/^int ucma_shutdown(struct rdma_cm_id *id)$/;"	f
ucma_valid_param	src\cma.c	/^static int ucma_valid_param(struct cma_id_private *id_priv,$/;"	f	file:
verbs	src\cma.c	/^	struct ibv_context *verbs;$/;"	m	struct:cma_device	typeref:struct:cma_device::ibv_context	file:
xrcd	src\cma.c	/^	struct ibv_xrcd    *xrcd;$/;"	m	struct:cma_device	typeref:struct:cma_device::ibv_xrcd	file:
CMA_H	src\cma.h	35;"	d
ERR	src\cma.h	/^static inline int ERR(int err)$/;"	f
PFX	src\cma.h	61;"	d
RAI_ROUTEONLY	src\cma.h	164;"	d
RDMADIR	src\cma.h	186;"	d
RDMA_CONF_DIR	src\cma.h	188;"	d
RS_CONF_DIR	src\cma.h	189;"	d
SYSCONFDIR	src\cma.h	183;"	d
VALGRIND_MAKE_MEM_DEFINED	src\cma.h	58;"	d
atomic_dec	src\cma.h	/^static inline int atomic_dec(atomic_t *atomic)$/;"	f
atomic_dec	src\cma.h	141;"	d
atomic_get	src\cma.h	144;"	d
atomic_inc	src\cma.h	/^static inline int atomic_inc(atomic_t *atomic)$/;"	f
atomic_inc	src\cma.h	140;"	d
atomic_init	src\cma.h	/^static inline void atomic_init(atomic_t *atomic)$/;"	f
atomic_init	src\cma.h	142;"	d
atomic_set	src\cma.h	145;"	d
atomic_t	src\cma.h	/^typedef struct { pthread_mutex_t mut; int val; } atomic_t;$/;"	t	typeref:struct:__anon56
atomic_t	src\cma.h	/^typedef struct { volatile int val; } atomic_t;$/;"	t	typeref:struct:__anon58
cma_dst_ip4	src\cma.h	178;"	d
cma_dst_ip6	src\cma.h	179;"	d
cma_src_ip4	src\cma.h	176;"	d
cma_src_ip6	src\cma.h	177;"	d
cma_version	src\cma.h	/^	uint8_t  cma_version;$/;"	m	struct:ib_connect_hdr
cnt	src\cma.h	/^	volatile int cnt;$/;"	m	struct:__anon57
container_of	src\cma.h	75;"	d
dst_addr	src\cma.h	/^	uint32_t dst_addr[4];$/;"	m	struct:ib_connect_hdr
fastlock_acquire	src\cma.h	/^static inline void fastlock_acquire(fastlock_t *lock)$/;"	f
fastlock_acquire	src\cma.h	87;"	d
fastlock_destroy	src\cma.h	/^static inline void fastlock_destroy(fastlock_t *lock)$/;"	f
fastlock_destroy	src\cma.h	86;"	d
fastlock_init	src\cma.h	/^static inline void fastlock_init(fastlock_t *lock)$/;"	f
fastlock_init	src\cma.h	85;"	d
fastlock_release	src\cma.h	/^static inline void fastlock_release(fastlock_t *lock)$/;"	f
fastlock_release	src\cma.h	88;"	d
fastlock_t	src\cma.h	/^} fastlock_t;$/;"	t	typeref:struct:__anon57
fastlock_t	src\cma.h	84;"	d
htonll	src\cma.h	/^static inline uint64_t htonll(uint64_t x) { return bswap_64(x); }$/;"	f
htonll	src\cma.h	/^static inline uint64_t htonll(uint64_t x) { return x; }$/;"	f
ib_connect_hdr	src\cma.h	/^struct ib_connect_hdr {$/;"	s
ip_version	src\cma.h	/^	uint8_t  ip_version; \/* IP version: 7:4 *\/$/;"	m	struct:ib_connect_hdr
max	src\cma.h	71;"	d
min	src\cma.h	72;"	d
mut	src\cma.h	/^typedef struct { pthread_mutex_t mut; int val; } atomic_t;$/;"	m	struct:__anon56
ntohll	src\cma.h	/^static inline uint64_t ntohll(uint64_t x) { return bswap_64(x); }$/;"	f
ntohll	src\cma.h	/^static inline uint64_t ntohll(uint64_t x) { return x; }$/;"	f
port	src\cma.h	/^	uint16_t port;$/;"	m	struct:ib_connect_hdr
sem	src\cma.h	/^	sem_t sem;$/;"	m	struct:__anon57
src_addr	src\cma.h	/^	uint32_t src_addr[4];$/;"	m	struct:ib_connect_hdr
val	src\cma.h	/^typedef struct { pthread_mutex_t mut; int val; } atomic_t;$/;"	m	struct:__anon56
val	src\cma.h	/^typedef struct { volatile int val; } atomic_t;$/;"	m	struct:__anon58
idm_clear	src\indexer.c	/^void *idm_clear(struct index_map *idm, int index)$/;"	f
idm_grow	src\indexer.c	/^static int idm_grow(struct index_map *idm, int index)$/;"	f	file:
idm_set	src\indexer.c	/^int idm_set(struct index_map *idm, int index, void *item)$/;"	f
idx_grow	src\indexer.c	/^static int idx_grow(struct indexer *idx)$/;"	f	file:
idx_insert	src\indexer.c	/^int idx_insert(struct indexer *idx, void *item)$/;"	f
idx_remove	src\indexer.c	/^void *idx_remove(struct indexer *idx, int index)$/;"	f
idx_replace	src\indexer.c	/^void idx_replace(struct indexer *idx, int index, void *item)$/;"	f
IDX_ARRAY_SIZE	src\indexer.h	57;"	d
IDX_ENTRY_BITS	src\indexer.h	55;"	d
IDX_ENTRY_SIZE	src\indexer.h	56;"	d
IDX_INDEX_BITS	src\indexer.h	54;"	d
IDX_MAX_INDEX	src\indexer.h	58;"	d
INDEXER_H	src\indexer.h	35;"	d
_dlist_entry	src\indexer.h	/^typedef struct _dlist_entry {$/;"	s
array	src\indexer.h	/^	union idx_entry *array[IDX_ARRAY_SIZE];$/;"	m	struct:indexer	typeref:union:indexer::idx_entry
array	src\indexer.h	/^	void **array[IDX_ARRAY_SIZE];$/;"	m	struct:index_map
dlist_empty	src\indexer.h	/^static inline int dlist_empty(dlist_entry *head)$/;"	f
dlist_entry	src\indexer.h	/^}	dlist_entry;$/;"	t	typeref:struct:_dlist_entry
dlist_init	src\indexer.h	/^static inline void dlist_init(dlist_entry *head)$/;"	f
dlist_insert_after	src\indexer.h	/^static inline void dlist_insert_after(dlist_entry *item, dlist_entry *head)$/;"	f
dlist_insert_before	src\indexer.h	/^static inline void dlist_insert_before(dlist_entry *item, dlist_entry *head)$/;"	f
dlist_insert_head	src\indexer.h	135;"	d
dlist_insert_tail	src\indexer.h	136;"	d
dlist_remove	src\indexer.h	/^static inline void dlist_remove(dlist_entry *item)$/;"	f
free_list	src\indexer.h	/^	int		 free_list;$/;"	m	struct:indexer
idm_at	src\indexer.h	/^static inline void *idm_at(struct index_map *idm, int index)$/;"	f
idm_lookup	src\indexer.h	/^static inline void *idm_lookup(struct index_map *idm, int index)$/;"	f
idx_array_index	src\indexer.h	67;"	d
idx_at	src\indexer.h	/^static inline void *idx_at(struct indexer *idx, int index)$/;"	f
idx_entry	src\indexer.h	/^union idx_entry {$/;"	u
idx_entry_index	src\indexer.h	68;"	d
index_map	src\indexer.h	/^struct index_map$/;"	s
indexer	src\indexer.h	/^struct indexer$/;"	s
item	src\indexer.h	/^	void *item;$/;"	m	union:idx_entry
next	src\indexer.h	/^	int   next;$/;"	m	union:idx_entry
next	src\indexer.h	/^	struct _dlist_entry	*next;$/;"	m	struct:_dlist_entry	typeref:struct:_dlist_entry::_dlist_entry
prev	src\indexer.h	/^	struct _dlist_entry	*prev;$/;"	m	struct:_dlist_entry	typeref:struct:_dlist_entry::_dlist_entry
size	src\indexer.h	/^	int		 size;$/;"	m	struct:indexer
__fxstat	src\preload.c	/^int __fxstat(int ver, int socket, struct stat *buf)$/;"	f
accept	src\preload.c	/^	int (*accept)(int socket, struct sockaddr *addr, socklen_t *addrlen);$/;"	m	struct:socket_calls	file:
accept	src\preload.c	/^int accept(int socket, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
bind	src\preload.c	/^	int (*bind)(int socket, const struct sockaddr *addr, socklen_t addrlen);$/;"	m	struct:socket_calls	file:
bind	src\preload.c	/^int bind(int socket, const struct sockaddr *addr, socklen_t addrlen)$/;"	f
close	src\preload.c	/^	int (*close)(int socket);$/;"	m	struct:socket_calls	file:
close	src\preload.c	/^int close(int socket)$/;"	f
config	src\preload.c	/^static struct config_entry *config;$/;"	v	typeref:struct:config_entry	file:
config_cnt	src\preload.c	/^static int config_cnt;$/;"	v	file:
config_entry	src\preload.c	/^struct config_entry {$/;"	s	file:
connect	src\preload.c	/^	int (*connect)(int socket, const struct sockaddr *addr, socklen_t addrlen);$/;"	m	struct:socket_calls	file:
connect	src\preload.c	/^int connect(int socket, const struct sockaddr *addr, socklen_t addrlen)$/;"	f
copysockopts	src\preload.c	/^static int copysockopts(int dfd, int sfd, struct socket_calls *dapi,$/;"	f	file:
domain	src\preload.c	/^	int domain;$/;"	m	struct:config_entry	file:
dup2	src\preload.c	/^	int (*dup2)(int oldfd, int newfd);$/;"	m	struct:socket_calls	file:
dup2	src\preload.c	/^int dup2(int oldfd, int newfd)$/;"	f
dupfd	src\preload.c	/^	int dupfd;$/;"	m	struct:fd_info	file:
fcntl	src\preload.c	/^	int (*fcntl)(int socket, int cmd, ... \/* arg *\/);$/;"	m	struct:socket_calls	file:
fcntl	src\preload.c	/^int fcntl(int socket, int cmd, ... \/* arg *\/)$/;"	f
fd	src\preload.c	/^	int fd;$/;"	m	struct:fd_info	file:
fd_close	src\preload.c	/^static enum fd_type fd_close(int index, int *fd)$/;"	f	file:
fd_fork	src\preload.c	/^	fd_fork,$/;"	e	enum:fd_fork_state	file:
fd_fork_active	src\preload.c	/^	fd_fork_active,$/;"	e	enum:fd_fork_state	file:
fd_fork_get	src\preload.c	/^static inline enum fd_type fd_fork_get(int index, int *fd)$/;"	f	file:
fd_fork_listen	src\preload.c	/^	fd_fork_listen,$/;"	e	enum:fd_fork_state	file:
fd_fork_passive	src\preload.c	/^	fd_fork_passive$/;"	e	enum:fd_fork_state	file:
fd_fork_state	src\preload.c	/^enum fd_fork_state {$/;"	g	file:
fd_get	src\preload.c	/^static inline enum fd_type fd_get(int index, int *fd)$/;"	f	file:
fd_getd	src\preload.c	/^static inline int fd_getd(int index)$/;"	f	file:
fd_gets	src\preload.c	/^static inline enum fd_fork_state fd_gets(int index)$/;"	f	file:
fd_gett	src\preload.c	/^static inline enum fd_type fd_gett(int index)$/;"	f	file:
fd_info	src\preload.c	/^struct fd_info {$/;"	s	file:
fd_normal	src\preload.c	/^	fd_normal,$/;"	e	enum:fd_type	file:
fd_open	src\preload.c	/^static int fd_open(void)$/;"	f	file:
fd_ready	src\preload.c	/^	fd_ready,$/;"	e	enum:fd_fork_state	file:
fd_rsocket	src\preload.c	/^	fd_rsocket$/;"	e	enum:fd_type	file:
fd_store	src\preload.c	/^static void fd_store(int index, int fd, enum fd_type type, enum fd_fork_state state)$/;"	f	file:
fd_type	src\preload.c	/^enum fd_type {$/;"	g	file:
fds_alloc	src\preload.c	/^static struct pollfd *fds_alloc(nfds_t nfds)$/;"	f	file:
fork_active	src\preload.c	/^static void fork_active(int socket)$/;"	f	file:
fork_passive	src\preload.c	/^static void fork_passive(int socket)$/;"	f	file:
fork_support	src\preload.c	/^static int fork_support;$/;"	v	file:
free_config	src\preload.c	/^static void free_config(void)$/;"	f	file:
fxstat	src\preload.c	/^	int (*fxstat)(int ver, int fd, struct stat *buf);$/;"	m	struct:socket_calls	file:
getenv_options	src\preload.c	/^void getenv_options(void)$/;"	f
getpeername	src\preload.c	/^	int (*getpeername)(int socket, struct sockaddr *addr, socklen_t *addrlen);$/;"	m	struct:socket_calls	file:
getpeername	src\preload.c	/^int getpeername(int socket, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
getsockname	src\preload.c	/^	int (*getsockname)(int socket, struct sockaddr *addr, socklen_t *addrlen);$/;"	m	struct:socket_calls	file:
getsockname	src\preload.c	/^int getsockname(int socket, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
getsockopt	src\preload.c	/^	int (*getsockopt)(int socket, int level, int optname,$/;"	m	struct:socket_calls	file:
getsockopt	src\preload.c	/^int getsockopt(int socket, int level, int optname,$/;"	f
idm	src\preload.c	/^static struct index_map idm;$/;"	v	typeref:struct:index_map	file:
init_preload	src\preload.c	/^static void init_preload(void)$/;"	f	file:
intercept_socket	src\preload.c	/^static int intercept_socket(int domain, int type, int protocol)$/;"	f	file:
listen	src\preload.c	/^	int (*listen)(int socket, int backlog);$/;"	m	struct:socket_calls	file:
listen	src\preload.c	/^int listen(int socket, int backlog)$/;"	f
mut	src\preload.c	/^static pthread_mutex_t mut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
name	src\preload.c	/^	char *name;$/;"	m	struct:config_entry	file:
poll	src\preload.c	/^	int (*poll)(struct pollfd *fds, nfds_t nfds, int timeout);$/;"	m	struct:socket_calls	file:
poll	src\preload.c	/^int poll(struct pollfd *fds, nfds_t nfds, int timeout)$/;"	f
protocol	src\preload.c	/^	int protocol;$/;"	m	struct:config_entry	file:
read	src\preload.c	/^	ssize_t (*read)(int socket, void *buf, size_t count);$/;"	m	struct:socket_calls	file:
read	src\preload.c	/^ssize_t read(int socket, void *buf, size_t count)$/;"	f
readv	src\preload.c	/^	ssize_t (*readv)(int socket, const struct iovec *iov, int iovcnt);$/;"	m	struct:socket_calls	file:
readv	src\preload.c	/^ssize_t readv(int socket, const struct iovec *iov, int iovcnt)$/;"	f
real	src\preload.c	/^static struct socket_calls real;$/;"	v	typeref:struct:socket_calls	file:
recv	src\preload.c	/^	ssize_t (*recv)(int socket, void *buf, size_t len, int flags);$/;"	m	struct:socket_calls	file:
recv	src\preload.c	/^ssize_t recv(int socket, void *buf, size_t len, int flags)$/;"	f
recvfrom	src\preload.c	/^	ssize_t (*recvfrom)(int socket, void *buf, size_t len, int flags,$/;"	m	struct:socket_calls	file:
recvfrom	src\preload.c	/^ssize_t recvfrom(int socket, void *buf, size_t len, int flags,$/;"	f
recvmsg	src\preload.c	/^	ssize_t (*recvmsg)(int socket, struct msghdr *msg, int flags);$/;"	m	struct:socket_calls	file:
recvmsg	src\preload.c	/^ssize_t recvmsg(int socket, struct msghdr *msg, int flags)$/;"	f
refcnt	src\preload.c	/^	atomic_t refcnt;$/;"	m	struct:fd_info	file:
rpoll_to_select	src\preload.c	/^static int rpoll_to_select(struct pollfd *fds, int nfds,$/;"	f	file:
rq_size	src\preload.c	/^static int rq_size;$/;"	v	file:
rs	src\preload.c	/^static struct socket_calls rs;$/;"	v	typeref:struct:socket_calls	file:
rs_convert_timeout	src\preload.c	/^static int rs_convert_timeout(struct timeval *timeout)$/;"	f	file:
scan_config	src\preload.c	/^static void scan_config(void)$/;"	f	file:
select	src\preload.c	/^int select(int nfds, fd_set *readfds, fd_set *writefds,$/;"	f
select_to_rpoll	src\preload.c	/^static void select_to_rpoll(struct pollfd *fds, int *nfds,$/;"	f	file:
send	src\preload.c	/^	ssize_t (*send)(int socket, const void *buf, size_t len, int flags);$/;"	m	struct:socket_calls	file:
send	src\preload.c	/^ssize_t send(int socket, const void *buf, size_t len, int flags)$/;"	f
sendfile	src\preload.c	/^	ssize_t (*sendfile)(int out_fd, int in_fd, off_t *offset, size_t count);$/;"	m	struct:socket_calls	file:
sendfile	src\preload.c	/^ssize_t sendfile(int out_fd, int in_fd, off_t *offset, size_t count)$/;"	f
sendmsg	src\preload.c	/^	ssize_t (*sendmsg)(int socket, const struct msghdr *msg, int flags);$/;"	m	struct:socket_calls	file:
sendmsg	src\preload.c	/^ssize_t sendmsg(int socket, const struct msghdr *msg, int flags)$/;"	f
sendto	src\preload.c	/^	ssize_t (*sendto)(int socket, const void *buf, size_t len, int flags,$/;"	m	struct:socket_calls	file:
sendto	src\preload.c	/^ssize_t sendto(int socket, const void *buf, size_t len, int flags,$/;"	f
set_rsocket_options	src\preload.c	/^void set_rsocket_options(int rsocket)$/;"	f
setsockopt	src\preload.c	/^	int (*setsockopt)(int socket, int level, int optname,$/;"	m	struct:socket_calls	file:
setsockopt	src\preload.c	/^int setsockopt(int socket, int level, int optname,$/;"	f
shutdown	src\preload.c	/^	int (*shutdown)(int socket, int how);$/;"	m	struct:socket_calls	file:
shutdown	src\preload.c	/^int shutdown(int socket, int how)$/;"	f
socket	src\preload.c	/^	int (*socket)(int domain, int type, int protocol);$/;"	m	struct:socket_calls	file:
socket	src\preload.c	/^int socket(int domain, int type, int protocol)$/;"	f
socket_calls	src\preload.c	/^struct socket_calls {$/;"	s	file:
sq_inline	src\preload.c	/^static int sq_inline;$/;"	v	file:
sq_size	src\preload.c	/^static int sq_size;$/;"	v	file:
state	src\preload.c	/^	enum fd_fork_state state;$/;"	m	struct:fd_info	typeref:enum:fd_info::fd_fork_state	file:
transpose_socket	src\preload.c	/^static int transpose_socket(int socket, enum fd_type new_type)$/;"	f	file:
type	src\preload.c	/^	enum fd_type type;$/;"	m	struct:fd_info	typeref:enum:fd_info::fd_type	file:
type	src\preload.c	/^	int type;$/;"	m	struct:config_entry	file:
write	src\preload.c	/^	ssize_t (*write)(int socket, const void *buf, size_t count);$/;"	m	struct:socket_calls	file:
write	src\preload.c	/^ssize_t write(int socket, const void *buf, size_t count)$/;"	f
writev	src\preload.c	/^	ssize_t (*writev)(int socket, const struct iovec *iov, int iovcnt);$/;"	m	struct:socket_calls	file:
writev	src\preload.c	/^ssize_t writev(int socket, const struct iovec *iov, int iovcnt)$/;"	f
DS_IPV4_HDR_LEN	src\rsocket.c	272;"	d	file:
DS_IPV6_HDR_LEN	src\rsocket.c	273;"	d	file:
DS_UDP_IPV4_HDR_LEN	src\rsocket.c	402;"	d	file:
DS_UDP_IPV6_HDR_LEN	src\rsocket.c	403;"	d	file:
DS_UDP_TAG	src\rsocket.c	387;"	d	file:
RS_CONN_FLAG_IOMAP	src\rsocket.c	202;"	d	file:
RS_CONN_FLAG_NET	src\rsocket.c	201;"	d	file:
RS_CONN_RETRIES	src\rsocket.c	65;"	d	file:
RS_CTRL_DISCONNECT	src\rsocket.c	/^	RS_CTRL_DISCONNECT,$/;"	e	enum:__anon61	file:
RS_CTRL_KEEPALIVE	src\rsocket.c	/^	RS_CTRL_KEEPALIVE,$/;"	e	enum:__anon61	file:
RS_CTRL_SHUTDOWN	src\rsocket.c	/^	RS_CTRL_SHUTDOWN$/;"	e	enum:__anon61	file:
RS_MAX_CTRL_MSG	src\rsocket.c	199;"	d	file:
RS_MAX_TRANSFER	src\rsocket.c	60;"	d	file:
RS_MSG_SIZE	src\rsocket.c	147;"	d	file:
RS_OLAP_START_SIZE	src\rsocket.c	59;"	d	file:
RS_OPT_MSG_SEND	src\rsocket.c	250;"	d	file:
RS_OPT_SVC_ACTIVE	src\rsocket.c	251;"	d	file:
RS_OPT_SWAP_SGL	src\rsocket.c	245;"	d	file:
RS_OP_CTRL	src\rsocket.c	/^	RS_OP_CTRL$/;"	e	enum:__anon60	file:
RS_OP_DATA	src\rsocket.c	/^	RS_OP_DATA,$/;"	e	enum:__anon60	file:
RS_OP_IOMAP_SGL	src\rsocket.c	/^	RS_OP_IOMAP_SGL,$/;"	e	enum:__anon60	file:
RS_OP_RSVD	src\rsocket.c	/^	RS_OP_RSVD,$/;"	e	enum:__anon60	file:
RS_OP_RSVD_DATA_MORE	src\rsocket.c	/^	RS_OP_RSVD_DATA_MORE,$/;"	e	enum:__anon60	file:
RS_OP_RSVD_DRA_MORE	src\rsocket.c	/^	RS_OP_RSVD_DRA_MORE,$/;"	e	enum:__anon60	file:
RS_OP_SGL	src\rsocket.c	/^	RS_OP_SGL,$/;"	e	enum:__anon60	file:
RS_OP_WRITE	src\rsocket.c	/^	RS_OP_WRITE, \/* opcode is not transmitted over the network *\/$/;"	e	enum:__anon60	file:
RS_QP_CTRL_SIZE	src\rsocket.c	64;"	d	file:
RS_QP_MAX_SIZE	src\rsocket.c	63;"	d	file:
RS_QP_MIN_SIZE	src\rsocket.c	62;"	d	file:
RS_SGL_SIZE	src\rsocket.c	66;"	d	file:
RS_SNDLOWAT	src\rsocket.c	61;"	d	file:
RS_SVC_ADD_DGRAM	src\rsocket.c	/^	RS_SVC_ADD_DGRAM,$/;"	e	enum:__anon59	file:
RS_SVC_ADD_KEEPALIVE	src\rsocket.c	/^	RS_SVC_ADD_KEEPALIVE,$/;"	e	enum:__anon59	file:
RS_SVC_MOD_KEEPALIVE	src\rsocket.c	/^	RS_SVC_MOD_KEEPALIVE$/;"	e	enum:__anon59	file:
RS_SVC_NOOP	src\rsocket.c	/^	RS_SVC_NOOP,$/;"	e	enum:__anon59	file:
RS_SVC_REM_DGRAM	src\rsocket.c	/^	RS_SVC_REM_DGRAM,$/;"	e	enum:__anon59	file:
RS_SVC_REM_KEEPALIVE	src\rsocket.c	/^	RS_SVC_REM_KEEPALIVE,$/;"	e	enum:__anon59	file:
RS_WR_ID_FLAG_MSG_SEND	src\rsocket.c	150;"	d	file:
RS_WR_ID_FLAG_RECV	src\rsocket.c	149;"	d	file:
addr	src\rsocket.c	/^			uint8_t  addr[16];$/;"	m	struct:ds_header::__anon64::__anon65	file:
addr	src\rsocket.c	/^	uint64_t addr;$/;"	m	struct:rs_sge	file:
addr	src\rsocket.c	/^	union socket_addr addr;	\/* must be first *\/$/;"	m	struct:ds_dest	typeref:union:ds_dest::socket_addr	file:
addr	src\rsocket.c	/^	} addr;$/;"	m	struct:ds_header	typeref:union:ds_header::__anon64	file:
addr	src\rsocket.c	/^	} addr;$/;"	m	struct:ds_udp_header	typeref:union:ds_udp_header::__anon70	file:
af_ib	src\rsocket.c	/^		} af_ib;$/;"	m	union:rs_conn_private_data::__anon62	typeref:struct:rs_conn_private_data::__anon62::__anon63	file:
ah	src\rsocket.c	/^	struct ibv_ah	  *ah;$/;"	m	struct:ds_dest	typeref:struct:ds_dest::ibv_ah	file:
cm_id	src\rsocket.c	/^			struct rdma_cm_id *cm_id;$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::rdma_cm_id	file:
cm_id	src\rsocket.c	/^	struct rdma_cm_id *cm_id;$/;"	m	struct:ds_qp	typeref:struct:ds_qp::rdma_cm_id	file:
cmd	src\rsocket.c	/^	uint32_t cmd;$/;"	m	struct:rs_svc_msg	file:
cnt	src\rsocket.c	/^	int cnt;$/;"	m	struct:rs_svc	file:
conn_data	src\rsocket.c	/^			struct rs_conn_data	conn_data;$/;"	m	struct:rs_conn_private_data::__anon62::__anon63	typeref:struct:rs_conn_private_data::__anon62::__anon63::rs_conn_data	file:
conn_data	src\rsocket.c	/^		struct rs_conn_data		conn_data;$/;"	m	union:rs_conn_private_data::__anon62	typeref:struct:rs_conn_private_data::__anon62::rs_conn_data	file:
conn_dest	src\rsocket.c	/^			struct ds_dest    *conn_dest;$/;"	m	struct:rsocket::__anon66::__anon68	typeref:struct:rsocket::__anon66::__anon68::ds_dest	file:
context_size	src\rsocket.c	/^	int context_size;$/;"	m	struct:rs_svc	file:
contexts	src\rsocket.c	/^	void *contexts;$/;"	m	struct:rs_svc	file:
cq_armed	src\rsocket.c	/^	int		  cq_armed;$/;"	m	struct:ds_qp	file:
cq_armed	src\rsocket.c	/^	int		  cq_armed;$/;"	m	struct:rsocket	file:
cq_lock	src\rsocket.c	/^	fastlock_t	  cq_lock;$/;"	m	struct:rsocket	file:
cq_wait_lock	src\rsocket.c	/^	fastlock_t	  cq_wait_lock;$/;"	m	struct:rsocket	file:
credits	src\rsocket.c	/^	uint16_t	  credits;$/;"	m	struct:rs_conn_data	file:
ctrl_max_seqno	src\rsocket.c	/^			unsigned int	  ctrl_max_seqno;$/;"	m	struct:rsocket::__anon66::__anon67	file:
ctrl_seqno	src\rsocket.c	/^			unsigned int	  ctrl_seqno;$/;"	m	struct:rsocket::__anon66::__anon67	file:
data	src\rsocket.c	/^	uint32_t data;$/;"	m	struct:rs_msg	file:
data_buf	src\rsocket.c	/^	struct rs_sge	  data_buf;$/;"	m	struct:rs_conn_data	typeref:struct:rs_conn_data::rs_sge	file:
def_inline	src\rsocket.c	/^static uint16_t def_inline = 64;$/;"	v	file:
def_iomap_size	src\rsocket.c	/^static uint16_t def_iomap_size = 0;$/;"	v	file:
def_mem	src\rsocket.c	/^static uint32_t def_mem = (1 << 17);$/;"	v	file:
def_rqsize	src\rsocket.c	/^static uint16_t def_rqsize = 384;$/;"	v	file:
def_sqsize	src\rsocket.c	/^static uint16_t def_sqsize = 384;$/;"	v	file:
def_wmem	src\rsocket.c	/^static uint32_t def_wmem = (1 << 17);$/;"	v	file:
dest	src\rsocket.c	/^	struct ds_dest	  dest;$/;"	m	struct:ds_qp	typeref:struct:ds_qp::ds_dest	file:
dest_map	src\rsocket.c	/^			void		  *dest_map;$/;"	m	struct:rsocket::__anon66::__anon68	file:
dmsg	src\rsocket.c	/^		struct ds_rmsg	  *dmsg;$/;"	m	union:rsocket::__anon69	typeref:struct:rsocket::__anon69::ds_rmsg	file:
ds_add_qp_dest	src\rsocket.c	/^static int ds_add_qp_dest(struct ds_qp *qp, union socket_addr *addr,$/;"	f	file:
ds_all_sends_done	src\rsocket.c	/^static int ds_all_sends_done(struct rsocket *rs)$/;"	f	file:
ds_can_send	src\rsocket.c	/^static int ds_can_send(struct rsocket *rs)$/;"	f	file:
ds_compare_addr	src\rsocket.c	/^static int ds_compare_addr(const void *dst1, const void *dst2)$/;"	f	file:
ds_create_qp	src\rsocket.c	/^static int ds_create_qp(struct rsocket *rs, union socket_addr *src_addr,$/;"	f	file:
ds_dest	src\rsocket.c	/^struct ds_dest {$/;"	s	file:
ds_format_hdr	src\rsocket.c	/^static void ds_format_hdr(struct ds_header *hdr, union socket_addr *addr)$/;"	f	file:
ds_free	src\rsocket.c	/^static void ds_free(struct rsocket *rs)$/;"	f	file:
ds_free_qp	src\rsocket.c	/^static void ds_free_qp(struct ds_qp *qp)$/;"	f	file:
ds_get_comp	src\rsocket.c	/^static int ds_get_comp(struct rsocket *rs, int nonblock, int (*test)(struct rsocket *rs))$/;"	f	file:
ds_get_cq_event	src\rsocket.c	/^static int ds_get_cq_event(struct rsocket *rs)$/;"	f	file:
ds_get_dest	src\rsocket.c	/^static int ds_get_dest(struct rsocket *rs, const struct sockaddr *addr,$/;"	f	file:
ds_get_qp	src\rsocket.c	/^static int ds_get_qp(struct rsocket *rs, union socket_addr *src_addr,$/;"	f	file:
ds_get_src_addr	src\rsocket.c	/^static int ds_get_src_addr(struct rsocket *rs,$/;"	f	file:
ds_header	src\rsocket.c	/^struct ds_header {$/;"	s	file:
ds_init	src\rsocket.c	/^static int ds_init(struct rsocket *rs, int domain)$/;"	f	file:
ds_init_bufs	src\rsocket.c	/^static int ds_init_bufs(struct ds_qp *qp)$/;"	f	file:
ds_init_ep	src\rsocket.c	/^static int ds_init_ep(struct rsocket *rs)$/;"	f	file:
ds_insert_qp	src\rsocket.c	/^static void ds_insert_qp(struct rsocket *rs, struct ds_qp *qp)$/;"	f	file:
ds_next_qp	src\rsocket.c	405;"	d	file:
ds_poll_cqs	src\rsocket.c	/^static void ds_poll_cqs(struct rsocket *rs)$/;"	f	file:
ds_post_recv	src\rsocket.c	/^static inline int ds_post_recv(struct rsocket *rs, struct ds_qp *qp, uint32_t offset)$/;"	f	file:
ds_post_send	src\rsocket.c	/^static int ds_post_send(struct rsocket *rs, struct ibv_sge *sge,$/;"	f	file:
ds_process_cqs	src\rsocket.c	/^static int ds_process_cqs(struct rsocket *rs, int nonblock, int (*test)(struct rsocket *rs))$/;"	f	file:
ds_qp	src\rsocket.c	/^struct ds_qp {$/;"	s	file:
ds_recvfrom	src\rsocket.c	/^static ssize_t ds_recvfrom(struct rsocket *rs, void *buf, size_t len, int flags,$/;"	f	file:
ds_remove_qp	src\rsocket.c	/^static void ds_remove_qp(struct rsocket *rs, struct ds_qp *qp)$/;"	f	file:
ds_req_notify_cqs	src\rsocket.c	/^static void ds_req_notify_cqs(struct rsocket *rs)$/;"	f	file:
ds_rmsg	src\rsocket.c	/^struct ds_rmsg {$/;"	s	file:
ds_send_udp	src\rsocket.c	/^static ssize_t ds_send_udp(struct rsocket *rs, const void *buf, size_t len,$/;"	f	file:
ds_sendv_udp	src\rsocket.c	/^static ssize_t ds_sendv_udp(struct rsocket *rs, const struct iovec *iov,$/;"	f	file:
ds_set_qp_size	src\rsocket.c	/^static void ds_set_qp_size(struct rsocket *rs)$/;"	f	file:
ds_set_src	src\rsocket.c	/^static void ds_set_src(struct sockaddr *addr, socklen_t *addrlen,$/;"	f	file:
ds_shutdown	src\rsocket.c	/^static void ds_shutdown(struct rsocket *rs)$/;"	f	file:
ds_smsg	src\rsocket.c	/^struct ds_smsg {$/;"	s	file:
ds_udp_header	src\rsocket.c	/^struct ds_udp_header {$/;"	s	file:
ds_valid_recv	src\rsocket.c	/^static int ds_valid_recv(struct ds_qp *qp, struct ibv_wc *wc)$/;"	f	file:
dsend	src\rsocket.c	/^static ssize_t dsend(struct rsocket *rs, const void *buf, size_t len, int flags)$/;"	f	file:
entry	src\rsocket.c	/^	dlist_entry entry;$/;"	m	struct:rs_iomap_mr	file:
epfd	src\rsocket.c	/^			int		  epfd;$/;"	m	struct:rsocket::__anon66::__anon68	file:
err	src\rsocket.c	/^	int		  err;$/;"	m	struct:rsocket	file:
fd_flags	src\rsocket.c	/^	int		  fd_flags;$/;"	m	struct:rsocket	file:
flags	src\rsocket.c	/^	uint8_t		  flags;$/;"	m	struct:rs_conn_data	file:
flowinfo	src\rsocket.c	/^			uint32_t flowinfo;$/;"	m	struct:ds_header::__anon64::__anon65	file:
hdr	src\rsocket.c	/^	struct ds_header  hdr;$/;"	m	struct:ds_qp	typeref:struct:ds_qp::ds_header	file:
ib_hdr	src\rsocket.c	/^			struct ib_connect_hdr	ib_hdr;$/;"	m	struct:rs_conn_private_data::__anon62::__anon63	typeref:struct:rs_conn_private_data::__anon62::__anon63::ib_connect_hdr	file:
id	src\rsocket.c	/^	pthread_t id;$/;"	m	struct:rs_svc	file:
idm	src\rsocket.c	/^static struct index_map idm;$/;"	v	typeref:struct:index_map	file:
index	src\rsocket.c	/^	int		  index;$/;"	m	struct:rsocket	file:
index	src\rsocket.c	/^	int index;	\/* -1 if mapping is local and not in iomap_list *\/$/;"	m	struct:rs_iomap_mr	file:
iomap_list	src\rsocket.c	/^	dlist_entry	  iomap_list;$/;"	m	struct:rsocket	file:
iomap_pending	src\rsocket.c	/^	int		  iomap_pending;$/;"	m	struct:rsocket	file:
iomap_queue	src\rsocket.c	/^	dlist_entry	  iomap_queue;$/;"	m	struct:rsocket	file:
ipv4	src\rsocket.c	/^		uint32_t  ipv4;$/;"	m	union:ds_header::__anon64	file:
ipv4	src\rsocket.c	/^		uint32_t ipv4;$/;"	m	union:ds_udp_header::__anon70	file:
ipv6	src\rsocket.c	/^		uint8_t  ipv6[16];$/;"	m	union:ds_udp_header::__anon70	file:
ipv6	src\rsocket.c	/^		} ipv6;$/;"	m	union:ds_header::__anon64	typeref:struct:ds_header::__anon64::__anon65	file:
ipv6_opts	src\rsocket.c	/^	uint64_t	  ipv6_opts;$/;"	m	struct:rsocket	file:
keepalive_time	src\rsocket.c	/^			unsigned int	  keepalive_time;$/;"	m	struct:rsocket::__anon66::__anon67	file:
key	src\rsocket.c	/^	uint32_t key;$/;"	m	struct:rs_sge	file:
length	src\rsocket.c	/^	uint32_t	length;$/;"	m	struct:ds_rmsg	file:
length	src\rsocket.c	/^	uint32_t length;$/;"	m	struct:rs_sge	file:
length	src\rsocket.c	/^	uint8_t		  length;$/;"	m	struct:ds_header	file:
length	src\rsocket.c	/^	uint8_t		  length;$/;"	m	struct:ds_udp_header	file:
list	src\rsocket.c	/^	dlist_entry	  list;$/;"	m	struct:ds_qp	file:
map_lock	src\rsocket.c	/^	fastlock_t	  map_lock; \/* acquire slock first if needed *\/$/;"	m	struct:rsocket	file:
mr	src\rsocket.c	/^	struct ibv_mr *mr;$/;"	m	struct:rs_iomap_mr	typeref:struct:rs_iomap_mr::ibv_mr	file:
mut	src\rsocket.c	/^static pthread_mutex_t mut = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
next	src\rsocket.c	/^	struct ds_smsg	*next;$/;"	m	struct:ds_smsg	typeref:struct:ds_smsg::ds_smsg	file:
offset	src\rsocket.c	/^	uint32_t	offset;$/;"	m	struct:ds_rmsg	file:
offset	src\rsocket.c	/^	uint64_t offset;$/;"	m	struct:rs_iomap	file:
offset	src\rsocket.c	/^	uint64_t offset;$/;"	m	struct:rs_iomap_mr	file:
op	src\rsocket.c	/^	uint32_t op;$/;"	m	struct:rs_msg	file:
op	src\rsocket.c	/^	uint8_t		  op;$/;"	m	struct:ds_udp_header	file:
optlen	src\rsocket.c	/^	size_t		  optlen;$/;"	m	struct:rsocket	file:
opts	src\rsocket.c	/^	int		  opts;$/;"	m	struct:rsocket	file:
optval	src\rsocket.c	/^	void		  *optval;$/;"	m	struct:rsocket	file:
polling_time	src\rsocket.c	/^static uint32_t polling_time = 10;$/;"	v	file:
port	src\rsocket.c	/^	uint16_t	  port;$/;"	m	struct:ds_header	file:
qp	src\rsocket.c	/^	struct ds_qp	  *qp;$/;"	m	struct:ds_dest	typeref:struct:ds_dest::ds_qp	file:
qp	src\rsocket.c	/^	struct ds_qp	*qp;$/;"	m	struct:ds_rmsg	typeref:struct:ds_rmsg::ds_qp	file:
qp_list	src\rsocket.c	/^			struct ds_qp	  *qp_list;$/;"	m	struct:rsocket::__anon66::__anon68	typeref:struct:rsocket::__anon66::__anon68::ds_qp	file:
qpn	src\rsocket.c	/^	uint32_t	   qpn;$/;"	m	struct:ds_dest	file:
qpn	src\rsocket.c	/^	uint32_t	  qpn;  \/* lower 8-bits reserved *\/$/;"	m	struct:ds_udp_header	file:
raccept	src\rsocket.c	/^int raccept(int socket, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
rbind	src\rsocket.c	/^int rbind(int socket, const struct sockaddr *addr, socklen_t addrlen)$/;"	f
rbuf	src\rsocket.c	/^			uint8_t		  *rbuf;$/;"	m	struct:rsocket::__anon66::__anon67	file:
rbuf	src\rsocket.c	/^	uint8_t		  *rbuf;$/;"	m	struct:ds_qp	file:
rbuf_bytes_avail	src\rsocket.c	/^			int		  rbuf_bytes_avail;$/;"	m	struct:rsocket::__anon66::__anon67	file:
rbuf_free_offset	src\rsocket.c	/^			int		  rbuf_free_offset;$/;"	m	struct:rsocket::__anon66::__anon67	file:
rbuf_msg_index	src\rsocket.c	/^			int		  rbuf_msg_index;$/;"	m	struct:rsocket::__anon66::__anon67	file:
rbuf_offset	src\rsocket.c	/^			int		  rbuf_offset;$/;"	m	struct:rsocket::__anon66::__anon67	file:
rbuf_size	src\rsocket.c	/^	uint32_t	  rbuf_size;$/;"	m	struct:rsocket	file:
rclose	src\rsocket.c	/^int rclose(int socket)$/;"	f
rconnect	src\rsocket.c	/^int rconnect(int socket, const struct sockaddr *addr, socklen_t addrlen)$/;"	f
refcnt	src\rsocket.c	/^	atomic_t refcnt;$/;"	m	struct:rs_iomap_mr	file:
remote_iomap	src\rsocket.c	/^			struct rs_sge	  remote_iomap;$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::rs_sge	file:
remote_iomappings	src\rsocket.c	/^	struct rs_iomap_mr *remote_iomappings;$/;"	m	struct:rsocket	typeref:struct:rsocket::rs_iomap_mr	file:
remote_sge	src\rsocket.c	/^			int		  remote_sge;$/;"	m	struct:rsocket::__anon66::__anon67	file:
remote_sgl	src\rsocket.c	/^			struct rs_sge	  remote_sgl;$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::rs_sge	file:
reserved	src\rsocket.c	/^	uint8_t		  reserved;$/;"	m	struct:ds_udp_header	file:
reserved	src\rsocket.c	/^	uint8_t		  reserved[3];$/;"	m	struct:rs_conn_data	file:
retries	src\rsocket.c	/^	int		  retries;$/;"	m	struct:rsocket	file:
rfcntl	src\rsocket.c	/^int rfcntl(int socket, int cmd, ... \/* arg *\/ )$/;"	f
rgetpeername	src\rsocket.c	/^int rgetpeername(int socket, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
rgetsockname	src\rsocket.c	/^int rgetsockname(int socket, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
rgetsockopt	src\rsocket.c	/^int rgetsockopt(int socket, int level, int optname,$/;"	f
riomap	src\rsocket.c	/^off_t riomap(int socket, void *buf, size_t len, int prot, int flags, off_t offset)$/;"	f
riounmap	src\rsocket.c	/^int riounmap(int socket, void *buf, size_t len)$/;"	f
riowrite	src\rsocket.c	/^size_t riowrite(int socket, const void *buf, size_t count, off_t offset, int flags)$/;"	f
rlisten	src\rsocket.c	/^int rlisten(int socket, int backlog)$/;"	f
rlock	src\rsocket.c	/^	fastlock_t	  rlock;$/;"	m	struct:rsocket	file:
rmr	src\rsocket.c	/^			struct ibv_mr	  *rmr;$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::ibv_mr	file:
rmr	src\rsocket.c	/^	struct ibv_mr	  *rmr;$/;"	m	struct:ds_qp	typeref:struct:ds_qp::ibv_mr	file:
rmsg	src\rsocket.c	/^		struct rs_msg	  *rmsg;$/;"	m	union:rsocket::__anon69	typeref:struct:rsocket::__anon69::rs_msg	file:
rmsg_head	src\rsocket.c	/^	int		  rmsg_head;$/;"	m	struct:rsocket	file:
rmsg_tail	src\rsocket.c	/^	int		  rmsg_tail;$/;"	m	struct:rsocket	file:
rpoll	src\rsocket.c	/^int rpoll(struct pollfd *fds, nfds_t nfds, int timeout)$/;"	f
rq_size	src\rsocket.c	/^	uint16_t	  rq_size;$/;"	m	struct:rsocket	file:
rqe_avail	src\rsocket.c	/^			int		  rqe_avail;$/;"	m	struct:rsocket::__anon66::__anon68	file:
rread	src\rsocket.c	/^ssize_t rread(int socket, void *buf, size_t count)$/;"	f
rreadv	src\rsocket.c	/^ssize_t rreadv(int socket, const struct iovec *iov, int iovcnt)$/;"	f
rrecv	src\rsocket.c	/^ssize_t rrecv(int socket, void *buf, size_t len, int flags)$/;"	f
rrecvfrom	src\rsocket.c	/^ssize_t rrecvfrom(int socket, void *buf, size_t len, int flags,$/;"	f
rrecvmsg	src\rsocket.c	/^ssize_t rrecvmsg(int socket, struct msghdr *msg, int flags)$/;"	f
rrecvv	src\rsocket.c	/^static ssize_t rrecvv(int socket, const struct iovec *iov, int iovcnt, int flags)$/;"	f	file:
rs	src\rsocket.c	/^	struct rsocket	  *rs;$/;"	m	struct:ds_qp	typeref:struct:ds_qp::rsocket	file:
rs	src\rsocket.c	/^	struct rsocket *rs;$/;"	m	struct:rs_svc_msg	typeref:struct:rs_svc_msg::rsocket	file:
rs_2ctrl_avail	src\rsocket.c	/^static inline int rs_2ctrl_avail(struct rsocket *rs)$/;"	f	file:
rs_accepting	src\rsocket.c	/^	rs_accepting       = rs_opening |   0x0080,$/;"	e	enum:rs_state	file:
rs_alloc	src\rsocket.c	/^static struct rsocket *rs_alloc(struct rsocket *inherited_rs, int type)$/;"	f	file:
rs_any_addr	src\rsocket.c	/^static int rs_any_addr(const union socket_addr *addr)$/;"	f	file:
rs_bound	src\rsocket.c	/^	rs_bound	   =		    0x0001,$/;"	e	enum:rs_state	file:
rs_can_send	src\rsocket.c	/^static int rs_can_send(struct rsocket *rs)$/;"	f	file:
rs_configure	src\rsocket.c	/^void rs_configure(void)$/;"	f
rs_conn_all_sends_done	src\rsocket.c	/^static int rs_conn_all_sends_done(struct rsocket *rs)$/;"	f	file:
rs_conn_can_send	src\rsocket.c	/^static int rs_conn_can_send(struct rsocket *rs)$/;"	f	file:
rs_conn_can_send_ctrl	src\rsocket.c	/^static int rs_conn_can_send_ctrl(struct rsocket *rs)$/;"	f	file:
rs_conn_data	src\rsocket.c	/^struct rs_conn_data {$/;"	s	file:
rs_conn_data_offset	src\rsocket.c	/^static size_t rs_conn_data_offset(struct rsocket *rs)$/;"	f	file:
rs_conn_have_rdata	src\rsocket.c	/^static int rs_conn_have_rdata(struct rsocket *rs)$/;"	f	file:
rs_conn_private_data	src\rsocket.c	/^struct rs_conn_private_data {$/;"	s	file:
rs_connect_error	src\rsocket.c	/^	rs_connect_error   =		    0x0800,$/;"	e	enum:rs_state	file:
rs_connect_rdwr	src\rsocket.c	/^	rs_connect_rdwr    = rs_connected | rs_readable | rs_writable,$/;"	e	enum:rs_state	file:
rs_connected	src\rsocket.c	/^	rs_connected	   =		    0x0100,$/;"	e	enum:rs_state	file:
rs_connecting	src\rsocket.c	/^	rs_connecting      = rs_opening |   0x0040,$/;"	e	enum:rs_state	file:
rs_convert_sa_path	src\rsocket.c	/^static void rs_convert_sa_path(struct ibv_sa_path_rec *sa_path,$/;"	f	file:
rs_convert_timeout	src\rsocket.c	/^static int rs_convert_timeout(struct timeval *timeout)$/;"	f	file:
rs_copy_addr	src\rsocket.c	/^static void rs_copy_addr(struct sockaddr *dst, struct sockaddr *src, socklen_t *len)$/;"	f	file:
rs_copy_iov	src\rsocket.c	/^static void rs_copy_iov(void *dst, const struct iovec **iov, size_t *offset, size_t len)$/;"	f	file:
rs_create_cq	src\rsocket.c	/^static int rs_create_cq(struct rsocket *rs, struct rdma_cm_id *cm_id)$/;"	f	file:
rs_create_ep	src\rsocket.c	/^static int rs_create_ep(struct rsocket *rs)$/;"	f	file:
rs_ctrl_avail	src\rsocket.c	/^static inline int rs_ctrl_avail(struct rsocket *rs)$/;"	f	file:
rs_disconnected	src\rsocket.c	/^	rs_disconnected	   =		    0x1000,$/;"	e	enum:rs_state	file:
rs_do_connect	src\rsocket.c	/^static int rs_do_connect(struct rsocket *rs)$/;"	f	file:
rs_error	src\rsocket.c	/^	rs_error	   =		    0x2000,$/;"	e	enum:rs_state	file:
rs_fds_alloc	src\rsocket.c	/^static struct pollfd *rs_fds_alloc(nfds_t nfds)$/;"	f	file:
rs_find_iomap	src\rsocket.c	/^static struct rs_iomap *rs_find_iomap(struct rsocket *rs, off_t offset)$/;"	f	file:
rs_format_conn_data	src\rsocket.c	/^static void rs_format_conn_data(struct rsocket *rs, struct rs_conn_data *conn)$/;"	f	file:
rs_free	src\rsocket.c	/^static void rs_free(struct rsocket *rs)$/;"	f	file:
rs_free_iomappings	src\rsocket.c	/^static void rs_free_iomappings(struct rsocket *rs)$/;"	f	file:
rs_get_comp	src\rsocket.c	/^static int rs_get_comp(struct rsocket *rs, int nonblock, int (*test)(struct rsocket *rs))$/;"	f	file:
rs_get_cq_event	src\rsocket.c	/^static int rs_get_cq_event(struct rsocket *rs)$/;"	f	file:
rs_get_ctrl_buf	src\rsocket.c	/^static void *rs_get_ctrl_buf(struct rsocket *rs)$/;"	f	file:
rs_get_iomap_mr	src\rsocket.c	/^static struct rs_iomap_mr *rs_get_iomap_mr(struct rsocket *rs)$/;"	f	file:
rs_get_time	src\rsocket.c	/^static uint32_t rs_get_time(void)$/;"	f	file:
rs_give_credits	src\rsocket.c	/^static int rs_give_credits(struct rsocket *rs)$/;"	f	file:
rs_have_rdata	src\rsocket.c	/^static int rs_have_rdata(struct rsocket *rs)$/;"	f	file:
rs_host_is_net	src\rsocket.c	200;"	d	file:
rs_init	src\rsocket.c	/^	rs_init,$/;"	e	enum:rs_state	file:
rs_init_bufs	src\rsocket.c	/^static int rs_init_bufs(struct rsocket *rs)$/;"	f	file:
rs_insert	src\rsocket.c	/^static int rs_insert(struct rsocket *rs, int index)$/;"	f	file:
rs_iomap	src\rsocket.c	/^struct rs_iomap {$/;"	s	file:
rs_iomap_mr	src\rsocket.c	/^struct rs_iomap_mr {$/;"	s	file:
rs_is_cq_armed	src\rsocket.c	/^static int rs_is_cq_armed(struct rsocket *rs)$/;"	f	file:
rs_listening	src\rsocket.c	/^	rs_listening	   =		    0x0002,$/;"	e	enum:rs_state	file:
rs_msg	src\rsocket.c	/^struct rs_msg {$/;"	s	file:
rs_msg_data	src\rsocket.c	146;"	d	file:
rs_msg_op	src\rsocket.c	145;"	d	file:
rs_msg_set	src\rsocket.c	144;"	d	file:
rs_nonblocking	src\rsocket.c	/^static int rs_nonblocking(struct rsocket *rs, int flags)$/;"	f	file:
rs_notify_svc	src\rsocket.c	/^static int rs_notify_svc(struct rs_svc *svc, struct rsocket *rs, int cmd)$/;"	f	file:
rs_opening	src\rsocket.c	/^	rs_opening	   =		    0x0004,$/;"	e	enum:rs_state	file:
rs_peek	src\rsocket.c	/^static ssize_t rs_peek(struct rsocket *rs, void *buf, size_t len)$/;"	f	file:
rs_poll_all	src\rsocket.c	/^static int rs_poll_all(struct rsocket *rs)$/;"	f	file:
rs_poll_arm	src\rsocket.c	/^static int rs_poll_arm(struct pollfd *rfds, struct pollfd *fds, nfds_t nfds)$/;"	f	file:
rs_poll_check	src\rsocket.c	/^static int rs_poll_check(struct pollfd *fds, nfds_t nfds)$/;"	f	file:
rs_poll_cq	src\rsocket.c	/^static int rs_poll_cq(struct rsocket *rs)$/;"	f	file:
rs_poll_events	src\rsocket.c	/^static int rs_poll_events(struct pollfd *rfds, struct pollfd *fds, nfds_t nfds)$/;"	f	file:
rs_poll_rs	src\rsocket.c	/^static int rs_poll_rs(struct rsocket *rs, int events,$/;"	f	file:
rs_poll_to_select	src\rsocket.c	/^rs_poll_to_select(int nfds, struct pollfd *fds, fd_set *readfds,$/;"	f	file:
rs_post_msg	src\rsocket.c	/^static int rs_post_msg(struct rsocket *rs, uint32_t msg)$/;"	f	file:
rs_post_recv	src\rsocket.c	/^static inline int rs_post_recv(struct rsocket *rs)$/;"	f	file:
rs_post_write	src\rsocket.c	/^static int rs_post_write(struct rsocket *rs,$/;"	f	file:
rs_post_write_msg	src\rsocket.c	/^static int rs_post_write_msg(struct rsocket *rs,$/;"	f	file:
rs_process_cq	src\rsocket.c	/^static int rs_process_cq(struct rsocket *rs, int nonblock, int (*test)(struct rsocket *rs))$/;"	f	file:
rs_readable	src\rsocket.c	/^	rs_readable	   =		    0x0400,$/;"	e	enum:rs_state	file:
rs_recv_wr_id	src\rsocket.c	152;"	d	file:
rs_release_iomap_mr	src\rsocket.c	/^static void rs_release_iomap_mr(struct rs_iomap_mr *iomr)$/;"	f	file:
rs_remove	src\rsocket.c	/^static void rs_remove(struct rsocket *rs)$/;"	f	file:
rs_resolving_addr	src\rsocket.c	/^	rs_resolving_addr  = rs_opening |   0x0010,$/;"	e	enum:rs_state	file:
rs_resolving_route	src\rsocket.c	/^	rs_resolving_route = rs_opening |   0x0020,$/;"	e	enum:rs_state	file:
rs_save_conn_data	src\rsocket.c	/^static void rs_save_conn_data(struct rsocket *rs, struct rs_conn_data *conn)$/;"	f	file:
rs_sbuf_left	src\rsocket.c	/^static uint32_t rs_sbuf_left(struct rsocket *rs)$/;"	f	file:
rs_scale_to_value	src\rsocket.c	/^static int rs_scale_to_value(int value, int bits)$/;"	f	file:
rs_select_to_poll	src\rsocket.c	/^rs_select_to_poll(int *nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds)$/;"	f	file:
rs_send_credits	src\rsocket.c	/^static void rs_send_credits(struct rsocket *rs)$/;"	f	file:
rs_send_iomaps	src\rsocket.c	/^static int rs_send_iomaps(struct rsocket *rs, int flags)$/;"	f	file:
rs_send_wr_id	src\rsocket.c	151;"	d	file:
rs_set_keepalive	src\rsocket.c	/^static int rs_set_keepalive(struct rsocket *rs, int on)$/;"	f	file:
rs_set_nonblocking	src\rsocket.c	/^static int rs_set_nonblocking(struct rsocket *rs, int arg)$/;"	f	file:
rs_set_qp_size	src\rsocket.c	/^static void rs_set_qp_size(struct rsocket *rs)$/;"	f	file:
rs_sge	src\rsocket.c	/^struct rs_sge {$/;"	s	file:
rs_state	src\rsocket.c	/^enum rs_state {$/;"	g	file:
rs_svc	src\rsocket.c	/^struct rs_svc {$/;"	s	file:
rs_svc_add_rs	src\rsocket.c	/^static int rs_svc_add_rs(struct rs_svc *svc, struct rsocket *rs)$/;"	f	file:
rs_svc_grow_sets	src\rsocket.c	/^static int rs_svc_grow_sets(struct rs_svc *svc, int grow_size)$/;"	f	file:
rs_svc_index	src\rsocket.c	/^static int rs_svc_index(struct rs_svc *svc, struct rsocket *rs)$/;"	f	file:
rs_svc_msg	src\rsocket.c	/^struct rs_svc_msg {$/;"	s	file:
rs_svc_rm_rs	src\rsocket.c	/^static int rs_svc_rm_rs(struct rs_svc *svc, struct rsocket *rs)$/;"	f	file:
rs_update_credits	src\rsocket.c	/^static void rs_update_credits(struct rsocket *rs)$/;"	f	file:
rs_value_to_scale	src\rsocket.c	/^static int rs_value_to_scale(int value, int bits)$/;"	f	file:
rs_wr_data	src\rsocket.c	155;"	d	file:
rs_wr_is_msg_send	src\rsocket.c	154;"	d	file:
rs_wr_is_recv	src\rsocket.c	153;"	d	file:
rs_writable	src\rsocket.c	/^	rs_writable 	   =		    0x0200,$/;"	e	enum:rs_state	file:
rs_write_data	src\rsocket.c	/^static int rs_write_data(struct rsocket *rs,$/;"	f	file:
rs_write_direct	src\rsocket.c	/^static int rs_write_direct(struct rsocket *rs, struct rs_iomap *iom, uint64_t offset,$/;"	f	file:
rs_write_iomap	src\rsocket.c	/^static int rs_write_iomap(struct rsocket *rs, struct rs_iomap_mr *iomr,$/;"	f	file:
rselect	src\rsocket.c	/^int rselect(int nfds, fd_set *readfds, fd_set *writefds,$/;"	f
rsend	src\rsocket.c	/^ssize_t rsend(int socket, const void *buf, size_t len, int flags)$/;"	f
rsendmsg	src\rsocket.c	/^ssize_t rsendmsg(int socket, const struct msghdr *msg, int flags)$/;"	f
rsendto	src\rsocket.c	/^ssize_t rsendto(int socket, const void *buf, size_t len, int flags,$/;"	f
rsendv	src\rsocket.c	/^static ssize_t rsendv(int socket, const struct iovec *iov, int iovcnt, int flags)$/;"	f	file:
rseq_comp	src\rsocket.c	/^			uint16_t	  rseq_comp;$/;"	m	struct:rsocket::__anon66::__anon67	file:
rseq_no	src\rsocket.c	/^			uint16_t	  rseq_no;$/;"	m	struct:rsocket::__anon66::__anon67	file:
rsetsockopt	src\rsocket.c	/^int rsetsockopt(int socket, int level, int optname,$/;"	f
rshutdown	src\rsocket.c	/^int rshutdown(int socket, int how)$/;"	f
rsocket	src\rsocket.c	/^int rsocket(int domain, int type, int protocol)$/;"	f
rsocket	src\rsocket.c	/^struct rsocket {$/;"	s	file:
rss	src\rsocket.c	/^	struct rsocket **rss;$/;"	m	struct:rs_svc	typeref:struct:rs_svc::rsocket	file:
run	src\rsocket.c	/^	void *(*run)(void *svc);$/;"	m	struct:rs_svc	file:
rwrite	src\rsocket.c	/^ssize_t rwrite(int socket, const void *buf, size_t count)$/;"	f
rwritev	src\rsocket.c	/^ssize_t rwritev(int socket, const struct iovec *iov, int iovcnt)$/;"	f
sa	src\rsocket.c	/^	struct sockaddr		sa;$/;"	m	union:socket_addr	typeref:struct:socket_addr::sockaddr	file:
sbuf	src\rsocket.c	/^	uint8_t		  *sbuf;$/;"	m	struct:rsocket	file:
sbuf_bytes_avail	src\rsocket.c	/^			int		  sbuf_bytes_avail;$/;"	m	struct:rsocket::__anon66::__anon67	file:
sbuf_size	src\rsocket.c	/^	uint32_t	  sbuf_size;$/;"	m	struct:rsocket	file:
sge	src\rsocket.c	/^	struct rs_sge sge;$/;"	m	struct:rs_iomap	typeref:struct:rs_iomap::rs_sge	file:
sin	src\rsocket.c	/^	struct sockaddr_in	sin;$/;"	m	union:socket_addr	typeref:struct:socket_addr::sockaddr_in	file:
sin6	src\rsocket.c	/^	struct sockaddr_in6	sin6;$/;"	m	union:socket_addr	typeref:struct:socket_addr::sockaddr_in6	file:
size	src\rsocket.c	/^	int size;$/;"	m	struct:rs_svc	file:
slock	src\rsocket.c	/^	fastlock_t	  slock;$/;"	m	struct:rsocket	file:
smr	src\rsocket.c	/^			struct ibv_mr	  *smr;$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::ibv_mr	file:
smr	src\rsocket.c	/^	struct ibv_mr	  *smr;$/;"	m	struct:ds_qp	typeref:struct:ds_qp::ibv_mr	file:
smsg_free	src\rsocket.c	/^			struct ds_smsg	  *smsg_free;$/;"	m	struct:rsocket::__anon66::__anon68	typeref:struct:rsocket::__anon66::__anon68::ds_smsg	file:
so_opts	src\rsocket.c	/^	uint64_t	  so_opts;$/;"	m	struct:rsocket	file:
sock	src\rsocket.c	/^	int sock[2];$/;"	m	struct:rs_svc	file:
socket_addr	src\rsocket.c	/^union socket_addr {$/;"	u	file:
sq_inline	src\rsocket.c	/^	uint16_t	  sq_inline;$/;"	m	struct:rsocket	file:
sq_size	src\rsocket.c	/^	uint16_t	  sq_size;$/;"	m	struct:rsocket	file:
sqe_avail	src\rsocket.c	/^	int		  sqe_avail;$/;"	m	struct:rsocket	file:
sseq_comp	src\rsocket.c	/^			uint16_t	  sseq_comp;$/;"	m	struct:rsocket::__anon66::__anon67	file:
sseq_no	src\rsocket.c	/^			uint16_t	  sseq_no;$/;"	m	struct:rsocket::__anon66::__anon67	file:
ssgl	src\rsocket.c	/^			struct ibv_sge	  ssgl[2];$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::ibv_sge	file:
state	src\rsocket.c	/^	int		  state;$/;"	m	struct:rsocket	file:
status	src\rsocket.c	/^	uint32_t status;$/;"	m	struct:rs_svc_msg	file:
tag	src\rsocket.c	/^	uint32_t	  tag;$/;"	m	struct:ds_udp_header	file:
target_buffer_list	src\rsocket.c	/^			void		  *target_buffer_list;$/;"	m	struct:rsocket::__anon66::__anon67	file:
target_iomap	src\rsocket.c	/^			struct rs_iomap   *target_iomap;$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::rs_iomap	file:
target_iomap_size	src\rsocket.c	/^			int		  target_iomap_size;$/;"	m	struct:rsocket::__anon66::__anon67	file:
target_iomap_size	src\rsocket.c	/^	uint8_t		  target_iomap_size;$/;"	m	struct:rs_conn_data	file:
target_mr	src\rsocket.c	/^			struct ibv_mr	  *target_mr;$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::ibv_mr	file:
target_sge	src\rsocket.c	/^			int		  target_sge;$/;"	m	struct:rsocket::__anon66::__anon67	file:
target_sgl	src\rsocket.c	/^			volatile struct rs_sge	  *target_sgl;$/;"	m	struct:rsocket::__anon66::__anon67	typeref:struct:rsocket::__anon66::__anon67::rs_sge	file:
target_sgl	src\rsocket.c	/^	struct rs_sge	  target_sgl;$/;"	m	struct:rs_conn_data	typeref:struct:rs_conn_data::rs_sge	file:
tcp_opts	src\rsocket.c	/^			uint64_t	  tcp_opts;$/;"	m	struct:rsocket::__anon66::__anon67	file:
tcp_svc	src\rsocket.c	/^static struct rs_svc tcp_svc = {$/;"	v	typeref:struct:rs_svc	file:
tcp_svc_process_sock	src\rsocket.c	/^static void tcp_svc_process_sock(struct rs_svc *svc)$/;"	f	file:
tcp_svc_run	src\rsocket.c	/^static void *tcp_svc_run(void *arg)$/;"	f	file:
tcp_svc_send_keepalive	src\rsocket.c	/^static void tcp_svc_send_keepalive(struct rsocket *rs)$/;"	f	file:
tcp_svc_timeouts	src\rsocket.c	/^static uint32_t *tcp_svc_timeouts;$/;"	v	file:
type	src\rsocket.c	/^	int		  type;$/;"	m	struct:rsocket	file:
udp_sock	src\rsocket.c	/^			int		  udp_sock;$/;"	m	struct:rsocket::__anon66::__anon68	file:
udp_svc	src\rsocket.c	/^static struct rs_svc udp_svc = {$/;"	v	typeref:struct:rs_svc	file:
udp_svc_create_ah	src\rsocket.c	/^static void udp_svc_create_ah(struct rsocket *rs, struct ds_dest *dest, uint32_t qpn)$/;"	f	file:
udp_svc_fds	src\rsocket.c	/^static struct pollfd *udp_svc_fds;$/;"	v	typeref:struct:pollfd	file:
udp_svc_forward	src\rsocket.c	/^static void udp_svc_forward(struct rsocket *rs, void *buf, size_t len,$/;"	f	file:
udp_svc_path_bits	src\rsocket.c	/^static uint8_t udp_svc_path_bits(struct ds_dest *dest)$/;"	f	file:
udp_svc_process_rs	src\rsocket.c	/^static void udp_svc_process_rs(struct rsocket *rs)$/;"	f	file:
udp_svc_process_sock	src\rsocket.c	/^static void udp_svc_process_sock(struct rs_svc *svc)$/;"	f	file:
udp_svc_run	src\rsocket.c	/^static void *udp_svc_run(void *arg)$/;"	f	file:
udp_svc_sgid_index	src\rsocket.c	/^static uint8_t udp_svc_sgid_index(struct ds_dest *dest, union ibv_gid *sgid)$/;"	f	file:
udp_svc_valid_udp_hdr	src\rsocket.c	/^static int udp_svc_valid_udp_hdr(struct ds_udp_header *udp_hdr,$/;"	f	file:
unack_cqe	src\rsocket.c	/^	int		  unack_cqe;$/;"	m	struct:rsocket	file:
version	src\rsocket.c	/^	uint8_t		  version;$/;"	m	struct:ds_header	file:
version	src\rsocket.c	/^	uint8_t		  version;$/;"	m	struct:ds_udp_header	file:
version	src\rsocket.c	/^	uint8_t		  version;$/;"	m	struct:rs_conn_data	file:
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
